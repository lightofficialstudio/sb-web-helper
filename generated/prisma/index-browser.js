
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.AnswerKeyScalarFieldEnum = {
  ID: 'ID',
  Score: 'Score',
  Answer: 'Answer',
  Indicator: 'Indicator',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  ExamID: 'ExamID',
  TExamExamID: 'TExamExamID',
  Section: 'Section'
};

exports.Prisma.APIConfigurationScalarFieldEnum = {
  ConfigurationID: 'ConfigurationID',
  Name: 'Name',
  Value: 'Value'
};

exports.Prisma.APILogScalarFieldEnum = {
  ID: 'ID',
  Info: 'Info',
  Balance: 'Balance',
  OldBalance: 'OldBalance',
  Tstamp: 'Tstamp',
  UpdatedTo: 'UpdatedTo',
  SchoolID: 'SchoolID'
};

exports.Prisma.APIMemoryDataScalarFieldEnum = {
  ID: 'ID',
  Name: 'Name',
  Data: 'Data',
  TStamp: 'TStamp'
};

exports.Prisma.APIResponseScalarFieldEnum = {
  LogID: 'LogID',
  SchoolID: 'SchoolID',
  APIRequest: 'APIRequest',
  APIResponse: 'APIResponse',
  MethodName: 'MethodName',
  Tstamp: 'Tstamp',
  UserID: 'UserID',
  CardID: 'CardID',
  ResponseTime: 'ResponseTime',
  DeviceTime: 'DeviceTime',
  SourceIP: 'SourceIP'
};

exports.Prisma.APIResponseDevScalarFieldEnum = {
  LogID: 'LogID',
  SchoolID: 'SchoolID',
  APIRequest: 'APIRequest',
  APIResponse: 'APIResponse',
  MethodName: 'MethodName',
  Tstamp: 'Tstamp',
  UserID: 'UserID',
  CardID: 'CardID',
  ResponseTime: 'ResponseTime',
  DeviceTime: 'DeviceTime'
};

exports.Prisma.APIResponseErrorsScalarFieldEnum = {
  LogID: 'LogID',
  SchoolID: 'SchoolID',
  APIRequest: 'APIRequest',
  APIResponseErrors: 'APIResponseErrors',
  MethodName: 'MethodName',
  Tstamp: 'Tstamp',
  UserID: 'UserID',
  CardID: 'CardID',
  ResponseTime: 'ResponseTime'
};

exports.Prisma.APISampleRequestScalarFieldEnum = {
  APIRequestID: 'APIRequestID',
  APIRequest: 'APIRequest',
  MethodPrefix: 'MethodPrefix',
  MethodName: 'MethodName',
  MethodType: 'MethodType',
  Tstatmp: 'Tstatmp'
};

exports.Prisma.ApplicationConfigurationScalarFieldEnum = {
  ID: 'ID',
  Name: 'Name',
  Value: 'Value',
  Tstamp: 'Tstamp'
};

exports.Prisma.Aspnet_ApplicationsScalarFieldEnum = {
  ApplicationName: 'ApplicationName',
  LoweredApplicationName: 'LoweredApplicationName',
  ApplicationId: 'ApplicationId',
  Description: 'Description'
};

exports.Prisma.Aspnet_MembershipScalarFieldEnum = {
  ApplicationId: 'ApplicationId',
  UserId: 'UserId',
  Password: 'Password',
  PasswordFormat: 'PasswordFormat',
  PasswordSalt: 'PasswordSalt',
  MobilePIN: 'MobilePIN',
  Email: 'Email',
  LoweredEmail: 'LoweredEmail',
  PasswordQuestion: 'PasswordQuestion',
  PasswordAnswer: 'PasswordAnswer',
  IsApproved: 'IsApproved',
  IsLockedOut: 'IsLockedOut',
  CreateDate: 'CreateDate',
  LastLoginDate: 'LastLoginDate',
  LastPasswordChangedDate: 'LastPasswordChangedDate',
  LastLockoutDate: 'LastLockoutDate',
  FailedPasswordAttemptCount: 'FailedPasswordAttemptCount',
  FailedPasswordAttemptWindowStart: 'FailedPasswordAttemptWindowStart',
  FailedPasswordAnswerAttemptCount: 'FailedPasswordAnswerAttemptCount',
  FailedPasswordAnswerAttemptWindowStart: 'FailedPasswordAnswerAttemptWindowStart',
  Comment: 'Comment'
};

exports.Prisma.Aspnet_PathsScalarFieldEnum = {
  ApplicationId: 'ApplicationId',
  PathId: 'PathId',
  Path: 'Path',
  LoweredPath: 'LoweredPath'
};

exports.Prisma.Aspnet_PersonalizationAllUsersScalarFieldEnum = {
  PathId: 'PathId',
  PageSettings: 'PageSettings',
  LastUpdatedDate: 'LastUpdatedDate'
};

exports.Prisma.Aspnet_PersonalizationPerUserScalarFieldEnum = {
  Id: 'Id',
  PathId: 'PathId',
  UserId: 'UserId',
  PageSettings: 'PageSettings',
  LastUpdatedDate: 'LastUpdatedDate'
};

exports.Prisma.Aspnet_ProfileScalarFieldEnum = {
  UserId: 'UserId',
  PropertyNames: 'PropertyNames',
  PropertyValuesString: 'PropertyValuesString',
  PropertyValuesBinary: 'PropertyValuesBinary',
  LastUpdatedDate: 'LastUpdatedDate'
};

exports.Prisma.Aspnet_RolesScalarFieldEnum = {
  ApplicationId: 'ApplicationId',
  RoleId: 'RoleId',
  RoleName: 'RoleName',
  LoweredRoleName: 'LoweredRoleName',
  Description: 'Description'
};

exports.Prisma.Aspnet_SchemaVersionsScalarFieldEnum = {
  Feature: 'Feature',
  CompatibleSchemaVersion: 'CompatibleSchemaVersion',
  IsCurrentVersion: 'IsCurrentVersion'
};

exports.Prisma.Aspnet_UsersScalarFieldEnum = {
  ApplicationId: 'ApplicationId',
  UserId: 'UserId',
  UserName: 'UserName',
  LoweredUserName: 'LoweredUserName',
  MobileAlias: 'MobileAlias',
  IsAnonymous: 'IsAnonymous',
  LastActivityDate: 'LastActivityDate'
};

exports.Prisma.Aspnet_UsersInRolesScalarFieldEnum = {
  UserId: 'UserId',
  RoleId: 'RoleId'
};

exports.Prisma.Aspnet_WebEvent_EventsScalarFieldEnum = {
  EventId: 'EventId',
  EventTimeUtc: 'EventTimeUtc',
  EventTime: 'EventTime',
  EventType: 'EventType',
  EventSequence: 'EventSequence',
  EventOccurrence: 'EventOccurrence',
  EventCode: 'EventCode',
  EventDetailCode: 'EventDetailCode',
  Message: 'Message',
  ApplicationPath: 'ApplicationPath',
  ApplicationVirtualPath: 'ApplicationVirtualPath',
  MachineName: 'MachineName',
  RequestUrl: 'RequestUrl',
  ExceptionType: 'ExceptionType',
  Details: 'Details'
};

exports.Prisma.BBLTransactionScalarFieldEnum = {
  TransactionID: 'TransactionID',
  payeeId: 'payeeId',
  transDate: 'transDate',
  transTime: 'transTime',
  transRef: 'transRef',
  channel: 'channel',
  termId: 'termId',
  amount: 'amount',
  reference1: 'reference1',
  reference2: 'reference2',
  fromBank: 'fromBank',
  retryFlag: 'retryFlag',
  InvoiceID: 'InvoiceID',
  SchoolID: 'SchoolID',
  ErrorCode: 'ErrorCode',
  ErrorMessage: 'ErrorMessage',
  VerifyDate: 'VerifyDate',
  VerifyCode: 'VerifyCode',
  VerifyStatus: 'VerifyStatus',
  NotifyDate: 'NotifyDate',
  NotifyCode: 'NotifyCode',
  NotifyStatus: 'NotifyStatus'
};

exports.Prisma.CommandLogScalarFieldEnum = {
  ID: 'ID',
  DatabaseName: 'DatabaseName',
  SchemaName: 'SchemaName',
  ObjectName: 'ObjectName',
  ObjectType: 'ObjectType',
  IndexName: 'IndexName',
  IndexType: 'IndexType',
  StatisticsName: 'StatisticsName',
  PartitionNumber: 'PartitionNumber',
  ExtendedInfo: 'ExtendedInfo',
  Command: 'Command',
  CommandType: 'CommandType',
  StartTime: 'StartTime',
  EndTime: 'EndTime',
  ErrorNumber: 'ErrorNumber',
  ErrorMessage: 'ErrorMessage'
};

exports.Prisma.DailyProductSalesScalarFieldEnum = {
  SellDetailsID: 'SellDetailsID',
  nSell: 'nSell',
  nOrder: 'nOrder',
  nProduct: 'nProduct',
  nNumber: 'nNumber',
  cDel: 'cDel',
  nPrice: 'nPrice',
  nCost: 'nCost',
  SchoolID: 'SchoolID',
  dSell: 'dSell',
  dayCancal: 'dayCancal',
  sID: 'sID',
  sID2: 'sID2',
  ShopID: 'ShopID'
};

exports.Prisma.DailySalesScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  ShopID: 'ShopID',
  dSell: 'dSell',
  sID: 'sID',
  sID2: 'sID2',
  sEmp: 'sEmp',
  nTotal: 'nTotal',
  CardID: 'CardID',
  TStamp: 'TStamp'
};

exports.Prisma.DashboardDataScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  SchoolName: 'SchoolName',
  NoofStudent: 'NoofStudent',
  NoOfTeacher: 'NoOfTeacher',
  BusinessDate: 'BusinessDate',
  AppAttendance: 'AppAttendance',
  Card: 'Card',
  Camera: 'Camera',
  Subject: 'Subject',
  Leave: 'Leave',
  Invoices: 'Invoices',
  Sales: 'Sales',
  NoOfSales: 'NoOfSales',
  CanteenSales: 'CanteenSales',
  NoOfCanteenSales: 'NoOfCanteenSales',
  SchoolTopup: 'SchoolTopup',
  NoOfSchoolTopup: 'NoOfSchoolTopup',
  OnlineTopup: 'OnlineTopup',
  NoOfOnlineTopup: 'NoOfOnlineTopup',
  TutionReceive: 'TutionReceive',
  NoOfDevice: 'NoOfDevice',
  UserLog: 'UserLog',
  ClassOnline: 'ClassOnline',
  GradeEntry: 'GradeEntry',
  ExamGrade: 'ExamGrade',
  Exam: 'Exam',
  Library: 'Library',
  HomeVisit: 'HomeVisit',
  SDQ: 'SDQ',
  EQ: 'EQ',
  TotalLogs: 'TotalLogs',
  Tstamp: 'Tstamp'
};

exports.Prisma.DeviceDailyStatusScalarFieldEnum = {
  DeviceStatusID: 'DeviceStatusID',
  SchoolID: 'SchoolID',
  DeviceID: 'DeviceID',
  Online: 'Online',
  OnlineTime: 'OnlineTime',
  Login: 'Login',
  LoginTime: 'LoginTime',
  LogOut: 'LogOut',
  LogoutTime: 'LogoutTime',
  Tstamp: 'Tstamp',
  BusinessDate: 'BusinessDate'
};

exports.Prisma.DeviceUpdateStatusScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  DeviceID: 'DeviceID',
  UserID: 'UserID',
  NeedToUpdate: 'NeedToUpdate',
  Tstamp: 'Tstamp',
  ResponseStatus: 'ResponseStatus'
};

exports.Prisma.ExcelExportDataScalarFieldEnum = {
  ExportID: 'ExportID',
  Name: 'Name',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  nMoney: 'nMoney',
  Status: 'Status',
  Tstamp: 'Tstamp',
  Success: 'Success',
  RecordExists: 'RecordExists',
  Remarks: 'Remarks'
};

exports.Prisma.IdentityTableScalarFieldEnum = {
  TableName: 'TableName',
  OldID: 'OldID',
  NewID: 'NewID',
  ID: 'ID'
};

exports.Prisma.KPromptPayAccessTokenScalarFieldEnum = {
  ID: 'ID',
  AccessToken: 'AccessToken',
  ClientID: 'ClientID',
  DeveloperEmail: 'DeveloperEmail',
  ExpiresIn: 'ExpiresIn',
  Scope: 'Scope',
  Status: 'Status',
  TokenType: 'TokenType',
  CreateDate: 'CreateDate'
};

exports.Prisma.KPromptPayTransactionScalarFieldEnum = {
  TransactionID: 'TransactionID',
  SchoolID: 'SchoolID',
  ShopID: 'ShopID',
  IMEI: 'IMEI',
  PartnerTxnUID: 'PartnerTxnUID',
  QRType: 'QRType',
  TxnAmount: 'TxnAmount',
  TxnCurrencyCode: 'TxnCurrencyCode',
  CreateDate: 'CreateDate',
  StatusCode: 'StatusCode',
  ErrorCode: 'ErrorCode',
  ErrorDesc: 'ErrorDesc',
  TxnNo: 'TxnNo',
  UpdateDate: 'UpdateDate',
  UserID: 'UserID',
  TxnStatus: 'TxnStatus',
  LoyaltyId: 'LoyaltyId',
  OrigPartnerTxnUID: 'OrigPartnerTxnUID',
  Method: 'Method',
  SellGuID: 'SellGuID',
  AppName: 'AppName',
  SellDetail: 'SellDetail'
};

exports.Prisma.KPromptPayTransactionInquiryScalarFieldEnum = {
  TransactionID: 'TransactionID',
  SchoolID: 'SchoolID',
  PartnerTxnUID: 'PartnerTxnUID',
  OrigPartnerTxnUID: 'OrigPartnerTxnUID',
  Method: 'Method',
  ErrorCode: 'ErrorCode',
  ErrorDesc: 'ErrorDesc',
  StatusCode: 'StatusCode',
  LoyaltyId: 'LoyaltyId',
  TxnNo: 'TxnNo',
  TxnStatus: 'TxnStatus',
  CreateDate: 'CreateDate'
};

exports.Prisma.KResChargeScalarFieldEnum = {
  Year: 'Year',
  ResChargeID: 'ResChargeID',
  SchoolID: 'SchoolID',
  TransID: 'TransID',
  Data: 'Data',
  Tstamp: 'Tstamp'
};

exports.Prisma.KResInquiryQRScalarFieldEnum = {
  Year: 'Year',
  ResInquirryQRId: 'ResInquirryQRId',
  TransID: 'TransID',
  ChargeID: 'ChargeID',
  Object: 'Object',
  Amount: 'Amount',
  Currency: 'Currency',
  Description: 'Description',
  TransactionState: 'TransactionState',
  ReferenceOrder: 'ReferenceOrder',
  Created: 'Created',
  OrderID: 'OrderID',
  Status: 'Status',
  LiveMode: 'LiveMode',
  MetaData: 'MetaData',
  FailureCode: 'FailureCode',
  FailureMessage: 'FailureMessage',
  SourceID: 'SourceID',
  SourceObject: 'SourceObject',
  SourceBrand: 'SourceBrand',
  SourceCardMasking: 'SourceCardMasking',
  SourceIssuerBank: 'SourceIssuerBank',
  CreateDate: 'CreateDate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.KResOrderScalarFieldEnum = {
  Year: 'Year',
  ResOrderID: 'ResOrderID',
  TransID: 'TransID',
  OrderID: 'OrderID',
  Object: 'Object',
  Amount: 'Amount',
  Currency: 'Currency',
  Description: 'Description',
  SourceType: 'SourceType',
  AdditionalDataMID: 'AdditionalDataMID',
  AdditionalDataTID: 'AdditionalDataTID',
  AdditionalDataSmartpayID: 'AdditionalDataSmartpayID',
  AdditionalDataTerm: 'AdditionalDataTerm',
  CustomerID: 'CustomerID',
  MetaDataItem: 'MetaDataItem',
  MetaDataQty: 'MetaDataQty',
  MetaDataAmount: 'MetaDataAmount',
  ExpireTimeSeconds: 'ExpireTimeSeconds',
  Created: 'Created',
  Status: 'Status',
  ReferenceOrder: 'ReferenceOrder',
  LiveMode: 'LiveMode',
  FailureCode: 'FailureCode',
  FailureMessage: 'FailureMessage',
  CreateDate: 'CreateDate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.KTBApprovalTransactionScalarFieldEnum = {
  ApprovalTransID: 'ApprovalTransID',
  KTBUser: 'KTBUser',
  KTBPassword: 'KTBPassword',
  ComCode: 'ComCode',
  ProdCode: 'ProdCode',
  Command: 'Command',
  BankCode: 'BankCode',
  BankRef: 'BankRef',
  DateTime: 'DateTime',
  EffDate: 'EffDate',
  Amount: 'Amount',
  Channel: 'Channel',
  CusName: 'CusName',
  Ref1: 'Ref1',
  Ref2: 'Ref2',
  Ref3: 'Ref3',
  Ref4: 'Ref4',
  SchoolID: 'SchoolID',
  TransID: 'TransID',
  CreateDate: 'CreateDate',
  UpdateDate: 'UpdateDate',
  RespCode: 'RespCode',
  RespMsg: 'RespMsg'
};

exports.Prisma.KTBPaymentTransactionScalarFieldEnum = {
  PaymentTransID: 'PaymentTransID',
  KTBUser: 'KTBUser',
  KTBPassword: 'KTBPassword',
  ComCode: 'ComCode',
  ProdCode: 'ProdCode',
  Command: 'Command',
  BankCode: 'BankCode',
  BankRef: 'BankRef',
  TranxId: 'TranxId',
  DateTime: 'DateTime',
  EffDate: 'EffDate',
  Amount: 'Amount',
  Channel: 'Channel',
  CusName: 'CusName',
  Ref1: 'Ref1',
  Ref2: 'Ref2',
  Ref3: 'Ref3',
  Ref4: 'Ref4',
  SchoolID: 'SchoolID',
  TransID: 'TransID',
  CreateDate: 'CreateDate',
  UpdateDate: 'UpdateDate',
  RespCode: 'RespCode',
  RespMsg: 'RespMsg'
};

exports.Prisma.KTBTransactionScalarFieldEnum = {
  SchoolID: 'SchoolID',
  Year: 'Year',
  TransactionID: 'TransactionID',
  GUID: 'GUID',
  Ref1: 'Ref1',
  Ref2: 'Ref2',
  IMEI: 'IMEI',
  UserID: 'UserID',
  Amount: 'Amount',
  InvoiceID: 'InvoiceID',
  PaidPaymentID: 'PaidPaymentID',
  ShopID: 'ShopID',
  SellGuID: 'SellGuID',
  AppName: 'AppName',
  SellDetail: 'SellDetail',
  CreateDate: 'CreateDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  ApprovalRespCode: 'ApprovalRespCode',
  ApprovalRespMsg: 'ApprovalRespMsg',
  PaymentRespCode: 'PaymentRespCode',
  PaymentRespMsg: 'PaymentRespMsg'
};

exports.Prisma.KTransactionScalarFieldEnum = {
  Year: 'Year',
  TransactionID: 'TransactionID',
  GUID: 'GUID',
  OrderID: 'OrderID',
  QRID: 'QRID',
  ChargeID: 'ChargeID',
  UserID: 'UserID',
  ReferenceNo: 'ReferenceNo',
  Amount: 'Amount',
  CreateDate: 'CreateDate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  InvoiceID: 'InvoiceID',
  PaidPaymentID: 'PaidPaymentID',
  TokenID: 'TokenID',
  CardID: 'CardID',
  CustomerID: 'CustomerID',
  ErrorCode: 'ErrorCode',
  ErrorMessage: 'ErrorMessage'
};

exports.Prisma.MemorySchoolDBUserScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  sID: 'sID',
  nMoney: 'nMoney',
  UpdatedDate: 'UpdatedDate',
  bUpdatedDB: 'bUpdatedDB',
  SourceIP: 'SourceIP'
};

exports.Prisma.MemorySchoolEmployeesScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  sEmp: 'sEmp',
  nMoney: 'nMoney',
  UpdatedDate: 'UpdatedDate',
  bUpdatedDB: 'bUpdatedDB',
  SourceIP: 'SourceIP'
};

exports.Prisma.MemoryTempCardScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  CardID: 'CardID',
  CardHistoryID: 'CardHistoryID',
  Money: 'Money',
  UpdatedDate: 'UpdatedDate',
  bUpdatedDB: 'bUpdatedDB',
  SourceIP: 'SourceIP'
};

exports.Prisma.ModifiedShopsScalarFieldEnum = {
  ID: 'ID',
  LastModified: 'LastModified',
  ShopModified: 'ShopModified',
  ShopID: 'ShopID'
};

exports.Prisma.ModifiedUsersScalarFieldEnum = {
  ID: 'ID',
  LastModified: 'LastModified',
  UserModified: 'UserModified',
  UserID: 'UserID'
};

exports.Prisma.OfflineSalesScalarFieldEnum = {
  SalesID: 'SalesID',
  SchoolID: 'SchoolID',
  EmployeeID: 'EmployeeID',
  ShopID: 'ShopID',
  UserID: 'UserID',
  cType: 'cType',
  SalesAmount: 'SalesAmount',
  SalesDate: 'SalesDate',
  TempCardHistoryID: 'TempCardHistoryID',
  TempCardID: 'TempCardID',
  DeviceID: 'DeviceID',
  Processed: 'Processed',
  Tstamp: 'Tstamp',
  SalesProductInfo: 'SalesProductInfo',
  Barcode: 'Barcode',
  CardID: 'CardID',
  SourceIP: 'SourceIP'
};

exports.Prisma.PaymentServersDetailsScalarFieldEnum = {
  ID: 'ID',
  IPAddress: 'IPAddress',
  Updated: 'Updated',
  Tstamp: 'Tstamp',
  IsDevMode: 'IsDevMode'
};

exports.Prisma.PTDailySalesAPIScalarFieldEnum = {
  ID: 'ID',
  JsonData: 'JsonData',
  Status: 'Status',
  ResponseDescription: 'ResponseDescription',
  Tstamp: 'Tstamp'
};

exports.Prisma.SBLoginHistoryScalarFieldEnum = {
  id: 'id',
  nStudentID: 'nStudentID',
  sFirstName: 'sFirstName',
  sLastName: 'sLastName',
  schoolID: 'schoolID',
  sIMEI: 'sIMEI',
  sDeviceOS: 'sDeviceOS',
  sAppName: 'sAppName',
  sAppVersion: 'sAppVersion',
  sIPAddress: 'sIPAddress',
  loginAt: 'loginAt'
};

exports.Prisma.SchoolIDMappingScalarFieldEnum = {
  SchoolID: 'SchoolID',
  Name: 'Name',
  MappingID: 'MappingID',
  Tstamp: 'Tstamp'
};

exports.Prisma.SysdiagramsScalarFieldEnum = {
  name: 'name',
  principal_id: 'principal_id',
  diagram_id: 'diagram_id',
  version: 'version',
  definition: 'definition'
};

exports.Prisma.T_FSDQ_AnswerScalarFieldEnum = {
  T_FSDQ_Answer_Id: 'T_FSDQ_Answer_Id',
  T_FSDQ_Question_Id: 'T_FSDQ_Question_Id',
  T_FSDQ_Point_Point: 'T_FSDQ_Point_Point',
  sId: 'sId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.T_FSDQ_DataScalarFieldEnum = {
  T_FSDQ_Data_Id: 'T_FSDQ_Data_Id',
  T_FSDQ_Data_Datetime: 'T_FSDQ_Data_Datetime',
  sID: 'sID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.T_FSDQ_PointScalarFieldEnum = {
  T_FSDQ_Point_Id: 'T_FSDQ_Point_Id',
  T_FSDQ_Point_Point: 'T_FSDQ_Point_Point',
  T_FSDQ_Question_Id: 'T_FSDQ_Question_Id',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.T_FSDQ_QuestionScalarFieldEnum = {
  T_FSDQ_Question_Id: 'T_FSDQ_Question_Id',
  T_FSDQ_Question_Des: 'T_FSDQ_Question_Des',
  T_FSDQ_Question_Group: 'T_FSDQ_Question_Group',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAPIRequestResponseScalarFieldEnum = {
  ID: 'ID',
  MethodName: 'MethodName',
  ExamID: 'ExamID',
  SchoolID: 'SchoolID',
  StudentID: 'StudentID',
  RequestData: 'RequestData',
  ResponseData: 'ResponseData',
  Tstamp: 'Tstamp',
  ServerIP: 'ServerIP',
  Status: 'Status'
};

exports.Prisma.TApproveEmployeeContactAddressScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  IsPermanentAddress: 'IsPermanentAddress',
  HouseNo: 'HouseNo',
  Moo: 'Moo',
  Village: 'Village',
  Soi: 'Soi',
  Building: 'Building',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeEducationScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  No: 'No',
  EducationInstitution: 'EducationInstitution',
  GraduateStartDate: 'GraduateStartDate',
  GraduateEndDate: 'GraduateEndDate',
  Education: 'Education',
  Major: 'Major',
  Minor: 'Minor',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeFamilyScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  No: 'No',
  FamilyRelationship: 'FamilyRelationship',
  Title: 'Title',
  Name: 'Name',
  Surname: 'Surname',
  Birthday: 'Birthday',
  MaritalStatus: 'MaritalStatus',
  LivingStatus: 'LivingStatus',
  DeathStatus: 'DeathStatus',
  FamilyOccupation: 'FamilyOccupation',
  Education: 'Education',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeHistoryReceivingRoyalDecorationScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  No: 'No',
  YearReceived: 'YearReceived',
  RoyalDecorationClass: 'RoyalDecorationClass',
  Position: 'Position',
  RoyalGovernmentVolumeNo: 'RoyalGovernmentVolumeNo',
  RoyalGovernmentPart: 'RoyalGovernmentPart',
  RoyalGovernmentNo: 'RoyalGovernmentNo',
  Dated: 'Dated',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeHonorScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  No: 'No',
  HonorType: 'HonorType',
  DonatingAgency: 'DonatingAgency',
  YearReceived: 'YearReceived',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeOccupationalLicenseScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  No: 'No',
  ProfessionalLicenseType: 'ProfessionalLicenseType',
  ProfessionalLicenseNumber: 'ProfessionalLicenseNumber',
  ProfessionalLicenseName: 'ProfessionalLicenseName',
  CertificateIssueDate: 'CertificateIssueDate',
  CertificateExpireDate: 'CertificateExpireDate',
  OrganizationIssuingCertificate: 'OrganizationIssuingCertificate',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeePermanentAddressScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  HouseNo: 'HouseNo',
  Moo: 'Moo',
  Village: 'Village',
  Soi: 'Soi',
  Building: 'Building',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeProfileScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  Gender: 'Gender',
  Title: 'Title',
  Name: 'Name',
  Surname: 'Surname',
  NameEn: 'NameEn',
  SurnameEn: 'SurnameEn',
  IDCardNumber: 'IDCardNumber',
  PassportNumber: 'PassportNumber',
  PassportCountry: 'PassportCountry',
  BirthDay: 'BirthDay',
  BloodType: 'BloodType',
  Nationality: 'Nationality',
  Race: 'Race',
  Religion: 'Religion',
  MaritalStatus: 'MaritalStatus',
  SpouseName: 'SpouseName',
  SpouseSurname: 'SpouseSurname',
  PhoneNumber: 'PhoneNumber',
  Email: 'Email',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveEmployeeTrainingScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  No: 'No',
  Type: 'Type',
  Project: 'Project',
  TrainingCourseName: 'TrainingCourseName',
  TrainingStartDate: 'TrainingStartDate',
  TrainingEndDate: 'TrainingEndDate',
  NumberHours: 'NumberHours',
  Location: 'Location',
  Country: 'Country',
  Province: 'Province',
  Expenses: 'Expenses',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult'
};

exports.Prisma.TApproveStudentContactAddressScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  IsPermanentAddress: 'IsPermanentAddress',
  HouseNo: 'HouseNo',
  Soi: 'Soi',
  Moo: 'Moo',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  HousePhone: 'HousePhone',
  LiveWithTitle: 'LiveWithTitle',
  LiveWithName: 'LiveWithName',
  LiveWithSurname: 'LiveWithSurname',
  EmergencyPhone: 'EmergencyPhone',
  LiveWithEmail: 'LiveWithEmail',
  NeighborName: 'NeighborName',
  NeighborSurname: 'NeighborSurname',
  NeighborPhone: 'NeighborPhone',
  HouseStyle: 'HouseStyle',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult',
  RecoveryScript: 'RecoveryScript',
  RecoveryDate: 'RecoveryDate',
  RecoveryBy: 'RecoveryBy'
};

exports.Prisma.TApproveStudentFatherInfoScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  Title: 'Title',
  Name: 'Name',
  Surname: 'Surname',
  NameEn: 'NameEn',
  SurnameEn: 'SurnameEn',
  BirthDay: 'BirthDay',
  IDCardNumber: 'IDCardNumber',
  Race: 'Race',
  Nationality: 'Nationality',
  Religion: 'Religion',
  Education: 'Education',
  HouseNo: 'HouseNo',
  Soi: 'Soi',
  Moo: 'Moo',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  Career: 'Career',
  MonthlyIncome: 'MonthlyIncome',
  WorkPlaces: 'WorkPlaces',
  PhoneNumberHouse: 'PhoneNumberHouse',
  PhoneNumberMobile: 'PhoneNumberMobile',
  PhoneNumberWorkPlace: 'PhoneNumberWorkPlace',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult',
  RecoveryScript: 'RecoveryScript',
  RecoveryDate: 'RecoveryDate',
  RecoveryBy: 'RecoveryBy'
};

exports.Prisma.TApproveStudentMotherInfoScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  Title: 'Title',
  Name: 'Name',
  Surname: 'Surname',
  NameEn: 'NameEn',
  SurnameEn: 'SurnameEn',
  BirthDay: 'BirthDay',
  IDCardNumber: 'IDCardNumber',
  Race: 'Race',
  Nationality: 'Nationality',
  Religion: 'Religion',
  Education: 'Education',
  IsFatherAddress: 'IsFatherAddress',
  HouseNo: 'HouseNo',
  Soi: 'Soi',
  Moo: 'Moo',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  Career: 'Career',
  MonthlyIncome: 'MonthlyIncome',
  WorkPlaces: 'WorkPlaces',
  PhoneNumberHouse: 'PhoneNumberHouse',
  PhoneNumberMobile: 'PhoneNumberMobile',
  PhoneNumberWorkPlace: 'PhoneNumberWorkPlace',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult',
  RecoveryScript: 'RecoveryScript',
  RecoveryDate: 'RecoveryDate',
  RecoveryBy: 'RecoveryBy'
};

exports.Prisma.TApproveStudentParentInfoScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  CopyFrom: 'CopyFrom',
  Relationship: 'Relationship',
  Title: 'Title',
  Name: 'Name',
  Surname: 'Surname',
  NameEn: 'NameEn',
  SurnameEn: 'SurnameEn',
  BirthDay: 'BirthDay',
  IDCardNumber: 'IDCardNumber',
  Race: 'Race',
  Nationality: 'Nationality',
  Religion: 'Religion',
  Education: 'Education',
  HouseNo: 'HouseNo',
  Soi: 'Soi',
  Moo: 'Moo',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  TuitionFee: 'TuitionFee',
  FamilyStatus: 'FamilyStatus',
  Career: 'Career',
  MonthlyIncome: 'MonthlyIncome',
  WorkPlaces: 'WorkPlaces',
  PhoneNumberHouse: 'PhoneNumberHouse',
  PhoneNumberMobile: 'PhoneNumberMobile',
  PhoneNumberWorkPlace: 'PhoneNumberWorkPlace',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult',
  RecoveryScript: 'RecoveryScript',
  RecoveryDate: 'RecoveryDate',
  RecoveryBy: 'RecoveryBy'
};

exports.Prisma.TApproveStudentPermanentAddressScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  HouseCode: 'HouseCode',
  HouseNo: 'HouseNo',
  Soi: 'Soi',
  Moo: 'Moo',
  Road: 'Road',
  Province: 'Province',
  District: 'District',
  SubDistrict: 'SubDistrict',
  PostalCode: 'PostalCode',
  HomePhoneNumber: 'HomePhoneNumber',
  BirthPlace: 'BirthPlace',
  BirthPlaceProvince: 'BirthPlaceProvince',
  BirthPlaceDistrict: 'BirthPlaceDistrict',
  BirthPlaceSubDistrict: 'BirthPlaceSubDistrict',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult',
  RecoveryScript: 'RecoveryScript',
  RecoveryDate: 'RecoveryDate',
  RecoveryBy: 'RecoveryBy'
};

exports.Prisma.TApproveStudentProfileScalarFieldEnum = {
  ID: 'ID',
  Version: 'Version',
  StudentID: 'StudentID',
  SchoolID: 'SchoolID',
  Gender: 'Gender',
  Title: 'Title',
  Name: 'Name',
  Surname: 'Surname',
  NameEn: 'NameEn',
  SurnameEn: 'SurnameEn',
  NameOther: 'NameOther',
  SurnameOther: 'SurnameOther',
  Nickname: 'Nickname',
  NicknameEn: 'NicknameEn',
  BirthDay: 'BirthDay',
  Race: 'Race',
  Nationality: 'Nationality',
  Religion: 'Religion',
  Disability: 'Disability',
  Disadvantaged: 'Disadvantaged',
  PhoneNumber: 'PhoneNumber',
  Email: 'Email',
  NumberMemberInFamily: 'NumberMemberInFamily',
  YouAreChildOfFamily: 'YouAreChildOfFamily',
  HaveBrotherStudyInSchool: 'HaveBrotherStudyInSchool',
  Other: 'Other',
  RequestApproveDate: 'RequestApproveDate',
  ApproveDate: 'ApproveDate',
  ApproveBy: 'ApproveBy',
  ApproveStatus: 'ApproveStatus',
  ApproveComment: 'ApproveComment',
  UserAcknowledge: 'UserAcknowledge',
  EndDateShowResult: 'EndDateShowResult',
  RecoveryScript: 'RecoveryScript',
  RecoveryDate: 'RecoveryDate',
  RecoveryBy: 'RecoveryBy'
};

exports.Prisma.TAssetCategoryScalarFieldEnum = {
  AssetCategoryId: 'AssetCategoryId',
  Code: 'Code',
  Category: 'Category',
  Flag: 'Flag',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAssetCuttingScalarFieldEnum = {
  Year: 'Year',
  AssetCuttingId: 'AssetCuttingId',
  AssetProductId: 'AssetProductId',
  Amount: 'Amount',
  UnitID: 'UnitID',
  Receiver: 'Receiver',
  DepID: 'DepID',
  Status: 'Status',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  DateStamp: 'DateStamp',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAssetGetScalarFieldEnum = {
  Year: 'Year',
  AssetGetId: 'AssetGetId',
  Source: 'Source',
  AssetProductId: 'AssetProductId',
  Amount: 'Amount',
  UnitID: 'UnitID',
  DepID: 'DepID',
  Receiver: 'Receiver',
  DateStamp: 'DateStamp',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAssetProductScalarFieldEnum = {
  AssetCategoryId: 'AssetCategoryId',
  AssetProductId: 'AssetProductId',
  Type: 'Type',
  Product: 'Product',
  UnitID: 'UnitID',
  Flag: 'Flag',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAssetTransactionScalarFieldEnum = {
  Year: 'Year',
  AssetTransactionId: 'AssetTransactionId',
  TransactionType: 'TransactionType',
  TransactionID: 'TransactionID',
  AssetProductId: 'AssetProductId',
  DepID: 'DepID',
  Amount: 'Amount',
  Balance: 'Balance',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  Action: 'Action',
  UnitID: 'UnitID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAssetTransferScalarFieldEnum = {
  Year: 'Year',
  AssetTransferId: 'AssetTransferId',
  AssetProductId: 'AssetProductId',
  Amount: 'Amount',
  UnitID: 'UnitID',
  DepIDRequest: 'DepIDRequest',
  DepIDTransfer: 'DepIDTransfer',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  DateStamp: 'DateStamp',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TAssetWithdrawScalarFieldEnum = {
  Year: 'Year',
  AssetWithdrawId: 'AssetWithdrawId',
  TransactionType: 'TransactionType',
  AssetProductId: 'AssetProductId',
  Amount: 'Amount',
  UnitID: 'UnitID',
  DepID: 'DepID',
  Receiver: 'Receiver',
  DateStamp: 'DateStamp',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  DocumentNo: 'DocumentNo',
  ResponsibleBy: 'ResponsibleBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TB_EQ_AnswerScalarFieldEnum = {
  TB_EQ_Answer_Id: 'TB_EQ_Answer_Id',
  TB_EQ_Question_Id: 'TB_EQ_Question_Id',
  TB_EQ_Point_Point: 'TB_EQ_Point_Point',
  sID: 'sID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TB_EQ_DataScalarFieldEnum = {
  TB_EQ_Data_Id: 'TB_EQ_Data_Id',
  TB_EQ_Data_Datetime: 'TB_EQ_Data_Datetime',
  sID: 'sID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TB_EQ_GroupScalarFieldEnum = {
  TB_EQ_Group_Id: 'TB_EQ_Group_Id',
  TB_EQ_Group_Des: 'TB_EQ_Group_Des',
  TB_EQ_Question_Group: 'TB_EQ_Question_Group',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TB_EQ_PointScalarFieldEnum = {
  TB_EQ_Point_Id: 'TB_EQ_Point_Id',
  TB_EQ_Point_Point: 'TB_EQ_Point_Point',
  TB_EQ_Question_Id: 'TB_EQ_Question_Id',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TB_EQ_QuestionScalarFieldEnum = {
  TB_EQ_Question_Id: 'TB_EQ_Question_Id',
  TB_EQ_Question_Des: 'TB_EQ_Question_Des',
  TB_EQ_Question_Group: 'TB_EQ_Question_Group',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TB_HistorySettingScalarFieldEnum = {
  Fd_HistoryID: 'Fd_HistoryID',
  Fd_FunctionName: 'Fd_FunctionName',
  Fd_SettingData: 'Fd_SettingData',
  Fd_SchoolID: 'Fd_SchoolID',
  Fd_UpdatedDate: 'Fd_UpdatedDate',
  Fd_UpdatedBy: 'Fd_UpdatedBy'
};

exports.Prisma.TBackupCardScalarFieldEnum = {
  CardID: 'CardID',
  SchoolID: 'SchoolID',
  CardName: 'CardName',
  BarCode: 'BarCode',
  NFC: 'NFC',
  NFCReverse: 'NFCReverse',
  NFCEncrypt: 'NFCEncrypt',
  NFCEncryptReverse: 'NFCEncryptReverse',
  Money: 'Money',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  Insurance: 'Insurance'
};

exports.Prisma.TBackupCardHistoryScalarFieldEnum = {
  CardHistoryID: 'CardHistoryID',
  SchoolID: 'SchoolID',
  CardID: 'CardID',
  UserType: 'UserType',
  UserID: 'UserID',
  UserName: 'UserName',
  BorrowingDate: 'BorrowingDate',
  ReturnDate: 'ReturnDate',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  Insurance: 'Insurance'
};

exports.Prisma.TBaseSalaryScalarFieldEnum = {
  nTBaseID: 'nTBaseID',
  sID: 'sID',
  BaseSalary: 'BaseSalary',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TBehaviorScalarFieldEnum = {
  BehaviorId: 'BehaviorId',
  BehaviorName: 'BehaviorName',
  BehaviorNameEN: 'BehaviorNameEN',
  Status: 'Status',
  Type: 'Type',
  Score: 'Score',
  UserAdd: 'UserAdd',
  dAdd: 'dAdd',
  UserUpdate: 'UserUpdate',
  dUpdate: 'dUpdate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  nAutoType: 'nAutoType'
};

exports.Prisma.TBehaviorHistoryScalarFieldEnum = {
  BehaviorId: 'BehaviorId',
  StudentId: 'StudentId',
  BehaviorName: 'BehaviorName',
  BehaviorNameEN: 'BehaviorNameEN',
  Type: 'Type',
  Score: 'Score',
  ResidualScore: 'ResidualScore',
  dAdd: 'dAdd',
  UserAdd: 'UserAdd',
  dUpdate: 'dUpdate',
  UserUpdate: 'UserUpdate',
  Note: 'Note',
  BehaviorHistoryId: 'BehaviorHistoryId',
  dCanCel: 'dCanCel',
  UserCancel: 'UserCancel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  LogDate: 'LogDate',
  ImageURL: 'ImageURL',
  IsHolidayCancel: 'IsHolidayCancel'
};

exports.Prisma.TBehaviorHistory_FilesScalarFieldEnum = {
  BehaviorHistoryId: 'BehaviorHistoryId',
  sFileName: 'sFileName',
  ContentType: 'ContentType',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  nFileId: 'nFileId'
};

exports.Prisma.TBehaviorSettingScalarFieldEnum = {
  Type: 'Type',
  MaxScore: 'MaxScore',
  BehaviorSettingID: 'BehaviorSettingID',
  Late: 'Late',
  Absence: 'Absence',
  BeginLate: 'BeginLate',
  BeginAbsence: 'BeginAbsence',
  ShowMinusSign: 'ShowMinusSign',
  Alert: 'Alert',
  Errand: 'Errand',
  Sick: 'Sick',
  UncheckName: 'UncheckName',
  BeginErrand: 'BeginErrand',
  BeginSick: 'BeginSick',
  BeginUncheckName: 'BeginUncheckName',
  TimeStartCutPoint: 'TimeStartCutPoint',
  AbsenceHalfPoint: 'AbsenceHalfPoint',
  LateSettingTime: 'LateSettingTime',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TBehaviorTimeSettingScalarFieldEnum = {
  BehaviorTimeSettingID: 'BehaviorTimeSettingID',
  SchoolID: 'SchoolID',
  TimeStatr: 'TimeStatr',
  TimeEnd: 'TimeEnd',
  Cut_Point: 'Cut_Point',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TBlackListScalarFieldEnum = {
  nProductID: 'nProductID',
  sID: 'sID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TBranchScalarFieldEnum = {
  BranchId: 'BranchId',
  nTLevel: 'nTLevel',
  BranchName: 'BranchName',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TBranchSpecScalarFieldEnum = {
  BranchSpecId: 'BranchSpecId',
  BranchSubjectId: 'BranchSubjectId',
  BranchSpecName: 'BranchSpecName',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TBranchSubjectScalarFieldEnum = {
  BranchSubjectId: 'BranchSubjectId',
  BranchId: 'BranchId',
  BranchSubjectName: 'BranchSubjectName',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TCalendarScalarFieldEnum = {
  CalendarID: 'CalendarID',
  dDay: 'dDay',
  sDetail: 'sDetail',
  cImportant: 'cImportant',
  cHoly: 'cHoly',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TClassScalarFieldEnum = {
  sClassID: 'sClassID',
  sClass: 'sClass',
  sClassIP: 'sClassIP',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TClassMemberScalarFieldEnum = {
  nClassMemberid: 'nClassMemberid',
  nTeacherHeadid: 'nTeacherHeadid',
  nTeacherAssistOne: 'nTeacherAssistOne',
  nTeacherAssistTwo: 'nTeacherAssistTwo',
  nTermSubLevel2: 'nTermSubLevel2',
  nTerm: 'nTerm',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TClassOnlineScalarFieldEnum = {
  OnlineId: 'OnlineId',
  TermId: 'TermId',
  LevelId: 'LevelId',
  PlanId: 'PlanId',
  TitleName: 'TitleName',
  TeacherId: 'TeacherId',
  SchoolId: 'SchoolId',
  SelectedRoom: 'SelectedRoom',
  cDel: 'cDel',
  ShareId: 'ShareId',
  CreateBy: 'CreateBy',
  Created: 'Created',
  ModifyBy: 'ModifyBy',
  Modfied: 'Modfied'
};

exports.Prisma.TCourseGroupScalarFieldEnum = {
  courseGroupId: 'courseGroupId',
  Description: 'Description',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  MasterCode: 'MasterCode',
  DescriptionEn: 'DescriptionEn'
};

exports.Prisma.TCourseGroupTranslationScalarFieldEnum = {
  GroupTranslationID: 'GroupTranslationID',
  CourseGroupId: 'CourseGroupId',
  Description: 'Description',
  LanguageCode: 'LanguageCode',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TCourseRegisterScalarFieldEnum = {
  couserRegisterId: 'couserRegisterId',
  nTLevel: 'nTLevel',
  sPlaneID: 'sPlaneID',
  courseStatus: 'courseStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TCourseTranslationScalarFieldEnum = {
  CourseTranlationID: 'CourseTranlationID',
  sPlaneID: 'sPlaneID',
  CourseName: 'CourseName',
  CourseCode: 'CourseCode',
  LanguageCode: 'LanguageCode',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TCourseTypeScalarFieldEnum = {
  courseTypeId: 'courseTypeId',
  Description: 'Description',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  nOrder: 'nOrder',
  MasterCode: 'MasterCode',
  DescriptionEn: 'DescriptionEn'
};

exports.Prisma.TCourseTypeTranslationScalarFieldEnum = {
  CourseTypeTransID: 'CourseTypeTransID',
  CourseTypeId: 'CourseTypeId',
  Description: 'Description',
  LanguageCode: 'LanguageCode',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TCurriculumScalarFieldEnum = {
  CurriculumId: 'CurriculumId',
  CurriculumName: 'CurriculumName',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  nYear: 'nYear',
  SchoolId: 'SchoolId',
  IsActive: 'IsActive',
  cDel: 'cDel'
};

exports.Prisma.TDepartmentScalarFieldEnum = {
  DepID: 'DepID',
  userHeadId: 'userHeadId',
  userApproveOne: 'userApproveOne',
  userApproveTwo: 'userApproveTwo',
  departmentName: 'departmentName',
  deleted: 'deleted',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TDocumentStampDateScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  DocType: 'DocType',
  DocDate: 'DocDate'
};

exports.Prisma.TEmpAddressScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  Type: 'Type',
  No: 'No',
  VillageNo: 'VillageNo',
  Village: 'Village',
  Building: 'Building',
  Alley: 'Alley',
  Road: 'Road',
  SubdistrictID: 'SubdistrictID',
  DistrictID: 'DistrictID',
  ProvinceID: 'ProvinceID',
  Postcode: 'Postcode',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmpEducationInfoScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  Institution: 'Institution',
  StudyYear: 'StudyYear',
  GraduationYear: 'GraduationYear',
  LevelID: 'LevelID',
  Major: 'Major',
  MinorSubject: 'MinorSubject',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmpFamilyScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  FamilyRelation: 'FamilyRelation',
  TitleID: 'TitleID',
  FirstName: 'FirstName',
  LastName: 'LastName',
  Birthday: 'Birthday',
  PersonalStatus: 'PersonalStatus',
  LiveStatus: 'LiveStatus',
  DeathStatus: 'DeathStatus',
  FamilyCareer: 'FamilyCareer',
  LevelID: 'LevelID',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel',
  EducationBackground: 'EducationBackground'
};

exports.Prisma.TEmpHonorScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  Type: 'Type',
  Department: 'Department',
  Year: 'Year',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmpInsigniaScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  Year: 'Year',
  Grade: 'Grade',
  Position: 'Position',
  BookNumber: 'BookNumber',
  Part: 'Part',
  Duty: 'Duty',
  Number: 'Number',
  Date: 'Date',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmployeeInfoScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  Code: 'Code',
  FirstNameEn: 'FirstNameEn',
  LastNameEn: 'LastNameEn',
  PassportNumber: 'PassportNumber',
  PassportCountry: 'PassportCountry',
  PassportExpirationDate: 'PassportExpirationDate',
  VisaNo: 'VisaNo',
  VisaExpirationDate: 'VisaExpirationDate',
  WorkPermitNo: 'WorkPermitNo',
  WorkPermitExpirationDate: 'WorkPermitExpirationDate',
  BloodType: 'BloodType',
  Nationality: 'Nationality',
  Ethnicity: 'Ethnicity',
  Religion: 'Religion',
  PersonalStatus: 'PersonalStatus',
  SpouseFirstName: 'SpouseFirstName',
  SpouseLastName: 'SpouseLastName',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmployeesScalarFieldEnum = {
  sEmp: 'sEmp',
  sName: 'sName',
  sLastname: 'sLastname',
  sIdentification: 'sIdentification',
  dBirth: 'dBirth',
  cSex: 'cSex',
  sPhone: 'sPhone',
  sEmail: 'sEmail',
  sPassword: 'sPassword',
  sSubtopic: 'sSubtopic',
  sAddress: 'sAddress',
  sCity: 'sCity',
  sPostalcode: 'sPostalcode',
  sCountry: 'sCountry',
  dUpdate: 'dUpdate',
  sFinger: 'sFinger',
  nMoney: 'nMoney',
  sFinger2: 'sFinger2',
  sClaim: 'sClaim',
  cDel: 'cDel',
  sStatusReport: 'sStatusReport',
  nTimeType: 'nTimeType',
  cType: 'cType',
  sToken: 'sToken',
  sPicture: 'sPicture',
  sProvince: 'sProvince',
  sTumbon: 'sTumbon',
  sSoy: 'sSoy',
  sHomeNumber: 'sHomeNumber',
  sMuu: 'sMuu',
  sRoad: 'sRoad',
  sAumpher: 'sAumpher',
  sPost: 'sPost',
  sTitle: 'sTitle',
  dPicUpdate: 'dPicUpdate',
  nPicversion: 'nPicversion',
  leavecheck: 'leavecheck',
  nJobid: 'nJobid',
  nDepartmentId: 'nDepartmentId',
  gradeSystemAdmin: 'gradeSystemAdmin',
  Village: 'Village',
  Building: 'Building',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DailyUsageLimit: 'DailyUsageLimit',
  nMax: 'nMax',
  sNameEng: 'sNameEng',
  sLastNameEng: 'sLastNameEng'
};

exports.Prisma.TEmployeesNewScalarFieldEnum = {
  sEmp: 'sEmp',
  sName: 'sName',
  sLastname: 'sLastname',
  sIdentification: 'sIdentification',
  dBirth: 'dBirth',
  cSex: 'cSex',
  sPhone: 'sPhone',
  sEmail: 'sEmail',
  sPassword: 'sPassword',
  sSubtopic: 'sSubtopic',
  sAddress: 'sAddress',
  sCity: 'sCity',
  sPostalcode: 'sPostalcode',
  sCountry: 'sCountry',
  dUpdate: 'dUpdate',
  sFinger: 'sFinger',
  nMoney: 'nMoney',
  sFinger2: 'sFinger2',
  sClaim: 'sClaim',
  cDel: 'cDel',
  sStatusReport: 'sStatusReport',
  nTimeType: 'nTimeType',
  cType: 'cType',
  sToken: 'sToken',
  sPicture: 'sPicture',
  sProvince: 'sProvince',
  sTumbon: 'sTumbon',
  sSoy: 'sSoy',
  sHomeNumber: 'sHomeNumber',
  sMuu: 'sMuu',
  sRoad: 'sRoad',
  sAumpher: 'sAumpher',
  sPost: 'sPost',
  sTitle: 'sTitle',
  dPicUpdate: 'dPicUpdate',
  nPicversion: 'nPicversion',
  leavecheck: 'leavecheck',
  nJobid: 'nJobid',
  nDepartmentId: 'nDepartmentId',
  gradeSystemAdmin: 'gradeSystemAdmin',
  Village: 'Village',
  Building: 'Building',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DailyUsageLimit: 'DailyUsageLimit',
  nMax: 'nMax'
};

exports.Prisma.TEmployeeTypeScalarFieldEnum = {
  nTypeId: 'nTypeId',
  nTypeId2: 'nTypeId2',
  Title: 'Title',
  SchoolID: 'SchoolID',
  IsDel: 'IsDel',
  IsActive: 'IsActive',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  MasterCode: 'MasterCode'
};

exports.Prisma.TEmpProfessionalLicenseScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  LicenseType: 'LicenseType',
  LicenseNo: 'LicenseNo',
  LicenseName: 'LicenseName',
  IssuedDate: 'IssuedDate',
  ExpireDate: 'ExpireDate',
  AgencyIssued: 'AgencyIssued',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmpSalaryScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  WorkStatus: 'WorkStatus',
  WorkInEducationDate: 'WorkInEducationDate',
  Salary: 'Salary',
  PositionMoney: 'PositionMoney',
  RetirementDate: 'RetirementDate',
  RemainGovernmentYear: 'RemainGovernmentYear',
  RemainGovernmentMonth: 'RemainGovernmentMonth',
  RemainGovernmentDay: 'RemainGovernmentDay',
  Degree: 'Degree',
  GovernmentOrderDate: 'GovernmentOrderDate',
  WorkStartDate: 'WorkStartDate',
  AcademicStandingMoney: 'AcademicStandingMoney',
  NetSalary: 'NetSalary',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  DayQuit: 'DayQuit'
};

exports.Prisma.TEmpSignerScalarFieldEnum = {
  SignerID: 'SignerID',
  SchoolID: 'SchoolID',
  TermID: 'TermID',
  Position: 'Position',
  DefaultID: 'DefaultID',
  EmpID: 'EmpID',
  Signer: 'Signer',
  IsDefault: 'IsDefault',
  IsDel: 'IsDel',
  IsActive: 'IsActive',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy'
};

exports.Prisma.TEmpTeachingScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  nYear: 'nYear',
  nTerm: 'nTerm',
  courseTypeId: 'courseTypeId',
  SUBJECT_ID: 'SUBJECT_ID',
  sClassID: 'sClassID',
  sRoomID: 'sRoomID',
  HoursPerWeek: 'HoursPerWeek',
  DirectTeaching: 'DirectTeaching',
  CompetentTeaching: 'CompetentTeaching',
  WantTrain: 'WantTrain',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TEmpTOEICScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  TOEICScore: 'TOEICScore',
  InstitutionAnnouncement: 'InstitutionAnnouncement',
  ExpirationDate: 'ExpirationDate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  UpdateBy: 'UpdateBy',
  UpdateDate: 'UpdateDate',
  cDel: 'cDel'
};

exports.Prisma.TEmpTrainingScalarFieldEnum = {
  sEmp: 'sEmp',
  ID: 'ID',
  ProjectName: 'ProjectName',
  TrainingName: 'TrainingName',
  StartDate: 'StartDate',
  EndDate: 'EndDate',
  Place: 'Place',
  ProvinceID: 'ProvinceID',
  Country: 'Country',
  Expenses: 'Expenses',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  Province: 'Province',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel',
  TrainingType: 'TrainingType',
  TrainingHours: 'TrainingHours'
};

exports.Prisma.TExamScalarFieldEnum = {
  ExamID: 'ExamID',
  nTerm: 'nTerm',
  SchoolID: 'SchoolID',
  sPlaneID: 'sPlaneID',
  nTermSubLevel2: 'nTermSubLevel2',
  NameExam: 'NameExam',
  PassScore: 'PassScore',
  ScoreProportion: 'ScoreProportion',
  TypePaper: 'TypePaper',
  TypeExam: 'TypeExam',
  TestKey: 'TestKey',
  nYear: 'nYear',
  CourseGroupId: 'CourseGroupId',
  nTSubLevel: 'nTSubLevel',
  sCreaterName: 'sCreaterName',
  sExamIDLabel: 'sExamIDLabel',
  sTermSubLevel2IDs: 'sTermSubLevel2IDs',
  nTemplateType: 'nTemplateType',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  Created: 'Created',
  Modified: 'Modified',
  sAdminCreater: 'sAdminCreater',
  sAdminModifier: 'sAdminModifier'
};

exports.Prisma.TExamAnswerScalarFieldEnum = {
  AnswerID: 'AnswerID',
  ExamID: 'ExamID',
  SchoolID: 'SchoolID',
  RangeID: 'RangeID',
  AnswerNo: 'AnswerNo',
  No: 'No',
  Answer: 'Answer',
  Score: 'Score',
  Indicator: 'Indicator'
};

exports.Prisma.TExamRangeScalarFieldEnum = {
  RangeID: 'RangeID',
  ExamID: 'ExamID',
  SchoolID: 'SchoolID',
  RangeNo: 'RangeNo',
  FromNo: 'FromNo',
  ToNo: 'ToNo',
  Score: 'Score',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  Created: 'Created',
  Modified: 'Modified'
};

exports.Prisma.TExamResultScalarFieldEnum = {
  id: 'id',
  testCode: 'testCode',
  teacherId: 'teacherId',
  studentId: 'studentId',
  testKey: 'testKey',
  answers: 'answers',
  testDate: 'testDate',
  schoolID: 'schoolID',
  testDateUTC: 'testDateUTC',
  fullScore: 'fullScore',
  studentScore: 'studentScore',
  testImage64: 'testImage64'
};

exports.Prisma.TFaceScanLogScalarFieldEnum = {
  LogID: 'LogID',
  sID: 'sID',
  SchoolID: 'SchoolID',
  LogTime: 'LogTime',
  Temperature: 'Temperature',
  FaceScanUrl: 'FaceScanUrl',
  IsOnline: 'IsOnline'
};

exports.Prisma.TFamilyProfileScalarFieldEnum = {
  sFamilyTitle: 'sFamilyTitle',
  sFamilyName: 'sFamilyName',
  sFamilyLast: 'sFamilyLast',
  sFamilyRace: 'sFamilyRace',
  sFamilyNation: 'sFamilyNation',
  sFamilyReligion: 'sFamilyReligion',
  sFamilyIdCardNumber: 'sFamilyIdCardNumber',
  sFamilyRelate: 'sFamilyRelate',
  sFamilyHomeNumber: 'sFamilyHomeNumber',
  sFamilySoy: 'sFamilySoy',
  sFamilyTumbon: 'sFamilyTumbon',
  sFamilyProvince: 'sFamilyProvince',
  sFamilyMuu: 'sFamilyMuu',
  sFamilyRoad: 'sFamilyRoad',
  sFamilyAumpher: 'sFamilyAumpher',
  sFamilyPost: 'sFamilyPost',
  sPhoneOne: 'sPhoneOne',
  sPhoneTwo: 'sPhoneTwo',
  sPhoneThree: 'sPhoneThree',
  sPhoneMail: 'sPhoneMail',
  sID: 'sID',
  sDeleted: 'sDeleted',
  sFatherTitle: 'sFatherTitle',
  sFatherFirstName: 'sFatherFirstName',
  sFatherLastName: 'sFatherLastName',
  sFatherNation: 'sFatherNation',
  sFatherRace: 'sFatherRace',
  sFatherReligion: 'sFatherReligion',
  sFatherIdCardNumber: 'sFatherIdCardNumber',
  sMotherTitle: 'sMotherTitle',
  sMotherFirstName: 'sMotherFirstName',
  sMotherLastName: 'sMotherLastName',
  sMotherNation: 'sMotherNation',
  sMotherRace: 'sMotherRace',
  sMotherReligion: 'sMotherReligion',
  sMotherIdCardNumber: 'sMotherIdCardNumber',
  sMotherTumbon: 'sMotherTumbon',
  sMotherSoy: 'sMotherSoy',
  sMotherRoad: 'sMotherRoad',
  sMotherProvince: 'sMotherProvince',
  sMotherPost: 'sMotherPost',
  sMotherPhone: 'sMotherPhone',
  sMotherMuu: 'sMotherMuu',
  sMotherHomeNumber: 'sMotherHomeNumber',
  sMotherAumpher: 'sMotherAumpher',
  sFatherTumbon: 'sFatherTumbon',
  sFatherSoy: 'sFatherSoy',
  sFatherRoad: 'sFatherRoad',
  sFatherProvince: 'sFatherProvince',
  sFatherPost: 'sFatherPost',
  sFatherPhone: 'sFatherPhone',
  sFatherMuu: 'sFatherMuu',
  sFatherHomeNumber: 'sFatherHomeNumber',
  sFatherAumpher: 'sFatherAumpher',
  nFamilyID: 'nFamilyID',
  sFamilyNameEN: 'sFamilyNameEN',
  sFamilyLastEN: 'sFamilyLastEN',
  dFamilyBirthDay: 'dFamilyBirthDay',
  nFamilyRequestStudyMoney: 'nFamilyRequestStudyMoney',
  sFamilyGraduated: 'sFamilyGraduated',
  sFamilyJob: 'sFamilyJob',
  sFamilyWorkPlace: 'sFamilyWorkPlace',
  nFamilyIncome: 'nFamilyIncome',
  sFatherNameEN: 'sFatherNameEN',
  sFatherLastEN: 'sFatherLastEN',
  dFatherBirthDay: 'dFatherBirthDay',
  sFatherGraduated: 'sFatherGraduated',
  sFatherJob: 'sFatherJob',
  sFatherWorkPlace: 'sFatherWorkPlace',
  sFatherPhone2: 'sFatherPhone2',
  sFatherPhone3: 'sFatherPhone3',
  nFatherIncome: 'nFatherIncome',
  sMotherNameEN: 'sMotherNameEN',
  sMotherLastEN: 'sMotherLastEN',
  dMotherBirthDay: 'dMotherBirthDay',
  sMotherGraduated: 'sMotherGraduated',
  sMotherJob: 'sMotherJob',
  sMotherWorkPlace: 'sMotherWorkPlace',
  sMotherPhone2: 'sMotherPhone2',
  sMotherPhone3: 'sMotherPhone3',
  nMotherIncome: 'nMotherIncome',
  nSonTotal: 'nSonTotal',
  nRelativeStudyHere: 'nRelativeStudyHere',
  stayWithTitle: 'stayWithTitle',
  stayWithName: 'stayWithName',
  stayWithLast: 'stayWithLast',
  stayWithEmergencyCall: 'stayWithEmergencyCall',
  stayWithEmail: 'stayWithEmail',
  HomeType: 'HomeType',
  friendSID: 'friendSID',
  houseRegistrationNumber: 'houseRegistrationNumber',
  houseRegistrationMuu: 'houseRegistrationMuu',
  houseRegistrationSoy: 'houseRegistrationSoy',
  houseRegistrationRoad: 'houseRegistrationRoad',
  houseRegistrationProvince: 'houseRegistrationProvince',
  houseRegistrationAumpher: 'houseRegistrationAumpher',
  houseRegistrationTumbon: 'houseRegistrationTumbon',
  houseRegistrationPost: 'houseRegistrationPost',
  houseRegistrationPhone: 'houseRegistrationPhone',
  bornFrom: 'bornFrom',
  bornFromProvince: 'bornFromProvince',
  bornFromAumpher: 'bornFromAumpher',
  bornFromTumbon: 'bornFromTumbon',
  friendName: 'friendName',
  friendLastName: 'friendLastName',
  friendSubLevel: 'friendSubLevel',
  friendPhone: 'friendPhone',
  familyStatus: 'familyStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TGradeAttendanceScalarFieldEnum = {
  nGradeAttendanceId: 'nGradeAttendanceId',
  nGradeId: 'nGradeId',
  sID: 'sID',
  week1_1: 'week1_1',
  week1_2: 'week1_2',
  week1_3: 'week1_3',
  week1_4: 'week1_4',
  week1_5: 'week1_5',
  week1_6: 'week1_6',
  week1_7: 'week1_7',
  week2_1: 'week2_1',
  week2_2: 'week2_2',
  week2_3: 'week2_3',
  week2_4: 'week2_4',
  week2_5: 'week2_5',
  week2_6: 'week2_6',
  week2_7: 'week2_7',
  week3_1: 'week3_1',
  week3_2: 'week3_2',
  week3_3: 'week3_3',
  week3_4: 'week3_4',
  week3_5: 'week3_5',
  week3_6: 'week3_6',
  week3_7: 'week3_7',
  week4_1: 'week4_1',
  week4_2: 'week4_2',
  week4_3: 'week4_3',
  week4_4: 'week4_4',
  week4_5: 'week4_5',
  week4_6: 'week4_6',
  week4_7: 'week4_7',
  week5_1: 'week5_1',
  week5_2: 'week5_2',
  week5_3: 'week5_3',
  week5_4: 'week5_4',
  week5_5: 'week5_5',
  week5_6: 'week5_6',
  week5_7: 'week5_7',
  week6_1: 'week6_1',
  week6_2: 'week6_2',
  week6_3: 'week6_3',
  week6_4: 'week6_4',
  week6_5: 'week6_5',
  week6_6: 'week6_6',
  week6_7: 'week6_7',
  week7_1: 'week7_1',
  week7_2: 'week7_2',
  week7_3: 'week7_3',
  week7_4: 'week7_4',
  week7_5: 'week7_5',
  week7_6: 'week7_6',
  week7_7: 'week7_7',
  week8_1: 'week8_1',
  week8_2: 'week8_2',
  week8_3: 'week8_3',
  week8_4: 'week8_4',
  week8_5: 'week8_5',
  week8_6: 'week8_6',
  week8_7: 'week8_7',
  week9_1: 'week9_1',
  week9_2: 'week9_2',
  week9_3: 'week9_3',
  week9_4: 'week9_4',
  week9_5: 'week9_5',
  week9_6: 'week9_6',
  week9_7: 'week9_7',
  week10_1: 'week10_1',
  week10_2: 'week10_2',
  week10_3: 'week10_3',
  week10_4: 'week10_4',
  week10_5: 'week10_5',
  week10_6: 'week10_6',
  week10_7: 'week10_7',
  week11_1: 'week11_1',
  week11_2: 'week11_2',
  week11_3: 'week11_3',
  week11_4: 'week11_4',
  week11_5: 'week11_5',
  week11_6: 'week11_6',
  week11_7: 'week11_7',
  week12_1: 'week12_1',
  week12_2: 'week12_2',
  week12_3: 'week12_3',
  week12_4: 'week12_4',
  week12_5: 'week12_5',
  week12_6: 'week12_6',
  week12_7: 'week12_7',
  week13_1: 'week13_1',
  week13_2: 'week13_2',
  week13_3: 'week13_3',
  week13_4: 'week13_4',
  week13_5: 'week13_5',
  week13_6: 'week13_6',
  week13_7: 'week13_7',
  week14_1: 'week14_1',
  week14_2: 'week14_2',
  week14_3: 'week14_3',
  week14_4: 'week14_4',
  week14_5: 'week14_5',
  week14_6: 'week14_6',
  week14_7: 'week14_7',
  week15_1: 'week15_1',
  week15_2: 'week15_2',
  week15_3: 'week15_3',
  week15_4: 'week15_4',
  week15_5: 'week15_5',
  week15_6: 'week15_6',
  week15_7: 'week15_7',
  week16_1: 'week16_1',
  week16_2: 'week16_2',
  week16_3: 'week16_3',
  week16_4: 'week16_4',
  week16_5: 'week16_5',
  week16_6: 'week16_6',
  week16_7: 'week16_7',
  week17_1: 'week17_1',
  week17_2: 'week17_2',
  week17_3: 'week17_3',
  week17_4: 'week17_4',
  week17_5: 'week17_5',
  week17_6: 'week17_6',
  week17_7: 'week17_7',
  week18_1: 'week18_1',
  week18_2: 'week18_2',
  week18_3: 'week18_3',
  week18_4: 'week18_4',
  week18_5: 'week18_5',
  week18_6: 'week18_6',
  week18_7: 'week18_7',
  week19_1: 'week19_1',
  week19_2: 'week19_2',
  week19_3: 'week19_3',
  week19_4: 'week19_4',
  week19_5: 'week19_5',
  week19_6: 'week19_6',
  week19_7: 'week19_7',
  week20_1: 'week20_1',
  week20_2: 'week20_2',
  week20_3: 'week20_3',
  week20_4: 'week20_4',
  week20_5: 'week20_5',
  week20_6: 'week20_6',
  week20_7: 'week20_7',
  totalcome: 'totalcome',
  totalskip: 'totalskip',
  totalsick: 'totalsick',
  totalleave: 'totalleave',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TGradeCheckScalarFieldEnum = {
  nGradeCheckId: 'nGradeCheckId',
  teacherId: 'teacherId',
  PlanId: 'PlanId',
  Deleted: 'Deleted',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TGradeLockScalarFieldEnum = {
  nGradeLock: 'nGradeLock',
  nGradeId: 'nGradeId',
  scoreGrade1: 'scoreGrade1',
  scoreGrade2: 'scoreGrade2',
  scoreGrade3: 'scoreGrade3',
  scoreGrade4: 'scoreGrade4',
  scoreGrade5: 'scoreGrade5',
  scoreGrade6: 'scoreGrade6',
  scoreGrade7: 'scoreGrade7',
  scoreGrade8: 'scoreGrade8',
  scoreGrade9: 'scoreGrade9',
  scoreGrade10: 'scoreGrade10',
  scoreGrade11: 'scoreGrade11',
  scoreGrade12: 'scoreGrade12',
  scoreGrade13: 'scoreGrade13',
  scoreGrade14: 'scoreGrade14',
  scoreGrade15: 'scoreGrade15',
  scoreGrade16: 'scoreGrade16',
  scoreGrade17: 'scoreGrade17',
  scoreGrade18: 'scoreGrade18',
  scoreGrade19: 'scoreGrade19',
  scoreGrade20: 'scoreGrade20',
  scoreBehavior1: 'scoreBehavior1',
  scoreBehavior2: 'scoreBehavior2',
  scoreBehavior3: 'scoreBehavior3',
  scoreBehavior4: 'scoreBehavior4',
  scoreBehavior5: 'scoreBehavior5',
  scoreBehavior6: 'scoreBehavior6',
  scoreBehavior7: 'scoreBehavior7',
  scoreBehavior8: 'scoreBehavior8',
  scoreBehavior9: 'scoreBehavior9',
  scoreBehavior10: 'scoreBehavior10',
  scoreMidTerm: 'scoreMidTerm',
  scoreFinalTerm: 'scoreFinalTerm',
  scoreCheewat1: 'scoreCheewat1',
  scoreCheewat2: 'scoreCheewat2',
  scoreCheewat3: 'scoreCheewat3',
  scoreCheewat4: 'scoreCheewat4',
  scoreCheewat5: 'scoreCheewat5',
  scoreCheewat6: 'scoreCheewat6',
  scoreCheewat7: 'scoreCheewat7',
  scoreCheewat8: 'scoreCheewat8',
  scoreCheewat9: 'scoreCheewat9',
  scoreCheewat10: 'scoreCheewat10',
  scoreCheewat11: 'scoreCheewat11',
  scoreCheewat12: 'scoreCheewat12',
  scoreCheewat13: 'scoreCheewat13',
  scoreCheewat14: 'scoreCheewat14',
  scoreCheewat15: 'scoreCheewat15',
  scoreCheewat16: 'scoreCheewat16',
  scoreCheewat17: 'scoreCheewat17',
  scoreCheewat18: 'scoreCheewat18',
  scoreCheewat19: 'scoreCheewat19',
  scoreCheewat20: 'scoreCheewat20',
  scoreMid1: 'scoreMid1',
  scoreMid2: 'scoreMid2',
  scoreMid3: 'scoreMid3',
  scoreMid4: 'scoreMid4',
  scoreMid5: 'scoreMid5',
  scoreMid6: 'scoreMid6',
  scoreMid7: 'scoreMid7',
  scoreMid8: 'scoreMid8',
  scoreMid9: 'scoreMid9',
  scoreMid10: 'scoreMid10',
  scoreFinal1: 'scoreFinal1',
  scoreFinal2: 'scoreFinal2',
  scoreFinal3: 'scoreFinal3',
  scoreFinal4: 'scoreFinal4',
  scoreFinal5: 'scoreFinal5',
  scoreFinal6: 'scoreFinal6',
  scoreFinal7: 'scoreFinal7',
  scoreFinal8: 'scoreFinal8',
  scoreFinal9: 'scoreFinal9',
  scoreFinal10: 'scoreFinal10',
  lastUpdate: 'lastUpdate',
  updateByEMP: 'updateByEMP',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TGradeMigrationScalarFieldEnum = {
  GradeMigrationId: 'GradeMigrationId',
  nGradeId: 'nGradeId',
  sID: 'sID',
  AssessmentId: 'AssessmentId',
  ExamID: 'ExamID',
  nTermSubLevel2: 'nTermSubLevel2',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  ApplicationName: 'ApplicationName'
};

exports.Prisma.TGradeRegisterPeriodScalarFieldEnum = {
  nGradeRegisterPeriod: 'nGradeRegisterPeriod',
  nTerm: 'nTerm',
  beforeMidtermStart: 'beforeMidtermStart',
  beforeMidtermEnd: 'beforeMidtermEnd',
  duringMidtermStart: 'duringMidtermStart',
  duringMidtermEnd: 'duringMidtermEnd',
  afterMidtermStart: 'afterMidtermStart',
  afterMidtermEnd: 'afterMidtermEnd',
  FinaltermStart: 'FinaltermStart',
  FinaltermEnd: 'FinaltermEnd',
  ExtraStart: 'ExtraStart',
  ExtraEnd: 'ExtraEnd',
  lastUpdate: 'lastUpdate',
  updateByEmp: 'updateByEmp',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TGradeShareInfoScalarFieldEnum = {
  nGradeShareInfoId: 'nGradeShareInfoId',
  nTerm: 'nTerm',
  sPlaneID: 'sPlaneID',
  from_nTSubLevel2: 'from_nTSubLevel2',
  to_nTSubLevel2: 'to_nTSubLevel2',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TGradeTeacherDescribeScalarFieldEnum = {
  nGradeTeacherDescribe: 'nGradeTeacherDescribe',
  Describe: 'Describe',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TGradeViewRoomListSettingScalarFieldEnum = {
  RoomListSettingId: 'RoomListSettingId',
  GradeViewSettingId: 'GradeViewSettingId',
  nTermSubLevel2: 'nTermSubLevel2',
  ApprovedDate: 'ApprovedDate',
  ApprovedBy: 'ApprovedBy',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  SchoolID: 'SchoolID',
  cDel: 'cDel',
  IsRoomBlocked: 'IsRoomBlocked'
};

exports.Prisma.TGradeViewSettingScalarFieldEnum = {
  GradeViewSettingId: 'GradeViewSettingId',
  nTerm: 'nTerm',
  IsTermApproved: 'IsTermApproved',
  IsAllRoomApproved: 'IsAllRoomApproved',
  SchoolId: 'SchoolId',
  ApprovedDate: 'ApprovedDate',
  ApprovedBy: 'ApprovedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel',
  GradeViewFor100: 'GradeViewFor100',
  IsMidTermApproved: 'IsMidTermApproved',
  IsFinalTermApproved: 'IsFinalTermApproved'
};

exports.Prisma.TGradeViewStudentBlockListSettingScalarFieldEnum = {
  StudentBlockListSettingId: 'StudentBlockListSettingId',
  GradeViewSettingId: 'GradeViewSettingId',
  sID: 'sID',
  BlockedDate: 'BlockedDate',
  BlockedBy: 'BlockedBy',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  IsStudentBlocked: 'IsStudentBlocked',
  SchoolID: 'SchoolID'
};

exports.Prisma.TGroupExamScalarFieldEnum = {
  GroupExamID: 'GroupExamID',
  GroupExamName: 'GroupExamName',
  nGradeId: 'nGradeId',
  UserCreate: 'UserCreate',
  DateCreate: 'DateCreate',
  cDel: 'cDel',
  UserUpdate: 'UserUpdate',
  DateUpdate: 'DateUpdate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TGroupExamDetailScalarFieldEnum = {
  IDColGroup: 'IDColGroup',
  GroupExamID: 'GroupExamID',
  GradeColumnName: 'GradeColumnName',
  UserUpdate: 'UserUpdate',
  DateUpdate: 'DateUpdate',
  status: 'status',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.THealtProfileScalarFieldEnum = {
  nWeight: 'nWeight',
  nHeight: 'nHeight',
  sBlood: 'sBlood',
  sSickFood: 'sSickFood',
  sSickDrug: 'sSickDrug',
  sSickOther: 'sSickOther',
  sSickNormal: 'sSickNormal',
  sSickDanger: 'sSickDanger',
  sID: 'sID',
  sDeleted: 'sDeleted',
  Weight1_1: 'Weight1_1',
  Weight1_2: 'Weight1_2',
  Weight1_3: 'Weight1_3',
  Weight1_4: 'Weight1_4',
  Weight2_1: 'Weight2_1',
  Weight2_2: 'Weight2_2',
  Weight2_3: 'Weight2_3',
  Weight2_4: 'Weight2_4',
  Weight3_1: 'Weight3_1',
  Weight3_2: 'Weight3_2',
  Weight3_3: 'Weight3_3',
  Weight3_4: 'Weight3_4',
  Weight4_1: 'Weight4_1',
  Weight4_2: 'Weight4_2',
  Weight4_3: 'Weight4_3',
  Weight4_4: 'Weight4_4',
  Weight5_1: 'Weight5_1',
  Weight5_2: 'Weight5_2',
  Weight5_3: 'Weight5_3',
  Weight5_4: 'Weight5_4',
  Weight6_1: 'Weight6_1',
  Weight6_2: 'Weight6_2',
  Weight6_3: 'Weight6_3',
  Weight6_4: 'Weight6_4',
  Height1_1: 'Height1_1',
  Height1_2: 'Height1_2',
  Height1_3: 'Height1_3',
  Height1_4: 'Height1_4',
  Height2_1: 'Height2_1',
  Height2_2: 'Height2_2',
  Height2_3: 'Height2_3',
  Height2_4: 'Height2_4',
  Height3_1: 'Height3_1',
  Height3_2: 'Height3_2',
  Height3_3: 'Height3_3',
  Height3_4: 'Height3_4',
  Height4_1: 'Height4_1',
  Height4_2: 'Height4_2',
  Height4_3: 'Height4_3',
  Height4_4: 'Height4_4',
  Height5_1: 'Height5_1',
  Height5_2: 'Height5_2',
  Height5_3: 'Height5_3',
  Height5_4: 'Height5_4',
  Height6_1: 'Height6_1',
  Height6_2: 'Height6_2',
  Height6_3: 'Height6_3',
  Height6_4: 'Height6_4',
  nHealthID: 'nHealthID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.THistoryLogScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  Date: 'Date',
  MenuID: 'MenuID',
  FunctionName: 'FunctionName',
  sID: 'sID',
  sEmp: 'sEmp',
  UpdateBy: 'UpdateBy',
  JsonDetail: 'JsonDetail'
};

exports.Prisma.THolidayScalarFieldEnum = {
  nHoliday: 'nHoliday',
  sEmp: 'sEmp',
  sHoliday: 'sHoliday',
  sHolidayEN: 'sHolidayEN',
  TimeType: 'TimeType',
  sHolidayType: 'sHolidayType',
  dHolidayStart: 'dHolidayStart',
  dHolidayEnd: 'dHolidayEnd',
  cDel: 'cDel',
  sHolidayAll: 'sHolidayAll',
  sWhoSeeThis: 'sWhoSeeThis',
  sColor: 'sColor',
  sGroupTarget: 'sGroupTarget',
  cStatusActive: 'cStatusActive',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.THolidayLogScalarFieldEnum = {
  LogID: 'LogID',
  SchoolID: 'SchoolID',
  Detail: 'Detail',
  Creator: 'Creator',
  Created: 'Created',
  HolidayID: 'HolidayID'
};

exports.Prisma.THolidaySomeScalarFieldEnum = {
  nHolidaySomeID: 'nHolidaySomeID',
  nHoliday: 'nHoliday',
  nTSubLevel: 'nTSubLevel',
  nTimeType: 'nTimeType',
  Deleted: 'Deleted',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.THomeVisitScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  RoomID: 'RoomID',
  StudentID: 'StudentID',
  TermID: 'TermID',
  YearID: 'YearID',
  LINE: 'LINE',
  Facebook: 'Facebook',
  Status: 'Status',
  HaveParents: 'HaveParents',
  Relationship: 'Relationship',
  RelationshipOther: 'RelationshipOther',
  Fullname: 'Fullname',
  PhoneNumber: 'PhoneNumber',
  IDCardNumber: 'IDCardNumber',
  Occupation: 'Occupation',
  OccupationOther: 'OccupationOther',
  HighestEducation: 'HighestEducation',
  WelfareRegistersPoor: 'WelfareRegistersPoor',
  ResidentialHouse: 'ResidentialHouse',
  DormitoryLivingWith: 'DormitoryLivingWith',
  ResidentialHouseOther: 'ResidentialHouseOther',
  OwnHome: 'OwnHome',
  Cleanliness: 'Cleanliness',
  CleanlinessOther: 'CleanlinessOther',
  UtilitiesElectricity: 'UtilitiesElectricity',
  WaterForConsumption: 'WaterForConsumption',
  Toilet: 'Toilet',
  LivingEnvironment: 'LivingEnvironment',
  StudentFamilyMembersAmount: 'StudentFamilyMembersAmount',
  StudentFamilyMembersMale: 'StudentFamilyMembersMale',
  StudentFamilyMembersFemale: 'StudentFamilyMembersFemale',
  SiblingsBornSameParentsAmount: 'SiblingsBornSameParentsAmount',
  SiblingsBornSameParentsMale: 'SiblingsBornSameParentsMale',
  SiblingsBornSameParentsFemale: 'SiblingsBornSameParentsFemale',
  SiblingsBornDifferentParentsAmount: 'SiblingsBornDifferentParentsAmount',
  SiblingsBornDifferentParentsMale: 'SiblingsBornDifferentParentsMale',
  SiblingsBornDifferentParentsFemale: 'SiblingsBornDifferentParentsFemale',
  FamiliesNeedSpecialAssistance: 'FamiliesNeedSpecialAssistance',
  FamiliesNeedSpecialAssistanceTotal: 'FamiliesNeedSpecialAssistanceTotal',
  FamilyRelationship: 'FamilyRelationship',
  FamilyRelationshipOther: 'FamilyRelationshipOther',
  RelationshipMember: 'RelationshipMember',
  SpendTimeWithFamily: 'SpendTimeWithFamily',
  WorkloadTheirFamilies: 'WorkloadTheirFamilies',
  LeisureActivities: 'LeisureActivities',
  LeaveStudent: 'LeaveStudent',
  LeaveStudentOther: 'LeaveStudentOther',
  MedianHouseholdIncome: 'MedianHouseholdIncome',
  ReceiveExpensesFrom: 'ReceiveExpensesFrom',
  ReceiveExpensesFromOther: 'ReceiveExpensesFromOther',
  StudentWorkIncome: 'StudentWorkIncome',
  StudentWorkIncomeOther: 'StudentWorkIncomeOther',
  DailyIncome: 'DailyIncome',
  PaidComeDay: 'PaidComeDay',
  ParentWantAgencyHelp: 'ParentWantAgencyHelp',
  ParentWantAgencyHelpOther: 'ParentWantAgencyHelpOther',
  ParentWantAgencyHelp2: 'ParentWantAgencyHelp2',
  ParentWantAgencyHelp2Other: 'ParentWantAgencyHelp2Other',
  ParentConcerns: 'ParentConcerns',
  ParentWantSchoolsHelp: 'ParentWantSchoolsHelp',
  ParentWantSchoolsHelpOther: 'ParentWantSchoolsHelpOther',
  Health: 'Health',
  WelfareSafety: 'WelfareSafety',
  DistanceHomeToSchool: 'DistanceHomeToSchool',
  TravelTime: 'TravelTime',
  StudentTravel: 'StudentTravel',
  StudentTravelOther: 'StudentTravelOther',
  LivingConditions: 'LivingConditions',
  LivingConditionsOther: 'LivingConditionsOther',
  StudentResponsibilities: 'StudentResponsibilities',
  StudentResponsibilitiesOther: 'StudentResponsibilitiesOther',
  Hobbies: 'Hobbies',
  HobbiesOther: 'HobbiesOther',
  SubstanceAbuseBehavior: 'SubstanceAbuseBehavior',
  ViolentBehavior: 'ViolentBehavior',
  ViolentBehaviorOther: 'ViolentBehaviorOther',
  SexualBehavior: 'SexualBehavior',
  GameAddiction: 'GameAddiction',
  GameAddictionOther: 'GameAddictionOther',
  AccessComputerInternet: 'AccessComputerInternet',
  UseElectronicTools: 'UseElectronicTools',
  StudentInfoProvider: 'StudentInfoProvider',
  Note: 'Note',
  HouseStyle: 'HouseStyle',
  ParentSignature: 'ParentSignature',
  StudentSignature: 'StudentSignature',
  TeacherSignature: 'TeacherSignature',
  TeacherId: 'TeacherId',
  IsDel: 'IsDel',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.THomeVisitFileScalarFieldEnum = {
  ID: 'ID',
  Type: 'Type',
  HomeVisitID: 'HomeVisitID',
  SchoolID: 'SchoolID',
  ContentType: 'ContentType',
  FileName: 'FileName',
  Path: 'Path',
  IsDel: 'IsDel',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.THomeworkScalarFieldEnum = {
  nHomeWork: 'nHomeWork',
  SchoolID: 'SchoolID',
  OnlineId: 'OnlineId',
  sPlaneID: 'sPlaneID',
  dStart: 'dStart',
  dEnd: 'dEnd',
  dNotification: 'dNotification',
  dOrder: 'dOrder',
  sEmp: 'sEmp',
  sHomeworkDetail: 'sHomeworkDetail',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  TitleName: 'TitleName',
  MaxScore: 'MaxScore',
  AssignType: 'AssignType',
  LinkYT: 'LinkYT',
  SelectedRoom: 'SelectedRoom',
  SelectedStudent: 'SelectedStudent',
  Created: 'Created',
  Modified: 'Modified',
  DisplayDate: 'DisplayDate',
  DisplayType: 'DisplayType'
};

exports.Prisma.THomework_UserScalarFieldEnum = {
  nHomeWork: 'nHomeWork',
  sID: 'sID',
  cStatusHomeWork: 'cStatusHomeWork',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  IsRead: 'IsRead',
  IsSend: 'IsSend',
  IsLate: 'IsLate',
  IsManual: 'IsManual',
  Score: 'Score',
  AttachFile: 'AttachFile',
  AttachTitle: 'AttachTitle',
  AttachFileContentType: 'AttachFileContentType',
  LinkUrl: 'LinkUrl',
  Remark: 'Remark'
};

exports.Prisma.THomework_User_FileScalarFieldEnum = {
  FileId: 'FileId',
  nHomeWorkId: 'nHomeWorkId',
  sID: 'sID',
  SchoolID: 'SchoolID',
  FileUrl: 'FileUrl',
  FileTitle: 'FileTitle',
  FileContentType: 'FileContentType',
  cDel: 'cDel'
};

exports.Prisma.THomework_User_HistoryScalarFieldEnum = {
  nHomeWork: 'nHomeWork',
  sID: 'sID',
  cStatusHomeWork: 'cStatusHomeWork',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  IsRead: 'IsRead',
  IsSend: 'IsSend',
  Score: 'Score',
  AttachFile: 'AttachFile',
  AttachTitle: 'AttachTitle',
  AttachFileContentType: 'AttachFileContentType',
  LinkUrl: 'LinkUrl'
};

exports.Prisma.THomeWorkFileScalarFieldEnum = {
  nHomeWorkId: 'nHomeWorkId',
  sFileName: 'sFileName',
  ContentType: 'ContentType',
  nFileId: 'nFileId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  Title: 'Title'
};

exports.Prisma.THomeWorkLearningScalarFieldEnum = {
  LearnId: 'LearnId',
  OnlineId: 'OnlineId',
  sPlaneID: 'sPlaneID',
  sEmp: 'sEmp',
  TitleName: 'TitleName',
  Description: 'Description',
  LinkYT: 'LinkYT',
  Created: 'Created',
  Modified: 'Modified',
  SchoolId: 'SchoolId',
  SelectedRoom: 'SelectedRoom',
  SelectedStudent: 'SelectedStudent',
  AssignType: 'AssignType',
  cDel: 'cDel',
  DisplayDate: 'DisplayDate',
  DisplayType: 'DisplayType'
};

exports.Prisma.THomeWorkLearningFileScalarFieldEnum = {
  AttachId: 'AttachId',
  LearnId: 'LearnId',
  sFileName: 'sFileName',
  ContentType: 'ContentType',
  Title: 'Title',
  SchoolId: 'SchoolId',
  cDel: 'cDel'
};

exports.Prisma.THomeWorkReplyScalarFieldEnum = {
  ReplyId: 'ReplyId',
  HomeWorkId: 'HomeWorkId',
  UserId: 'UserId',
  ReplyRefId: 'ReplyRefId',
  Comment: 'Comment',
  Created: 'Created',
  Modified: 'Modified',
  Type: 'Type',
  SchoolId: 'SchoolId',
  sID: 'sID',
  tID: 'tID'
};

exports.Prisma.THomeWorkReply_FileScalarFieldEnum = {
  FileID: 'FileID',
  HomeWorkID: 'HomeWorkID',
  ReplyID: 'ReplyID',
  FileUrl: 'FileUrl',
  FileTitle: 'FileTitle',
  ContentType: 'ContentType',
  SchoolID: 'SchoolID',
  cDel: 'cDel',
  CreateDate: 'CreateDate'
};

exports.Prisma.TJobListScalarFieldEnum = {
  nSchoolId: 'nSchoolId',
  jobDescription: 'jobDescription',
  deleted: 'deleted',
  workStatus: 'workStatus',
  nJobid: 'nJobid',
  empType: 'empType',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLanguageScalarFieldEnum = {
  LanguageId: 'LanguageId',
  LanguageCode: 'LanguageCode',
  LanguageName: 'LanguageName',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLearningCenterScalarFieldEnum = {
  LearningCenterID: 'LearningCenterID',
  Type: 'Type',
  Name: 'Name',
  Detail: 'Detail',
  Admin: 'Admin',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLeaveScalarFieldEnum = {
  LeaveID: 'LeaveID',
  sID: 'sID',
  dLeaveStart: 'dLeaveStart',
  dLeaveEnd: 'dLeaveEnd',
  sLeave: 'sLeave',
  cDel: 'cDel',
  cTypeLeave: 'cTypeLeave',
  cLeaveTime: 'cLeaveTime',
  LeaveStatus: 'LeaveStatus',
  cTypeID: 'cTypeID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TLeave_ConfigStudentScalarFieldEnum = {
  SetID: 'SetID',
  SchoolID: 'SchoolID',
  ApproveNum: 'ApproveNum',
  LimitDay: 'LimitDay',
  LimitType: 'LimitType',
  IsDel: 'IsDel',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  Remark: 'Remark'
};

exports.Prisma.TLeave_ConfigTeacherScalarFieldEnum = {
  SetID: 'SetID',
  SchoolID: 'SchoolID',
  ApproveNum: 'ApproveNum',
  IsDel: 'IsDel',
  IsEnable: 'IsEnable',
  CutOffDay: 'CutOffDay',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  Remark: 'Remark'
};

exports.Prisma.TLeave_ConfigTeacher_DayScalarFieldEnum = {
  PKID: 'PKID',
  SchoolID: 'SchoolID',
  YearStart: 'YearStart',
  YearEnd: 'YearEnd',
  Sick: 'Sick',
  Personal: 'Personal',
  Vacation: 'Vacation',
  Maternity: 'Maternity',
  Ordination: 'Ordination',
  Military: 'Military',
  Goverment: 'Goverment',
  Training: 'Training',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  IsDel: 'IsDel'
};

exports.Prisma.TLeave_ConfigTeacher_DayListScalarFieldEnum = {
  Id: 'Id',
  DayID: 'DayID',
  SchoolID: 'SchoolID',
  TypeID: 'TypeID',
  Day: 'Day',
  IsDel: 'IsDel'
};

exports.Prisma.TLeave_ConfigTeacher_DepartmentScalarFieldEnum = {
  PKID: 'PKID',
  SchoolID: 'SchoolID',
  DeptID: 'DeptID',
  TeacherID1: 'TeacherID1',
  TeacherID2: 'TeacherID2',
  TeacherID3: 'TeacherID3',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  IsDel: 'IsDel'
};

exports.Prisma.TLeave_ConfigTeacher_NotifyScalarFieldEnum = {
  NotiID: 'NotiID',
  SchoolID: 'SchoolID',
  NotiType: 'NotiType',
  No: 'No',
  Time1: 'Time1',
  Time2: 'Time2',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  IsDel: 'IsDel'
};

exports.Prisma.TLeave_ConfigTeacher_NotifyUserScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  TeacherID: 'TeacherID',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy',
  IsDel: 'IsDel'
};

exports.Prisma.TLeave_LogScalarFieldEnum = {
  Id: 'Id',
  SchoolID: 'SchoolID',
  Date: 'Date',
  Text: 'Text',
  ByUser: 'ByUser',
  Type: 'Type'
};

exports.Prisma.TLeave_TypeScalarFieldEnum = {
  TypeID: 'TypeID',
  SchoolID: 'SchoolID',
  DefaultID: 'DefaultID',
  TypeName: 'TypeName',
  TypeNameEN: 'TypeNameEN',
  AbbrTH: 'AbbrTH',
  Abbr: 'Abbr',
  Type: 'Type',
  IsDel: 'IsDel',
  IsActive: 'IsActive',
  IsDefault: 'IsDefault',
  Created: 'Created',
  Modified: 'Modified',
  CreateBy: 'CreateBy',
  ModifyBy: 'ModifyBy'
};

exports.Prisma.TLeaveLetterScalarFieldEnum = {
  letterId: 'letterId',
  letterSchoolId: 'letterSchoolId',
  letterHeader: 'letterHeader',
  letterDate: 'letterDate',
  letterType: 'letterType',
  writerId: 'writerId',
  writerJob: 'writerJob',
  writerComment: 'writerComment',
  startDate: 'startDate',
  endDate: 'endDate',
  contactHomenumber: 'contactHomenumber',
  contactRoad: 'contactRoad',
  contactTumbon: 'contactTumbon',
  contactAumpher: 'contactAumpher',
  contactProvince: 'contactProvince',
  contactPhone: 'contactPhone',
  adminOneJob: 'adminOneJob',
  adminOneComment: 'adminOneComment',
  adminOneId: 'adminOneId',
  adminOneDate: 'adminOneDate',
  adminTwoJob: 'adminTwoJob',
  adminTwoId: 'adminTwoId',
  adminTwoComment: 'adminTwoComment',
  adminTwoDate: 'adminTwoDate',
  adminThreeJob: 'adminThreeJob',
  adminThreeComment: 'adminThreeComment',
  adminThreeId: 'adminThreeId',
  adminThreeDate: 'adminThreeDate',
  adminOneComfirm: 'adminOneComfirm',
  adminTwoComfirm: 'adminTwoComfirm',
  adminThreeComfirm: 'adminThreeComfirm',
  LetterConfirmdate: 'LetterConfirmdate',
  Season: 'Season',
  rejectOneId: 'rejectOneId',
  rejectTwoId: 'rejectTwoId',
  rejectThreeId: 'rejectThreeId',
  deleted: 'deleted',
  letterStatus: 'letterStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  LeaveTypeID: 'LeaveTypeID',
  Note: 'Note'
};

exports.Prisma.TLeaveLetter_HistoryScalarFieldEnum = {
  letterId: 'letterId',
  letterSchoolId: 'letterSchoolId',
  letterHeader: 'letterHeader',
  letterDate: 'letterDate',
  letterType: 'letterType',
  writerId: 'writerId',
  writerJob: 'writerJob',
  writerComment: 'writerComment',
  startDate: 'startDate',
  endDate: 'endDate',
  contactHomenumber: 'contactHomenumber',
  contactRoad: 'contactRoad',
  contactTumbon: 'contactTumbon',
  contactAumpher: 'contactAumpher',
  contactProvince: 'contactProvince',
  contactPhone: 'contactPhone',
  adminOneJob: 'adminOneJob',
  adminOneComment: 'adminOneComment',
  adminOneId: 'adminOneId',
  adminOneDate: 'adminOneDate',
  adminTwoJob: 'adminTwoJob',
  adminTwoId: 'adminTwoId',
  adminTwoComment: 'adminTwoComment',
  adminTwoDate: 'adminTwoDate',
  adminThreeJob: 'adminThreeJob',
  adminThreeComment: 'adminThreeComment',
  adminThreeId: 'adminThreeId',
  adminThreeDate: 'adminThreeDate',
  adminOneComfirm: 'adminOneComfirm',
  adminTwoComfirm: 'adminTwoComfirm',
  adminThreeComfirm: 'adminThreeComfirm',
  LetterConfirmdate: 'LetterConfirmdate',
  Season: 'Season',
  rejectOneId: 'rejectOneId',
  rejectTwoId: 'rejectTwoId',
  rejectThreeId: 'rejectThreeId',
  deleted: 'deleted',
  letterStatus: 'letterStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLeaveLetterFilesScalarFieldEnum = {
  letterId: 'letterId',
  sFileName: 'sFileName',
  ContentType: 'ContentType',
  nNewsFileID: 'nNewsFileID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLeaveLetterFiles_HistoryScalarFieldEnum = {
  letterId: 'letterId',
  sFileName: 'sFileName',
  ContentType: 'ContentType',
  nNewsFileID: 'nNewsFileID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLeaveListScalarFieldEnum = {
  LeaveListID: 'LeaveListID',
  sID: 'sID',
  leaveStartDate: 'leaveStartDate',
  leaveEndDate: 'leaveEndDate',
  leaveTotalDay: 'leaveTotalDay',
  leaveType: 'leaveType',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLeaveSettingScalarFieldEnum = {
  schoolId: 'schoolId',
  nLimit: 'nLimit',
  nType: 'nType',
  checker: 'checker',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLeaveTeacherListScalarFieldEnum = {
  sEmp: 'sEmp',
  schoolId: 'schoolId',
  deleted: 'deleted',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLevelScalarFieldEnum = {
  LevelID: 'LevelID',
  LevelName: 'LevelName',
  nTimeType: 'nTimeType',
  sortValue: 'sortValue',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  MasterCode: 'MasterCode',
  LevelNameEng: 'LevelNameEng'
};

exports.Prisma.TLogEmpTimeScanScalarFieldEnum = {
  sEmp: 'sEmp',
  LogEmpTime: 'LogEmpTime',
  LogEmpType: 'LogEmpType',
  LogEmpScanStatus: 'LogEmpScanStatus',
  LogEmpnDay: 'LogEmpnDay',
  LogEmpDate: 'LogEmpDate',
  nYear: 'nYear',
  nLogEmpScanID: 'nLogEmpScanID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  deviceType: 'deviceType',
  LeaveID: 'LeaveID'
};

exports.Prisma.TLogEmpTimeScan_HistoryScalarFieldEnum = {
  sEmp: 'sEmp',
  LogEmpTime: 'LogEmpTime',
  LogEmpType: 'LogEmpType',
  LogEmpScanStatus: 'LogEmpScanStatus',
  LogEmpnDay: 'LogEmpnDay',
  LogEmpDate: 'LogEmpDate',
  nYear: 'nYear',
  nLogEmpScanID: 'nLogEmpScanID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLogLearnTimeScanScalarFieldEnum = {
  LeanTimeScanID: 'LeanTimeScanID',
  LogLearnDate: 'LogLearnDate',
  sScheduleID: 'sScheduleID',
  LogLearnType: 'LogLearnType',
  sUserType: 'sUserType',
  sID: 'sID',
  LogLearnTime: 'LogLearnTime',
  LogLearnScanStatus: 'LogLearnScanStatus',
  LogLearnnDay: 'LogLearnnDay',
  nTeacherId: 'nTeacherId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLogLearnTimeScan_HistoryScalarFieldEnum = {
  LeanTimeScanID: 'LeanTimeScanID',
  LogLearnDate: 'LogLearnDate',
  sScheduleID: 'sScheduleID',
  LogLearnType: 'LogLearnType',
  sUserType: 'sUserType',
  sID: 'sID',
  LogLearnTime: 'LogLearnTime',
  LogLearnScanStatus: 'LogLearnScanStatus',
  LogLearnnDay: 'LogLearnnDay',
  nTeacherId: 'nTeacherId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLogLearnTimeScanNewScalarFieldEnum = {
  LeanTimeScanID: 'LeanTimeScanID',
  sUserType: 'sUserType',
  sID: 'sID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  JsonData: 'JsonData',
  nMonth: 'nMonth'
};

exports.Prisma.TLogUserTimeScanScalarFieldEnum = {
  sID: 'sID',
  LogTime: 'LogTime',
  LogType: 'LogType',
  LogScanStatus: 'LogScanStatus',
  LognDay: 'LognDay',
  LogDate: 'LogDate',
  nYear: 'nYear',
  nTermSubLevel2: 'nTermSubLevel2',
  TeacherId: 'TeacherId',
  nLogScanID: 'nLogScanID',
  bLockStatus: 'bLockStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  deviceType: 'deviceType',
  LeaveID: 'LeaveID'
};

exports.Prisma.TLogUserTimeScan_HistoryScalarFieldEnum = {
  sID: 'sID',
  LogTime: 'LogTime',
  LogType: 'LogType',
  LogScanStatus: 'LogScanStatus',
  LognDay: 'LognDay',
  LogDate: 'LogDate',
  nYear: 'nYear',
  nTermSubLevel2: 'nTermSubLevel2',
  TeacherId: 'TeacherId',
  nLogScanID: 'nLogScanID',
  bLockStatus: 'bLockStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TLogUserTimeScan_Old_BkupScalarFieldEnum = {
  sID: 'sID',
  LogTime: 'LogTime',
  LogType: 'LogType',
  LogScanStatus: 'LogScanStatus',
  LognDay: 'LognDay',
  LogDate: 'LogDate',
  nYear: 'nYear',
  nTermSubLevel2: 'nTermSubLevel2',
  TeacherId: 'TeacherId',
  nLogScanID: 'nLogScanID',
  bLockStatus: 'bLockStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  deviceType: 'deviceType',
  LeaveID: 'LeaveID'
};

exports.Prisma.TLogUserTimeScanNewScalarFieldEnum = {
  nLogScanID: 'nLogScanID',
  SchoolID: 'SchoolID',
  sID: 'sID',
  nYear: 'nYear',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  JsonData: 'JsonData',
  nMonth: 'nMonth'
};

exports.Prisma.TMasterDataScalarFieldEnum = {
  MasterID: 'MasterID',
  MasterCode: 'MasterCode',
  MasterDes: 'MasterDes',
  MasterType: 'MasterType',
  isActive: 'isActive',
  MasterOrder: 'MasterOrder'
};

exports.Prisma.TMasterTypeScalarFieldEnum = {
  MasterTypeID: 'MasterTypeID',
  MasterTypeNameTH: 'MasterTypeNameTH',
  MasterTypeNameEN: 'MasterTypeNameEN'
};

exports.Prisma.TMessage_UserScalarFieldEnum = {
  MessageUserID: 'MessageUserID',
  message_id: 'message_id',
  UserID: 'UserID',
  user_type: 'user_type',
  read_status: 'read_status',
  receive_status: 'receive_status',
  message_read: 'message_read',
  message_receive: 'message_receive',
  nActionResult: 'nActionResult',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TMessage_User_HistoryScalarFieldEnum = {
  MessageUserID: 'MessageUserID',
  message_id: 'message_id',
  UserID: 'UserID',
  user_type: 'user_type',
  read_status: 'read_status',
  receive_status: 'receive_status',
  message_read: 'message_read',
  message_receive: 'message_receive',
  nActionResult: 'nActionResult',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TMessageBoxScalarFieldEnum = {
  sMessage: 'sMessage',
  sTitle: 'sTitle',
  dSend: 'dSend',
  scheduled_id: 'scheduled_id',
  push_id: 'push_id',
  homework_id: 'homework_id',
  sell_id: 'sell_id',
  topup_id: 'topup_id',
  nType: 'nType',
  logtime_type: 'logtime_type',
  logschedule_id: 'logschedule_id',
  letter_id: 'letter_id',
  MessageId: 'MessageId',
  nMessageID: 'nMessageID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TMessageBox_HistoryScalarFieldEnum = {
  sMessage: 'sMessage',
  sTitle: 'sTitle',
  dSend: 'dSend',
  scheduled_id: 'scheduled_id',
  push_id: 'push_id',
  homework_id: 'homework_id',
  sell_id: 'sell_id',
  topup_id: 'topup_id',
  nType: 'nType',
  logtime_type: 'logtime_type',
  logschedule_id: 'logschedule_id',
  letter_id: 'letter_id',
  MessageId: 'MessageId',
  nMessageID: 'nMessageID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TMessageLINEMulticastScalarFieldEnum = {
  MessageID: 'MessageID',
  GroupID: 'GroupID',
  StreamID: 'StreamID',
  UpdateDate: 'UpdateDate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TMoneyScalarFieldEnum = {
  MoneyID: 'MoneyID',
  dMoney: 'dMoney',
  sID: 'sID',
  nMoney: 'nMoney',
  cType: 'cType',
  sEmp: 'sEmp',
  nBalance: 'nBalance',
  topup_type: 'topup_type',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  TopupId: 'TopupId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardHistoryID: 'CardHistoryID',
  ReferenceID: 'ReferenceID',
  UpdatedTime: 'UpdatedTime',
  Insurance: 'Insurance',
  ChargeID: 'ChargeID',
  DeviceID: 'DeviceID',
  PaymentInfo: 'PaymentInfo',
  SourceIP: 'SourceIP',
  CheckID: 'CheckID'
};

exports.Prisma.TMoney_12022024ScalarFieldEnum = {
  MoneyID: 'MoneyID',
  dMoney: 'dMoney',
  sID: 'sID',
  nMoney: 'nMoney',
  cType: 'cType',
  sEmp: 'sEmp',
  nBalance: 'nBalance',
  topup_type: 'topup_type',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  TopupId: 'TopupId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardHistoryID: 'CardHistoryID',
  ReferenceID: 'ReferenceID',
  UpdatedTime: 'UpdatedTime',
  Insurance: 'Insurance',
  ChargeID: 'ChargeID',
  DeviceID: 'DeviceID',
  PaymentInfo: 'PaymentInfo'
};

exports.Prisma.TMoney_20210208ScalarFieldEnum = {
  MoneyID: 'MoneyID',
  dMoney: 'dMoney',
  sID: 'sID',
  nMoney: 'nMoney',
  cType: 'cType',
  sEmp: 'sEmp',
  nBalance: 'nBalance',
  topup_type: 'topup_type',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  TopupId: 'TopupId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardHistoryID: 'CardHistoryID'
};

exports.Prisma.TMoney_HistoryScalarFieldEnum = {
  MoneyID: 'MoneyID',
  dMoney: 'dMoney',
  sID: 'sID',
  nMoney: 'nMoney',
  cType: 'cType',
  sEmp: 'sEmp',
  nBalance: 'nBalance',
  topup_type: 'topup_type',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  TopupId: 'TopupId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TMoneyDBErrorScalarFieldEnum = {
  MoneyID: 'MoneyID',
  dMoney: 'dMoney',
  sID: 'sID',
  nMoney: 'nMoney',
  cType: 'cType',
  sEmp: 'sEmp',
  nBalance: 'nBalance',
  topup_type: 'topup_type',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  TopupId: 'TopupId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardHistoryID: 'CardHistoryID',
  ReferenceID: 'ReferenceID',
  UpdatedTime: 'UpdatedTime',
  Insurance: 'Insurance',
  ChargeID: 'ChargeID',
  DeviceID: 'DeviceID',
  PaymentInfo: 'PaymentInfo',
  SourceIP: 'SourceIP',
  CheckID: 'CheckID',
  Processed: 'Processed',
  ErrorDescription: 'ErrorDescription'
};

exports.Prisma.TNewsFilesScalarFieldEnum = {
  nSMS: 'nSMS',
  sFileName: 'sFileName',
  ContentType: 'ContentType',
  nNewsFileID: 'nNewsFileID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  FullFileName: 'FullFileName',
  StudentCodeOwner: 'StudentCodeOwner',
  StudentCodeFileName: 'StudentCodeFileName'
};

exports.Prisma.TONETScoreScalarFieldEnum = {
  Year: 'Year',
  sID: 'sID',
  Identification: 'Identification',
  nTSubLevel: 'nTSubLevel',
  Class: 'Class',
  SeatNo: 'SeatNo',
  SubjectScore61: 'SubjectScore61',
  SubjectScore64: 'SubjectScore64',
  SubjectScore65: 'SubjectScore65',
  SubjectScore63: 'SubjectScore63',
  SubjectScore91: 'SubjectScore91',
  SubjectScore94: 'SubjectScore94',
  SubjectScore95: 'SubjectScore95',
  SubjectScore93: 'SubjectScore93',
  SubjectScore01: 'SubjectScore01',
  SubjectScore04: 'SubjectScore04',
  SubjectScore05: 'SubjectScore05',
  SubjectScore02: 'SubjectScore02',
  SubjectScore03: 'SubjectScore03',
  Result30Percent: 'Result30Percent',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel',
  ResultPercent: 'ResultPercent',
  Multiplier: 'Multiplier'
};

exports.Prisma.TopupWebLogDataScalarFieldEnum = {
  ID: 'ID',
  sID: 'sID',
  sEmp: 'sEmp',
  EmployeeID: 'EmployeeID',
  SchoolID: 'SchoolID',
  nTopupMoney: 'nTopupMoney',
  CardID: 'CardID',
  Result: 'Result',
  TopupType: 'TopupType',
  TStamp: 'TStamp',
  Topupid: 'Topupid',
  Balance: 'Balance'
};

exports.Prisma.TPeriodScalarFieldEnum = {
  sPeriodID: 'sPeriodID',
  sScheduleID: 'sScheduleID',
  sPlaneID: 'sPlaneID',
  sClassID: 'sClassID',
  nDay: 'nDay',
  sPeriodName: 'sPeriodName',
  dStart: 'dStart',
  dEnd: 'dEnd',
  dTimeStart_IN: 'dTimeStart_IN',
  dTimeStart_OUT: 'dTimeStart_OUT',
  dTimeEnd_IN: 'dTimeEnd_IN',
  dTimeEnd_OUT: 'dTimeEnd_OUT',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TPeriod_TSubLevelScalarFieldEnum = {
  nTSubLevel: 'nTSubLevel',
  sPeriodID: 'sPeriodID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TPermissionCardScalarFieldEnum = {
  ID: 'ID',
  RefNo: 'RefNo',
  SchoolID: 'SchoolID',
  StudentID: 'StudentID',
  TypeID: 'TypeID',
  Time: 'Time',
  IsAttach: 'IsAttach',
  AttachUrl: 'AttachUrl',
  StartDate: 'StartDate',
  EndDate: 'EndDate',
  Cause: 'Cause',
  Note: 'Note',
  Created: 'Created',
  Modified: 'Modified',
  Creator: 'Creator',
  Modifier: 'Modifier',
  IsDel: 'IsDel'
};

exports.Prisma.TPermissionCardTypeScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  Permission: 'Permission',
  Created: 'Created',
  Modified: 'Modified',
  Creator: 'Creator',
  Modifier: 'Modifier',
  IsDel: 'IsDel'
};

exports.Prisma.TPlanScalarFieldEnum = {
  PlanId: 'PlanId',
  CurriculumId: 'CurriculumId',
  nTSubLevel: 'nTSubLevel',
  PlanName: 'PlanName',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  IsActive: 'IsActive',
  SchoolID: 'SchoolID',
  cDel: 'cDel'
};

exports.Prisma.TPlanCourseScalarFieldEnum = {
  PlanCourseId: 'PlanCourseId',
  PlanId: 'PlanId',
  sPlaneID: 'sPlaneID',
  nCredit: 'nCredit',
  CourseHour: 'CourseHour',
  CourseTotalHour: 'CourseTotalHour',
  CourseStatus: 'CourseStatus',
  SortNumber: 'SortNumber',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  IsActive: 'IsActive',
  SchoolID: 'SchoolID',
  nYear: 'nYear',
  RB1DisplayOrder: 'RB1DisplayOrder',
  IsActiveForGrade: 'IsActiveForGrade',
  cDel: 'cDel',
  RatioQuiz: 'RatioQuiz',
  RatioBeforeMidTerm: 'RatioBeforeMidTerm',
  RatioAfterMidTerm: 'RatioAfterMidTerm',
  RatioMidTerm: 'RatioMidTerm',
  RatioLateTerm: 'RatioLateTerm',
  RatioQuizPass: 'RatioQuizPass',
  IsUserAllowedToEditRatio: 'IsUserAllowedToEditRatio'
};

exports.Prisma.TPlanCourseAdjustedTermScalarFieldEnum = {
  PlanCourseAdjustedTermId: 'PlanCourseAdjustedTermId',
  PlanCourseId: 'PlanCourseId',
  nTerm: 'nTerm',
  IsActive: 'IsActive',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TPlanCourseStudentScalarFieldEnum = {
  PlanCourseStudentId: 'PlanCourseStudentId',
  PlanCourseId: 'PlanCourseId',
  sID: 'sID',
  cDel: 'cDel',
  CreatedBy: 'CreatedBy',
  Updatedby: 'Updatedby',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  SchoolID: 'SchoolID',
  nTerm: 'nTerm',
  IsActive: 'IsActive',
  nTermSubLevel2: 'nTermSubLevel2',
  nTSubLevel: 'nTSubLevel'
};

exports.Prisma.TPlanCourseTeacherScalarFieldEnum = {
  PlanCourseTeacherId: 'PlanCourseTeacherId',
  PlanCourseId: 'PlanCourseId',
  sEmp: 'sEmp',
  IsActive: 'IsActive',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TPlanCourseTermScalarFieldEnum = {
  PlanCourseTermId: 'PlanCourseTermId',
  PlanCourseId: 'PlanCourseId',
  nTerm: 'nTerm',
  IsActive: 'IsActive',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TPlaneScalarFieldEnum = {
  sPlaneID: 'sPlaneID',
  sPlaneName: 'sPlaneName',
  cDel: 'cDel',
  nCredit: 'nCredit',
  courseCode: 'courseCode',
  courseType: 'courseType',
  courseHour: 'courseHour',
  courseTotalHour: 'courseTotalHour',
  courseGroup: 'courseGroup',
  nTSubLevel: 'nTSubLevel',
  nTerm: 'nTerm',
  courseStatus: 'courseStatus',
  sortNumber: 'sortNumber',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  CourseCodeEn: 'CourseCodeEn',
  CourseNameEn: 'CourseNameEn'
};

exports.Prisma.TPlane_TSubLevelScalarFieldEnum = {
  sPlaneID: 'sPlaneID',
  nTSubLevel: 'nTSubLevel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TPlanListScalarFieldEnum = {
  PlanListID: 'PlanListID',
  nPlaneDay: 'nPlaneDay',
  dTimeStart_IN: 'dTimeStart_IN',
  dTimeStart_OUT: 'dTimeStart_OUT',
  dTimeEnd_IN: 'dTimeEnd_IN',
  dTimeEnd_OUT: 'dTimeEnd_OUT',
  TTermSublv: 'TTermSublv',
  sPlaneID: 'sPlaneID',
  cDel: 'cDel',
  sID: 'sID',
  sEmp: 'sEmp',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TPlanOwnerScalarFieldEnum = {
  nPlanOwnerID: 'nPlanOwnerID',
  sEMP: 'sEMP',
  changeScoreAnytime: 'changeScoreAnytime',
  cDel: 'cDel',
  sPlaneID: 'sPlaneID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TPlanTermSubLevel2ScalarFieldEnum = {
  PlanTermSubLevel2Id: 'PlanTermSubLevel2Id',
  PlanId: 'PlanId',
  nTermSubLevel2: 'nTermSubLevel2',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  IsActive: 'IsActive',
  SchoolID: 'SchoolID',
  cDel: 'cDel'
};

exports.Prisma.TPreRegisterScalarFieldEnum = {
  preRegisterId: 'preRegisterId',
  StudentTitle: 'StudentTitle',
  sName: 'sName',
  sLastname: 'sLastname',
  sIdentification: 'sIdentification',
  dBirth: 'dBirth',
  cSex: 'cSex',
  sPhone: 'sPhone',
  sEmail: 'sEmail',
  sAddress: 'sAddress',
  sCity: 'sCity',
  sPostalcode: 'sPostalcode',
  sCountry: 'sCountry',
  cType: 'cType',
  cDel: 'cDel',
  nTermSubLevel2: 'nTermSubLevel2',
  sStudentID: 'sStudentID',
  sStudentNameEN: 'sStudentNameEN',
  sStudentLastEN: 'sStudentLastEN',
  sStudentRace: 'sStudentRace',
  sStudentNation: 'sStudentNation',
  sStudentReligion: 'sStudentReligion',
  sStudentIdCardNumber: 'sStudentIdCardNumber',
  sStudentHomeNumber: 'sStudentHomeNumber',
  sStudentSoy: 'sStudentSoy',
  sStudentTumbon: 'sStudentTumbon',
  sStudentProvince: 'sStudentProvince',
  sStudentMuu: 'sStudentMuu',
  sStudentRoad: 'sStudentRoad',
  sStudentAumpher: 'sStudentAumpher',
  sStudentPost: 'sStudentPost',
  sStudentPicture: 'sStudentPicture',
  sNickName: 'sNickName',
  nSonNumber: 'nSonNumber',
  dPicUpdate: 'dPicUpdate',
  nPicversion: 'nPicversion',
  nStudentNumber: 'nStudentNumber',
  nStudentStatus: 'nStudentStatus',
  oldSchoolName: 'oldSchoolName',
  oldSchoolProvince: 'oldSchoolProvince',
  oldSchoolAumpher: 'oldSchoolAumpher',
  oldSchoolTumbon: 'oldSchoolTumbon',
  oldSchoolGPA: 'oldSchoolGPA',
  oldSchoolGraduated: 'oldSchoolGraduated',
  nFamilyTitle: 'nFamilyTitle',
  sFamilyName: 'sFamilyName',
  sFamilyLast: 'sFamilyLast',
  sFamilyRace: 'sFamilyRace',
  sFamilyNation: 'sFamilyNation',
  sFamilyReligion: 'sFamilyReligion',
  sFamilyIdCardNumber: 'sFamilyIdCardNumber',
  sFamilyRelate: 'sFamilyRelate',
  sFamilyHomeNumber: 'sFamilyHomeNumber',
  sFamilySoy: 'sFamilySoy',
  sFamilyTumbon: 'sFamilyTumbon',
  sFamilyProvince: 'sFamilyProvince',
  sFamilyMuu: 'sFamilyMuu',
  sFamilyRoad: 'sFamilyRoad',
  sFamilyAumpher: 'sFamilyAumpher',
  sFamilyPost: 'sFamilyPost',
  sPhoneOne: 'sPhoneOne',
  sPhoneTwo: 'sPhoneTwo',
  sPhoneThree: 'sPhoneThree',
  sPhoneMail: 'sPhoneMail',
  FatherTitle: 'FatherTitle',
  sFatherFirstName: 'sFatherFirstName',
  sFatherLastName: 'sFatherLastName',
  sFatherNation: 'sFatherNation',
  sFatherRace: 'sFatherRace',
  sFatherReligion: 'sFatherReligion',
  sFatherIdCardNumber: 'sFatherIdCardNumber',
  sFatherHomeNumber: 'sFatherHomeNumber',
  sFatherSoy: 'sFatherSoy',
  sFatherTumbon: 'sFatherTumbon',
  sFatherProvince: 'sFatherProvince',
  sFatherMuu: 'sFatherMuu',
  sFatherRoad: 'sFatherRoad',
  sFatherAumpher: 'sFatherAumpher',
  sFatherPost: 'sFatherPost',
  sFatherPhone: 'sFatherPhone',
  MotherTitle: 'MotherTitle',
  sMotherFirstName: 'sMotherFirstName',
  sMotherLastName: 'sMotherLastName',
  sMotherNation: 'sMotherNation',
  sMotherRace: 'sMotherRace',
  sMotherReligion: 'sMotherReligion',
  sMotherIdCardNumber: 'sMotherIdCardNumber',
  sMotherHomeNumber: 'sMotherHomeNumber',
  sMotherSoy: 'sMotherSoy',
  sMotherTumbon: 'sMotherTumbon',
  sMotherProvince: 'sMotherProvince',
  sMotherMuu: 'sMotherMuu',
  sMotherRoad: 'sMotherRoad',
  sMotherAumpher: 'sMotherAumpher',
  sMotherPost: 'sMotherPost',
  sMotherPhone: 'sMotherPhone',
  nWeight: 'nWeight',
  nHeight: 'nHeight',
  sBlood: 'sBlood',
  sSickFood: 'sSickFood',
  sSickDrug: 'sSickDrug',
  sSickOther: 'sSickOther',
  sSickNormal: 'sSickNormal',
  sSickDanger: 'sSickDanger',
  registerStatus: 'registerStatus',
  paymentStatus: 'paymentStatus',
  registerYear: 'registerYear',
  registerCode: 'registerCode',
  addressLat: 'addressLat',
  addressLng: 'addressLng',
  moveInDate: 'moveInDate',
  optionCourse: 'optionCourse',
  optionLevel: 'optionLevel',
  optionTime: 'optionTime',
  optionBranch: 'optionBranch',
  saveAsSID: 'saveAsSID',
  knowFrom9txt: 'knowFrom9txt',
  knowFrom9: 'knowFrom9',
  knowFrom8txt: 'knowFrom8txt',
  knowFrom8: 'knowFrom8',
  knowFrom7txt: 'knowFrom7txt',
  knowFrom7: 'knowFrom7',
  knowFrom6: 'knowFrom6',
  knowFrom5txt: 'knowFrom5txt',
  knowFrom5: 'knowFrom5',
  knowFrom4: 'knowFrom4',
  knowFrom3: 'knowFrom3',
  knowFrom2: 'knowFrom2',
  knowFrom1: 'knowFrom1',
  motherIncome: 'motherIncome',
  fatherIncome: 'fatherIncome',
  knowFrom10: 'knowFrom10',
  knowFrom11: 'knowFrom11',
  addDate: 'addDate',
  sFamilyNameEN: 'sFamilyNameEN',
  sFamilyLastEN: 'sFamilyLastEN',
  dFamilyBirthDay: 'dFamilyBirthDay',
  nFamilyRequestStudyMoney: 'nFamilyRequestStudyMoney',
  sFamilyGraduated: 'sFamilyGraduated',
  sFamilyJob: 'sFamilyJob',
  sFamilyWorkPlace: 'sFamilyWorkPlace',
  nFamilyIncome: 'nFamilyIncome',
  sFatherNameEN: 'sFatherNameEN',
  sFatherLastEN: 'sFatherLastEN',
  dFatherBirthDay: 'dFatherBirthDay',
  sFatherGraduated: 'sFatherGraduated',
  sFatherJob: 'sFatherJob',
  sFatherWorkPlace: 'sFatherWorkPlace',
  sFatherPhone2: 'sFatherPhone2',
  sFatherPhone3: 'sFatherPhone3',
  nFatherIncome: 'nFatherIncome',
  sMotherNameEN: 'sMotherNameEN',
  sMotherLastEN: 'sMotherLastEN',
  dMotherBirthDay: 'dMotherBirthDay',
  sMotherGraduated: 'sMotherGraduated',
  sMotherJob: 'sMotherJob',
  sMotherWorkPlace: 'sMotherWorkPlace',
  sMotherPhone2: 'sMotherPhone2',
  sMotherPhone3: 'sMotherPhone3',
  nMotherIncome: 'nMotherIncome',
  nSonTotal: 'nSonTotal',
  nRelativeStudyHere: 'nRelativeStudyHere',
  sNickNameEN: 'sNickNameEN',
  sStudentHomeRegisterCode: 'sStudentHomeRegisterCode',
  stayWithTitle: 'stayWithTitle',
  stayWithName: 'stayWithName',
  stayWithLast: 'stayWithLast',
  stayWithEmergencyCall: 'stayWithEmergencyCall',
  stayWithEmail: 'stayWithEmail',
  HomeType: 'HomeType',
  friendSID: 'friendSID',
  houseRegistrationNumber: 'houseRegistrationNumber',
  houseRegistrationMuu: 'houseRegistrationMuu',
  houseRegistrationSoy: 'houseRegistrationSoy',
  houseRegistrationRoad: 'houseRegistrationRoad',
  houseRegistrationProvince: 'houseRegistrationProvince',
  houseRegistrationAumpher: 'houseRegistrationAumpher',
  houseRegistrationTumbon: 'houseRegistrationTumbon',
  houseRegistrationPost: 'houseRegistrationPost',
  houseRegistrationPhone: 'houseRegistrationPhone',
  bornFrom: 'bornFrom',
  bornFromProvince: 'bornFromProvince',
  bornFromAumpher: 'bornFromAumpher',
  bornFromTumbon: 'bornFromTumbon',
  moveOutReason: 'moveOutReason',
  sStudentHousePhone: 'sStudentHousePhone',
  friendName: 'friendName',
  friendLastName: 'friendLastName',
  friendSubLevel: 'friendSubLevel',
  friendPhone: 'friendPhone',
  familyStatus: 'familyStatus',
  sStudentNameOther: 'sStudentNameOther',
  sStudentLastOther: 'sStudentLastOther',
  StudentType: 'StudentType',
  RegisterPlanSetupID: 'RegisterPlanSetupID',
  ExamCode: 'ExamCode',
  StudentCategory: 'StudentCategory',
  FatherAnnualIncome: 'FatherAnnualIncome',
  FatherEmail: 'FatherEmail',
  MotherAnnualIncome: 'MotherAnnualIncome',
  MotherEmail: 'MotherEmail',
  ParentAnnualIncome: 'ParentAnnualIncome',
  ParentEmail: 'ParentEmail',
  ExamResults: 'ExamResults',
  ExamResultsUpdateBy: 'ExamResultsUpdateBy',
  ExamResultsUpdateDate: 'ExamResultsUpdateDate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  ExamSeatNo: 'ExamSeatNo',
  RegisterExamRoomID: 'RegisterExamRoomID',
  CompleteDocuments: 'CompleteDocuments',
  CompleteDocumentsUpdateBy: 'CompleteDocumentsUpdateBy',
  CompleteDocumentsUpdateDate: 'CompleteDocumentsUpdateDate',
  CompleteDocumentsInfo: 'CompleteDocumentsInfo',
  MainPlan: 'MainPlan',
  BackupPlans: 'BackupPlans'
};

exports.Prisma.TPreRegisterDocumentScalarFieldEnum = {
  PreRegisterDocumentID: 'PreRegisterDocumentID',
  preRegisterId: 'preRegisterId',
  DocumentID: 'DocumentID',
  Type: 'Type',
  VFIID: 'VFIID',
  FileName: 'FileName',
  ContentType: 'ContentType',
  FilePath: 'FilePath',
  SchoolID: 'SchoolID',
  UpdateDate: 'UpdateDate'
};

exports.Prisma.TpreRegisterOptionScalarFieldEnum = {
  preRegisterOptionId: 'preRegisterOptionId',
  type: 'type',
  optionDescription: 'optionDescription',
  optionIndex: 'optionIndex',
  optionValue: 'optionValue',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TPreRegisterRequiredCategoryScalarFieldEnum = {
  CategoryID: 'CategoryID',
  CategoryName: 'CategoryName',
  CategoryNameEn: 'CategoryNameEn',
  Order: 'Order',
  IsDel: 'IsDel',
  CreateDate: 'CreateDate'
};

exports.Prisma.TPreRegisterRequiredFieldScalarFieldEnum = {
  VFIID: 'VFIID',
  CategoryID: 'CategoryID',
  SchoolID: 'SchoolID',
  Status: 'Status',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy'
};

exports.Prisma.TPreRegisterRequiredFieldInitiateScalarFieldEnum = {
  VFIID: 'VFIID',
  CategoryID: 'CategoryID',
  No: 'No',
  IsHead: 'IsHead',
  FieldName: 'FieldName',
  FieldNameEn: 'FieldNameEn',
  InputFieldName: 'InputFieldName',
  DefaultStatus: 'DefaultStatus',
  Order: 'Order',
  IsDel: 'IsDel',
  CreateDate: 'CreateDate'
};

exports.Prisma.TPreRegisterSendMailScalarFieldEnum = {
  SendMailID: 'SendMailID',
  preRegisterId: 'preRegisterId',
  SendTo: 'SendTo',
  SendFrom: 'SendFrom',
  Title: 'Title',
  Message: 'Message',
  SendDate: 'SendDate',
  SendBy: 'SendBy'
};

exports.Prisma.TProductScalarFieldEnum = {
  nProductID: 'nProductID',
  sProduct: 'sProduct',
  sBarCode: 'sBarCode',
  nNumber: 'nNumber',
  nCost: 'nCost',
  nPrice: 'nPrice',
  nBalance: 'nBalance',
  nType: 'nType',
  cDel: 'cDel',
  nWarn: 'nWarn',
  cStock: 'cStock',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  UnitID: 'UnitID'
};

exports.Prisma.TProductStockScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  ProductID: 'ProductID',
  ProductName: 'ProductName',
  Barcode: 'Barcode',
  nNumber: 'nNumber',
  Quantity: 'Quantity',
  CountSell: 'CountSell',
  CountStock: 'CountStock',
  ShopID: 'ShopID',
  ShopName: 'ShopName',
  StockStatus: 'StockStatus',
  nType: 'nType',
  BusinessDate: 'BusinessDate',
  Tstamp: 'Tstamp',
  SalesQty: 'SalesQty'
};

exports.Prisma.TQuestionnaireEQScalarFieldEnum = {
  QuestionnaireEQID: 'QuestionnaireEQID',
  SchoolID: 'SchoolID',
  TermID: 'TermID',
  YearID: 'YearID',
  sID: 'sID',
  QuestionDes: 'QuestionDes',
  QuestionScore: 'QuestionScore',
  QuestionSmallGroup: 'QuestionSmallGroup',
  QuestionLargeGroup: 'QuestionLargeGroup',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  cDel: 'cDel',
  EQType: 'EQType',
  ChoiceNo: 'ChoiceNo'
};

exports.Prisma.TQuestionnaireScreeningScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  RoomID: 'RoomID',
  StudentID: 'StudentID',
  TermID: 'TermID',
  YearID: 'YearID',
  Academic: 'Academic',
  AcademicRisk: 'AcademicRisk',
  AcademicRiskNote: 'AcademicRiskNote',
  AcademicProblem: 'AcademicProblem',
  AcademicProblemNote: 'AcademicProblemNote',
  Abilities: 'Abilities',
  AbilitiesNote: 'AbilitiesNote',
  Health: 'Health',
  HealthRisk: 'HealthRisk',
  HealthRiskNote: 'HealthRiskNote',
  HealthProblem: 'HealthProblem',
  HealthProblemNote: 'HealthProblemNote',
  MentalHealthBehavior1: 'MentalHealthBehavior1',
  MentalHealthBehavior2: 'MentalHealthBehavior2',
  MentalHealthBehavior3: 'MentalHealthBehavior3',
  MentalHealthBehavior4: 'MentalHealthBehavior4',
  MentalHealthBehavior5: 'MentalHealthBehavior5',
  Economic: 'Economic',
  EconomicRisk: 'EconomicRisk',
  EconomicRiskMoney: 'EconomicRiskMoney',
  EconomicRiskNote: 'EconomicRiskNote',
  EconomicProblem: 'EconomicProblem',
  EconomicProblemNote: 'EconomicProblemNote',
  Protection: 'Protection',
  ProtectionRisk: 'ProtectionRisk',
  ProtectionProblem: 'ProtectionProblem',
  ProtectionProblemNote: 'ProtectionProblemNote',
  SubstanceAbuse: 'SubstanceAbuse',
  Sex: 'Sex',
  OtherSide: 'OtherSide',
  OtherSideRiskNote: 'OtherSideRiskNote',
  OtherSideProblemNote: 'OtherSideProblemNote',
  Status: 'Status',
  IsDel: 'IsDel',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TQuestionnaireSDQScalarFieldEnum = {
  QuestionnaireSDQID: 'QuestionnaireSDQID',
  SchoolID: 'SchoolID',
  TermID: 'TermID',
  YearID: 'YearID',
  sID: 'sID',
  QuestionDes: 'QuestionDes',
  QuestionScore: 'QuestionScore',
  QuestionGroup: 'QuestionGroup',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy',
  cDel: 'cDel',
  SDQType: 'SDQType',
  ChoiceNo: 'ChoiceNo'
};

exports.Prisma.TQuizScalarFieldEnum = {
  nNumber: 'nNumber',
  sID: 'sID',
  sPlanid: 'sPlanid',
  sTerm: 'sTerm',
  dscore: 'dscore',
  sNote: 'sNote',
  dDatetimeCreate: 'dDatetimeCreate',
  dDatetimeUpdate: 'dDatetimeUpdate',
  sEmp: 'sEmp',
  dReScore: 'dReScore',
  QuizDay: 'QuizDay',
  dfullScore: 'dfullScore',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TrackingDataScalarFieldEnum = {
  ID: 'ID',
  PID: 'PID',
  ChVer: 'ChVer',
  ChCrVer: 'ChCrVer',
  ChOp: 'ChOp',
  sPID: 'sPID'
};

exports.Prisma.TRegisterExamRoomScalarFieldEnum = {
  RegisterExamRoomID: 'RegisterExamRoomID',
  nTSubLevel: 'nTSubLevel',
  RegisterPlanSetupID: 'RegisterPlanSetupID',
  ExamRoomName: 'ExamRoomName',
  Seats: 'Seats',
  SchoolID: 'SchoolID',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  IsDel: 'IsDel'
};

exports.Prisma.TRegisterExplanationScalarFieldEnum = {
  RegisterExplanationID: 'RegisterExplanationID',
  Description: 'Description',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TRegisterPlanSetupScalarFieldEnum = {
  RegPlanID: 'RegPlanID',
  RegisterPlanSetupID: 'RegisterPlanSetupID',
  nTSubLevel: 'nTSubLevel',
  PlanName: 'PlanName',
  PlanCode: 'PlanCode',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TRegisterRegularityScalarFieldEnum = {
  RegisterRegularityID: 'RegisterRegularityID',
  nTSubLevel: 'nTSubLevel',
  Filename: 'Filename',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TRegisterSetupScalarFieldEnum = {
  RegisterSetupID: 'RegisterSetupID',
  nYear: 'nYear',
  Year: 'Year',
  StudentType: 'StudentType',
  nTSubLevel: 'nTSubLevel',
  RegisterPlanSetupID: 'RegisterPlanSetupID',
  StudentMax: 'StudentMax',
  SubmitDocumentDate: 'SubmitDocumentDate',
  StartDate: 'StartDate',
  EndDate: 'EndDate',
  Fee: 'Fee',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  ExamAnnounce: 'ExamAnnounce',
  MeetingDate: 'MeetingDate',
  MeetingTime: 'MeetingTime',
  MeetingPlace: 'MeetingPlace',
  AttachmentsPassExam: 'AttachmentsPassExam',
  AttachmentsFailExam: 'AttachmentsFailExam',
  SchoolID: 'SchoolID',
  PlanID: 'PlanID',
  PaymentGroupID: 'PaymentGroupID',
  IsActiveBackupPlan: 'IsActiveBackupPlan',
  OrderPlans: 'OrderPlans',
  BackupPlans: 'BackupPlans',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TRoomScalarFieldEnum = {
  sRoomID: 'sRoomID',
  sRoomName: 'sRoomName',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TRoomChangeScalarFieldEnum = {
  RoomChangeID: 'RoomChangeID',
  sID: 'sID',
  Level2Old: 'Level2Old',
  Level2New: 'Level2New',
  DayChange: 'DayChange',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TSalesDailyReportScalarFieldEnum = {
  dSell: 'dSell',
  price: 'price',
  cost: 'cost',
  deduct: 'deduct',
  shop_id: 'shop_id',
  FD_ID: 'FD_ID',
  FD_SchoolID: 'FD_SchoolID',
  FD_CreatedDate: 'FD_CreatedDate'
};

exports.Prisma.TScheduleScalarFieldEnum = {
  sScheduleID: 'sScheduleID',
  nPlaneDay: 'nPlaneDay',
  tStart: 'tStart',
  tEnd: 'tEnd',
  dTimeStart_IN: 'dTimeStart_IN',
  dTimeStart_OUT: 'dTimeStart_OUT',
  dTimeEnd_IN: 'dTimeEnd_IN',
  dTimeEnd_OUT: 'dTimeEnd_OUT',
  nTimeLate: 'nTimeLate',
  dTimeHalf: 'dTimeHalf',
  sClassID: 'sClassID',
  sPlaneID: 'sPlaneID',
  sEmp: 'sEmp',
  nTermTable: 'nTermTable',
  cActive: 'cActive',
  cDel: 'cDel',
  calculate: 'calculate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TSchedule_StudentScalarFieldEnum = {
  sSchedule: 'sSchedule',
  sStudent: 'sStudent',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TScheduleTeacherScalarFieldEnum = {
  ScheduleTeacherId: 'ScheduleTeacherId',
  sScheduleID: 'sScheduleID',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  sEmp: 'sEmp'
};

exports.Prisma.TSchoolRecordScalarFieldEnum = {
  nSchoolRecordId: 'nSchoolRecordId',
  nTerm: 'nTerm',
  nTsudentId: 'nTsudentId',
  dAdd: 'dAdd',
  dUpdate: 'dUpdate',
  UserAdd: 'UserAdd',
  UserUpdate: 'UserUpdate',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TSchoolRecord_DetailScalarFieldEnum = {
  nSchoolRecordId: 'nSchoolRecordId',
  sPlaneID: 'sPlaneID',
  Grade: 'Grade',
  ReGrade: 'ReGrade',
  Note: 'Note',
  Score: 'Score',
  MaxScore: 'MaxScore',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TScoreScalarFieldEnum = {
  ScoreID: 'ScoreID',
  dScan: 'dScan',
  ScanStatusE0: 'ScanStatusE0',
  ScanStatusE1: 'ScanStatusE1',
  ScanStatusE2: 'ScanStatusE2',
  TotallAllEmp: 'TotallAllEmp',
  ScanStatusU0: 'ScanStatusU0',
  ScanStatusU1: 'ScanStatusU1',
  ScanStatusU2: 'ScanStatusU2',
  TotallAllUser: 'TotallAllUser',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TSellScalarFieldEnum = {
  dSell: 'dSell',
  sID: 'sID',
  sEmp: 'sEmp',
  nSession: 'nSession',
  nTotal: 'nTotal',
  sID2: 'sID2',
  shop_id: 'shop_id',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  id: 'id',
  sSellID: 'sSellID',
  ReferenceOrder: 'ReferenceOrder',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardID: 'CardID',
  DeviceID: 'DeviceID',
  Online: 'Online',
  UpdatedTime: 'UpdatedTime',
  Barcode: 'Barcode',
  NFCOrEncrypt: 'NFCOrEncrypt',
  PaymentType: 'PaymentType',
  RefPromptPay: 'RefPromptPay',
  ApplicationName: 'ApplicationName',
  SourceIP: 'SourceIP'
};

exports.Prisma.TSell_APIScalarFieldEnum = {
  ID: 'ID',
  SalesInfo: 'SalesInfo',
  Tstamp: 'Tstamp',
  ProductInfo: 'ProductInfo',
  sSellID: 'sSellID'
};

exports.Prisma.TSell_API_BackupScalarFieldEnum = {
  dSell: 'dSell',
  sID: 'sID',
  sEmp: 'sEmp',
  nSession: 'nSession',
  nTotal: 'nTotal',
  sID2: 'sID2',
  shop_id: 'shop_id',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  id: 'id',
  sSellID: 'sSellID',
  ReferenceOrder: 'ReferenceOrder',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardID: 'CardID',
  DeviceID: 'DeviceID',
  Online: 'Online',
  UpdatedTime: 'UpdatedTime',
  Barcode: 'Barcode',
  NFCOrEncrypt: 'NFCOrEncrypt',
  PaymentType: 'PaymentType',
  RefPromptPay: 'RefPromptPay',
  ApplicationName: 'ApplicationName',
  SourceIP: 'SourceIP'
};

exports.Prisma.TSell_DetailScalarFieldEnum = {
  SellDetailsID: 'SellDetailsID',
  nSell: 'nSell',
  nOrder: 'nOrder',
  nProduct: 'nProduct',
  nNumber: 'nNumber',
  cDel: 'cDel',
  nPrice: 'nPrice',
  nCost: 'nCost',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DiscountPer: 'DiscountPer',
  DiscountPrice: 'DiscountPrice'
};

exports.Prisma.TSell_Detail_HistoryScalarFieldEnum = {
  nSell: 'nSell',
  nOrder: 'nOrder',
  nProduct: 'nProduct',
  nNumber: 'nNumber',
  cDel: 'cDel',
  nPrice: 'nPrice',
  nCost: 'nCost',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TSell_Detail_RecoveredScalarFieldEnum = {
  SellDetailsID: 'SellDetailsID',
  nSell: 'nSell',
  nOrder: 'nOrder',
  nProduct: 'nProduct',
  nNumber: 'nNumber',
  cDel: 'cDel',
  nPrice: 'nPrice',
  nCost: 'nCost',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DiscountPer: 'DiscountPer',
  DiscountPrice: 'DiscountPrice'
};

exports.Prisma.TSell_DetailDBErrorScalarFieldEnum = {
  SellDetailsID: 'SellDetailsID',
  nSell: 'nSell',
  nOrder: 'nOrder',
  nProduct: 'nProduct',
  nNumber: 'nNumber',
  cDel: 'cDel',
  nPrice: 'nPrice',
  nCost: 'nCost',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DiscountPer: 'DiscountPer',
  DiscountPrice: 'DiscountPrice'
};

exports.Prisma.TSell_HistoryScalarFieldEnum = {
  dSell: 'dSell',
  sID: 'sID',
  sEmp: 'sEmp',
  nSession: 'nSession',
  nTotal: 'nTotal',
  sID2: 'sID2',
  shop_id: 'shop_id',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  id: 'id',
  sSellID: 'sSellID',
  ReferenceOrder: 'ReferenceOrder',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardID: 'CardID'
};

exports.Prisma.TSell_MoveScalarFieldEnum = {
  dSell: 'dSell',
  sID: 'sID',
  sEmp: 'sEmp',
  nSession: 'nSession',
  nTotal: 'nTotal',
  sID2: 'sID2',
  shop_id: 'shop_id',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  id: 'id',
  sSellID: 'sSellID',
  ReferenceOrder: 'ReferenceOrder',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardID: 'CardID',
  DeviceID: 'DeviceID',
  Online: 'Online',
  UpdatedTime: 'UpdatedTime',
  Barcode: 'Barcode',
  NFCOrEncrypt: 'NFCOrEncrypt',
  PaymentType: 'PaymentType',
  RefPromptPay: 'RefPromptPay',
  ApplicationName: 'ApplicationName',
  SourceIP: 'SourceIP'
};

exports.Prisma.TSell_RecoveredScalarFieldEnum = {
  dSell: 'dSell',
  sID: 'sID',
  sEmp: 'sEmp',
  nSession: 'nSession',
  nTotal: 'nTotal',
  sID2: 'sID2',
  shop_id: 'shop_id',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  id: 'id',
  sSellID: 'sSellID',
  ReferenceOrder: 'ReferenceOrder',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardID: 'CardID',
  DeviceID: 'DeviceID',
  Online: 'Online',
  UpdatedTime: 'UpdatedTime',
  Barcode: 'Barcode',
  NFCOrEncrypt: 'NFCOrEncrypt',
  PaymentType: 'PaymentType',
  RefPromptPay: 'RefPromptPay',
  ApplicationName: 'ApplicationName',
  SourceIP: 'SourceIP'
};

exports.Prisma.TSellDBErrorScalarFieldEnum = {
  dSell: 'dSell',
  sID: 'sID',
  sEmp: 'sEmp',
  nSession: 'nSession',
  nTotal: 'nTotal',
  sID2: 'sID2',
  shop_id: 'shop_id',
  dayCancal: 'dayCancal',
  UserCancel: 'UserCancel',
  id: 'id',
  sSellID: 'sSellID',
  ReferenceOrder: 'ReferenceOrder',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardID: 'CardID',
  DeviceID: 'DeviceID',
  Online: 'Online',
  UpdatedTime: 'UpdatedTime',
  Barcode: 'Barcode',
  NFCOrEncrypt: 'NFCOrEncrypt',
  PaymentType: 'PaymentType',
  RefPromptPay: 'RefPromptPay',
  ApplicationName: 'ApplicationName',
  SourceIP: 'SourceIP',
  Processed: 'Processed',
  ErrorInfo: 'ErrorInfo'
};

exports.Prisma.TSendDataPSISScalarFieldEnum = {
  SchoolID: 'SchoolID',
  nYear: 'nYear',
  sID: 'sID',
  SendDate: 'SendDate',
  StatusCode: 'StatusCode',
  ResponseContent: 'ResponseContent',
  SendDate2: 'SendDate2',
  StatusCode2: 'StatusCode2',
  ResponseContent2: 'ResponseContent2'
};

exports.Prisma.TSendGradePSISScalarFieldEnum = {
  SchoolID: 'SchoolID',
  nYear: 'nYear',
  Year: 'Year',
  nTerm: 'nTerm',
  Term: 'Term',
  sID: 'sID',
  sPlaneID: 'sPlaneID',
  CourseCode: 'CourseCode',
  Grade: 'Grade',
  SendDate: 'SendDate',
  StatusCode: 'StatusCode',
  ResponseContent: 'ResponseContent'
};

exports.Prisma.TSendSubjectPSISScalarFieldEnum = {
  SchoolID: 'SchoolID',
  sPlaneID: 'sPlaneID',
  SendDate: 'SendDate',
  StatusCode: 'StatusCode',
  ResponseContent: 'ResponseContent'
};

exports.Prisma.TSettingExtraTimeScalarFieldEnum = {
  nSettingExtraTime: 'nSettingExtraTime',
  sEMP: 'sEMP',
  nTermSubLevel2: 'nTermSubLevel2',
  nTerm: 'nTerm',
  addDate: 'addDate',
  sPlaneID: 'sPlaneID',
  useToken: 'useToken',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TShopScalarFieldEnum = {
  shop_id: 'shop_id',
  shop_name: 'shop_name',
  dayadd: 'dayadd',
  dayupdate: 'dayupdate',
  useradd: 'useradd',
  userupdate: 'userupdate',
  del: 'del',
  mobile: 'mobile',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  DeductPercent: 'DeductPercent'
};

exports.Prisma.TShop_EmployeesScalarFieldEnum = {
  ShopID: 'ShopID',
  sEmp: 'sEmp',
  ShopEmpID: 'ShopEmpID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TSMSScalarFieldEnum = {
  nSMS: 'nSMS',
  SMSTitle: 'SMSTitle',
  SMSDesp: 'SMSDesp',
  SMSType: 'SMSType',
  SMSSubType: 'SMSSubType',
  SMSDate: 'SMSDate',
  SMSDuration: 'SMSDuration',
  SMSStatus: 'SMSStatus',
  SMSAll: 'SMSAll',
  dSend: 'dSend',
  scheduled_id: 'scheduled_id',
  SMSEMP: 'SMSEMP',
  useradd: 'useradd',
  isDel: 'isDel',
  nActionType: 'nActionType',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  SMSGroupType: 'SMSGroupType',
  SMSGroupID: 'SMSGroupID'
};

exports.Prisma.TSMSGroupScalarFieldEnum = {
  SMSGroupID: 'SMSGroupID',
  SMSGroupName: 'SMSGroupName',
  Status: 'Status',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  GroupDefault: 'GroupDefault',
  SMSGroupNameEn: 'SMSGroupNameEn'
};

exports.Prisma.TSMSGroupUserScalarFieldEnum = {
  SMSGroupID: 'SMSGroupID',
  UserID: 'UserID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TSMSSubLevelScalarFieldEnum = {
  nTSubLevel: 'nTSubLevel',
  nSMS: 'nSMS',
  nSMSSub_id: 'nSMSSub_id',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStockScalarFieldEnum = {
  nStock: 'nStock',
  dStock: 'dStock',
  nUpdate: 'nUpdate',
  dUpdate: 'dUpdate',
  cDel: 'cDel',
  shop_id: 'shop_id',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  ContactID: 'ContactID',
  INVNo: 'INVNo',
  INVDate: 'INVDate',
  PONo: 'PONo',
  PODate: 'PODate',
  DocRef: 'DocRef',
  IsDone: 'IsDone',
  TaxType: 'TaxType'
};

exports.Prisma.TStockDetailScalarFieldEnum = {
  nStockDetailID: 'nStockDetailID',
  nStock: 'nStock',
  nOrder: 'nOrder',
  nNumber: 'nNumber',
  nProductID: 'nProductID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  Tstamp: 'Tstamp',
  Cost: 'Cost',
  SumPrice: 'SumPrice',
  SumNoTax: 'SumNoTax',
  DiscountType: 'DiscountType',
  Discount: 'Discount'
};

exports.Prisma.TStockDetailTempScalarFieldEnum = {
  nStockDetailID: 'nStockDetailID',
  nStock: 'nStock',
  nOrder: 'nOrder',
  nNumber: 'nNumber',
  nProductID: 'nProductID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  Tstamp: 'Tstamp',
  Cost: 'Cost',
  SumPrice: 'SumPrice',
  SumNoTax: 'SumNoTax',
  DiscountType: 'DiscountType',
  Discount: 'Discount'
};

exports.Prisma.TStockImproveScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  ProductID: 'ProductID',
  CheckDate: 'CheckDate',
  InStock: 'InStock',
  Count: 'Count',
  Diff: 'Diff',
  Remark: 'Remark',
  RemarkText: 'RemarkText',
  Created: 'Created',
  CreateBy: 'CreateBy',
  DocRef: 'DocRef'
};

exports.Prisma.TStockLogScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  ProductID: 'ProductID',
  ShopID: 'ShopID',
  LogDate: 'LogDate',
  TotalQty: 'TotalQty',
  TotalCost: 'TotalCost',
  AvgCost: 'AvgCost',
  Created: 'Created'
};

exports.Prisma.TStockLog_OldScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  ProductID: 'ProductID',
  ShopID: 'ShopID',
  LogDate: 'LogDate',
  TotalQty: 'TotalQty',
  TotalCost: 'TotalCost',
  AvgCost: 'AvgCost',
  Created: 'Created'
};

exports.Prisma.TStudentCardInfoScalarFieldEnum = {
  nStudentCardInfoId: 'nStudentCardInfoId',
  elementValue: 'elementValue',
  elementName: 'elementName',
  date: 'date',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TStudentClassroomHistoryScalarFieldEnum = {
  nHistoryId: 'nHistoryId',
  sID: 'sID',
  nTerm: 'nTerm',
  nTermSubLevel2: 'nTermSubLevel2',
  nStudentNumber: 'nStudentNumber',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  nStudentStatus: 'nStudentStatus',
  MoveInDate: 'MoveInDate',
  MoveOutDate: 'MoveOutDate',
  DropOutType: 'DropOutType',
  IsActive: 'IsActive',
  Note: 'Note'
};

exports.Prisma.TStudentHealthGrowthScalarFieldEnum = {
  nHealthID: 'nHealthID',
  nTSubLevel: 'nTSubLevel',
  nMonth: 'nMonth',
  Weight: 'Weight',
  Height: 'Height',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStudentHealthGrowth_HistoryScalarFieldEnum = {
  nHealthID: 'nHealthID',
  nTSubLevel: 'nTSubLevel',
  nMonth: 'nMonth',
  Weight: 'Weight',
  Height: 'Height',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStudentHealthInfoScalarFieldEnum = {
  StudentHealthID: 'StudentHealthID',
  nHealthID: 'nHealthID',
  sID: 'sID',
  sBlood: 'sBlood',
  sSickFood: 'sSickFood',
  sSickDrug: 'sSickDrug',
  sSickOther: 'sSickOther',
  sSickNormal: 'sSickNormal',
  sSickDanger: 'sSickDanger',
  sDeleted: 'sDeleted',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStudentHIstoryScalarFieldEnum = {
  StudentHistory_ID: 'StudentHistory_ID',
  nTermSubLevel2_OLD: 'nTermSubLevel2_OLD',
  nTermSubLevel2_NEW: 'nTermSubLevel2_NEW',
  DayStart: 'DayStart',
  DayEnd: 'DayEnd',
  StudentStatus: 'StudentStatus',
  DayAdd: 'DayAdd',
  USERADDID: 'USERADDID',
  nTerm: 'nTerm',
  sID: 'sID',
  SchoolID: 'SchoolID',
  dProfessionalStandard: 'dProfessionalStandard',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DiplomaCode: 'DiplomaCode',
  cDel: 'cDel'
};

exports.Prisma.TStudentLevelScalarFieldEnum = {
  sID: 'sID',
  nTermSubLevel2: 'nTermSubLevel2',
  nYear: 'nYear',
  nStdLvID: 'nStdLvID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStudentProfileScalarFieldEnum = {
  nProfileID: 'nProfileID',
  sID: 'sID',
  sStudentTitle: 'sStudentTitle',
  sStudentNameTH: 'sStudentNameTH',
  sStudentLastTH: 'sStudentLastTH',
  sStudentNameEN: 'sStudentNameEN',
  sStudentLastEN: 'sStudentLastEN',
  sStudentRace: 'sStudentRace',
  sStudentNation: 'sStudentNation',
  sStudentReligion: 'sStudentReligion',
  sStudentIdCardNumber: 'sStudentIdCardNumber',
  sStudentGender: 'sStudentGender',
  dStudentBirthday: 'dStudentBirthday',
  sStudentHomeNumber: 'sStudentHomeNumber',
  sStudentSoy: 'sStudentSoy',
  sStudentTumbon: 'sStudentTumbon',
  sStudentProvince: 'sStudentProvince',
  sStudentMuu: 'sStudentMuu',
  sStudentRoad: 'sStudentRoad',
  sStudentAumpher: 'sStudentAumpher',
  sStudentPost: 'sStudentPost',
  sStudentPhone: 'sStudentPhone',
  sStudentEmail: 'sStudentEmail',
  sStudentUsername: 'sStudentUsername',
  sStudentPassword: 'sStudentPassword',
  nTermSubLevel2: 'nTermSubLevel2',
  sStudentPicture: 'sStudentPicture',
  sDeleted: 'sDeleted',
  sNickName: 'sNickName',
  nSonNumber: 'nSonNumber',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStudenttimeScalarFieldEnum = {
  StudentTimeID: 'StudentTimeID',
  sID: 'sID',
  sClassID: 'sClassID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TStudentTypeScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  StudentTypeTH: 'StudentTypeTH',
  StudentTypeEN: 'StudentTypeEN',
  Status: 'Status',
  IsDel: 'IsDel',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  UpdatedDate: 'UpdatedDate',
  UpdatedBy: 'UpdatedBy'
};

exports.Prisma.TSubLevelScalarFieldEnum = {
  nTSubLevel: 'nTSubLevel',
  SubLevel: 'SubLevel',
  nTLevel: 'nTLevel',
  nTimeType: 'nTimeType',
  nDeleted: 'nDeleted',
  fullName: 'fullName',
  SubLevelEN: 'SubLevelEN',
  fullNameEN: 'fullNameEN',
  nWorkingStatus: 'nWorkingStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  isGraduate: 'isGraduate',
  MasterCode: 'MasterCode',
  SubLevelNameEN: 'SubLevelNameEN',
  SubLevelNameTH: 'SubLevelNameTH'
};

exports.Prisma.TSystemlogScalarFieldEnum = {
  SystemLogID: 'SystemLogID',
  sEmp: 'sEmp',
  dLog: 'dLog',
  sLog: 'sLog',
  nSession: 'nSession',
  nMenu: 'nMenu',
  action: 'action',
  systemtype: 'systemtype',
  ip: 'ip',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TTeacherCardInfoScalarFieldEnum = {
  TeacherCardInfoId: 'TeacherCardInfoId',
  elementValue: 'elementValue',
  elementName: 'elementName',
  date: 'date',
  cDel: 'cDel',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TTempScanCameraIPStatusScalarFieldEnum = {
  SchoolID: 'SchoolID',
  IP: 'IP',
  MAC: 'MAC',
  MachineName: 'MachineName',
  CameraNo: 'CameraNo',
  CameraIP: 'CameraIP',
  CameraStatus: 'CameraStatus',
  LastUpdate: 'LastUpdate'
};

exports.Prisma.TTempScanStatusOnlineScalarFieldEnum = {
  SchoolID: 'SchoolID',
  IP: 'IP',
  MAC: 'MAC',
  MachineName: 'MachineName',
  LastOnline: 'LastOnline',
  CameraNo: 'CameraNo',
  CameraIP: 'CameraIP',
  CameraStatus: 'CameraStatus'
};

exports.Prisma.TTermScalarFieldEnum = {
  nTerm: 'nTerm',
  nYear: 'nYear',
  numberTerm: 'numberTerm',
  TermStatus: 'TermStatus',
  cDel: 'cDel',
  sTerm: 'sTerm',
  dStart: 'dStart',
  dEnd: 'dEnd',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TTermSubLevel2ScalarFieldEnum = {
  nTermSubLevel2: 'nTermSubLevel2',
  nTerm: 'nTerm',
  nTSubLevel: 'nTSubLevel',
  nTSubLevel2: 'nTSubLevel2',
  nTermSubLevel2Status: 'nTermSubLevel2Status',
  nTimeType: 'nTimeType',
  nWorkingStatus: 'nWorkingStatus',
  nBranchSpecId: 'nBranchSpecId',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TTermTimeTableScalarFieldEnum = {
  nTermTable: 'nTermTable',
  nTermSubLevel2: 'nTermSubLevel2',
  nTeacher: 'nTeacher',
  nTerm: 'nTerm',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TTimeScalarFieldEnum = {
  TimeID: 'TimeID',
  dTimeStart_IN: 'dTimeStart_IN',
  dTimeEnd_IN: 'dTimeEnd_IN',
  dTimeStart_OUT: 'dTimeStart_OUT',
  dTimeEnd_OUT: 'dTimeEnd_OUT',
  nDay: 'nDay',
  cDel: 'cDel',
  nTimeType: 'nTimeType',
  nTimeLate: 'nTimeLate',
  dTimeHalf: 'dTimeHalf',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TTimetypeScalarFieldEnum = {
  nTimeType: 'nTimeType',
  sTimeType: 'sTimeType',
  cDel: 'cDel',
  cType: 'cType',
  cUserType: 'cUserType',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TTitleListScalarFieldEnum = {
  nSchoolId: 'nSchoolId',
  titleDescription: 'titleDescription',
  titleDescriptionEn: 'titleDescriptionEn',
  deleted: 'deleted',
  workStatus: 'workStatus',
  nTitleid: 'nTitleid',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  MasterCode: 'MasterCode'
};

exports.Prisma.TTranscriptNumberScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  nTerm: 'nTerm',
  nTSubLevel: 'nTSubLevel',
  nTermSubLevel2: 'nTermSubLevel2',
  sID: 'sID',
  TranscriptSetNumber: 'TranscriptSetNumber',
  TranscriptNumber: 'TranscriptNumber',
  cDel: 'cDel',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedBy: 'UpdatedBy',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TTypeScalarFieldEnum = {
  nTypeID: 'nTypeID',
  sType: 'sType',
  cDel: 'cDel',
  shop_id: 'shop_id',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate'
};

exports.Prisma.TUnitScalarFieldEnum = {
  UnitID: 'UnitID',
  Unit: 'Unit',
  Flag: 'Flag',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TUserScalarFieldEnum = {
  sID: 'sID',
  sStudentTitle: 'sStudentTitle',
  sName: 'sName',
  sLastname: 'sLastname',
  sIdentification: 'sIdentification',
  dBirth: 'dBirth',
  cSex: 'cSex',
  sPhone: 'sPhone',
  sEmail: 'sEmail',
  sPassword: 'sPassword',
  sSubtopic: 'sSubtopic',
  sAddress: 'sAddress',
  sCity: 'sCity',
  sPostalcode: 'sPostalcode',
  sCountry: 'sCountry',
  dUpdate: 'dUpdate',
  sFinger: 'sFinger',
  nMoney: 'nMoney',
  sFinger2: 'sFinger2',
  nMax: 'nMax',
  cType: 'cType',
  cDel: 'cDel',
  cSMS: 'cSMS',
  baseSalary: 'baseSalary',
  cTelSMS: 'cTelSMS',
  nTermSubLevel2: 'nTermSubLevel2',
  sToken: 'sToken',
  sStudentID: 'sStudentID',
  sStudentNameEN: 'sStudentNameEN',
  sStudentLastEN: 'sStudentLastEN',
  sStudentRace: 'sStudentRace',
  sStudentNation: 'sStudentNation',
  sStudentReligion: 'sStudentReligion',
  sStudentIdCardNumber: 'sStudentIdCardNumber',
  sStudentHomeNumber: 'sStudentHomeNumber',
  sStudentSoy: 'sStudentSoy',
  sStudentTumbon: 'sStudentTumbon',
  sStudentProvince: 'sStudentProvince',
  sStudentMuu: 'sStudentMuu',
  sStudentRoad: 'sStudentRoad',
  sStudentAumpher: 'sStudentAumpher',
  sStudentPost: 'sStudentPost',
  sStudentPicture: 'sStudentPicture',
  sNickName: 'sNickName',
  nSonNumber: 'nSonNumber',
  dPicUpdate: 'dPicUpdate',
  nPicversion: 'nPicversion',
  nStudentNumber: 'nStudentNumber',
  nStudentStatus: 'nStudentStatus',
  ContactPeak: 'ContactPeak',
  DayQuit: 'DayQuit',
  Note: 'Note',
  oldSchoolName: 'oldSchoolName',
  oldSchoolProvince: 'oldSchoolProvince',
  oldSchoolAumpher: 'oldSchoolAumpher',
  oldSchoolTumbon: 'oldSchoolTumbon',
  oldSchoolGPA: 'oldSchoolGPA',
  oldSchoolGraduated: 'oldSchoolGraduated',
  moveInDate: 'moveInDate',
  addressLng: 'addressLng',
  addressLat: 'addressLat',
  moveOutReason: 'moveOutReason',
  sNickNameEN: 'sNickNameEN',
  sStudentHomeRegisterCode: 'sStudentHomeRegisterCode',
  sStudentHousePhone: 'sStudentHousePhone',
  sStudentNameOther: 'sStudentNameOther',
  sStudentLastOther: 'sStudentLastOther',
  SchoolID: 'SchoolID',
  Note2: 'Note2',
  Credit: 'Credit',
  DiplomaCode: 'DiplomaCode',
  TranscriptSetNumber: 'TranscriptSetNumber',
  TranscriptNumber: 'TranscriptNumber',
  oldSchoolGPA2: 'oldSchoolGPA2',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DisabilityCode: 'DisabilityCode',
  DisadvantageCode: 'DisadvantageCode',
  DailyUsageLimit: 'DailyUsageLimit',
  JourneyType: 'JourneyType',
  DormitoryName: 'DormitoryName',
  OldSchoolDateGraduated: 'OldSchoolDateGraduated',
  PassportNumber: 'PassportNumber',
  PassportCountry: 'PassportCountry',
  PassportExpirationDate: 'PassportExpirationDate',
  CountryType: 'CountryType',
  CountryNameTH: 'CountryNameTH',
  CountryNameEN: 'CountryNameEN',
  StudentTypeID: 'StudentTypeID'
};

exports.Prisma.TUserAttendanceScalarFieldEnum = {
  AttendanceID: 'AttendanceID',
  SchoolID: 'SchoolID',
  sID: 'sID',
  cType: 'cType',
  MacAddress: 'MacAddress',
  ShopID: 'ShopID',
  NFCEncrypt: 'NFCEncrypt',
  sName: 'sName',
  sLastName: 'sLastName',
  sStudentID: 'sStudentID',
  sStudentPicture: 'sStudentPicture',
  AttendanceDate: 'AttendanceDate',
  TStamp: 'TStamp'
};

exports.Prisma.TUserBlackListScalarFieldEnum = {
  nProductID: 'nProductID',
  sID: 'sID',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.TUserNewScalarFieldEnum = {
  sID: 'sID',
  sStudentTitle: 'sStudentTitle',
  sName: 'sName',
  sLastname: 'sLastname',
  sIdentification: 'sIdentification',
  dBirth: 'dBirth',
  cSex: 'cSex',
  sPhone: 'sPhone',
  sEmail: 'sEmail',
  sPassword: 'sPassword',
  sSubtopic: 'sSubtopic',
  sAddress: 'sAddress',
  sCity: 'sCity',
  sPostalcode: 'sPostalcode',
  sCountry: 'sCountry',
  dUpdate: 'dUpdate',
  sFinger: 'sFinger',
  nMoney: 'nMoney',
  sFinger2: 'sFinger2',
  nMax: 'nMax',
  cType: 'cType',
  cDel: 'cDel',
  cSMS: 'cSMS',
  baseSalary: 'baseSalary',
  cTelSMS: 'cTelSMS',
  nTermSubLevel2: 'nTermSubLevel2',
  sToken: 'sToken',
  sStudentID: 'sStudentID',
  sStudentNameEN: 'sStudentNameEN',
  sStudentLastEN: 'sStudentLastEN',
  sStudentRace: 'sStudentRace',
  sStudentNation: 'sStudentNation',
  sStudentReligion: 'sStudentReligion',
  sStudentIdCardNumber: 'sStudentIdCardNumber',
  sStudentHomeNumber: 'sStudentHomeNumber',
  sStudentSoy: 'sStudentSoy',
  sStudentTumbon: 'sStudentTumbon',
  sStudentProvince: 'sStudentProvince',
  sStudentMuu: 'sStudentMuu',
  sStudentRoad: 'sStudentRoad',
  sStudentAumpher: 'sStudentAumpher',
  sStudentPost: 'sStudentPost',
  sStudentPicture: 'sStudentPicture',
  sNickName: 'sNickName',
  nSonNumber: 'nSonNumber',
  dPicUpdate: 'dPicUpdate',
  nPicversion: 'nPicversion',
  nStudentNumber: 'nStudentNumber',
  nStudentStatus: 'nStudentStatus',
  ContactPeak: 'ContactPeak',
  DayQuit: 'DayQuit',
  Note: 'Note',
  oldSchoolName: 'oldSchoolName',
  oldSchoolProvince: 'oldSchoolProvince',
  oldSchoolAumpher: 'oldSchoolAumpher',
  oldSchoolTumbon: 'oldSchoolTumbon',
  oldSchoolGPA: 'oldSchoolGPA',
  oldSchoolGraduated: 'oldSchoolGraduated',
  moveInDate: 'moveInDate',
  addressLng: 'addressLng',
  addressLat: 'addressLat',
  moveOutReason: 'moveOutReason',
  sNickNameEN: 'sNickNameEN',
  sStudentHomeRegisterCode: 'sStudentHomeRegisterCode',
  sStudentHousePhone: 'sStudentHousePhone',
  sStudentNameOther: 'sStudentNameOther',
  sStudentLastOther: 'sStudentLastOther',
  SchoolID: 'SchoolID',
  Note2: 'Note2',
  Credit: 'Credit',
  DiplomaCode: 'DiplomaCode',
  TranscriptSetNumber: 'TranscriptSetNumber',
  TranscriptNumber: 'TranscriptNumber',
  oldSchoolGPA2: 'oldSchoolGPA2',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  DisabilityCode: 'DisabilityCode',
  DisadvantageCode: 'DisadvantageCode',
  DailyUsageLimit: 'DailyUsageLimit',
  JourneyType: 'JourneyType',
  DormitoryName: 'DormitoryName'
};

exports.Prisma.TUserVerifyScalarFieldEnum = {
  VerifyID: 'VerifyID',
  SchoolID: 'SchoolID',
  UserID: 'UserID',
  Type: 'Type',
  No: 'No',
  Email: 'Email',
  PhoneNumber: 'PhoneNumber',
  RequestNo: 'RequestNo',
  Token: 'Token',
  EmailPin: 'EmailPin',
  Ref: 'Ref',
  RequestDate: 'RequestDate',
  RequestResponse: 'RequestResponse',
  VerifyPin: 'VerifyPin',
  VerifyDate: 'VerifyDate',
  VerifyResponse: 'VerifyResponse',
  Status: 'Status'
};

exports.Prisma.TUserVerifyLINEConnectScalarFieldEnum = {
  ConnectID: 'ConnectID',
  SchoolID: 'SchoolID',
  UserID: 'UserID',
  LINEAuthorizeCode: 'LINEAuthorizeCode',
  LINEToken: 'LINEToken',
  ConnectDate: 'ConnectDate',
  Status: 'Status'
};

exports.Prisma.TVisitHouseScalarFieldEnum = {
  Year: 'Year',
  VisitHouseID: 'VisitHouseID',
  Term: 'Term',
  sID: 'sID',
  TimeTogether: 'TimeTogether',
  FatherRelationsLevel: 'FatherRelationsLevel',
  MotherRelationsLevel: 'MotherRelationsLevel',
  BrotherRelationsLevel: 'BrotherRelationsLevel',
  SistersRelationsLevel: 'SistersRelationsLevel',
  RelativeRelationsLevel: 'RelativeRelationsLevel',
  TakeCareChildren: 'TakeCareChildren',
  TakeCareChildrenOther: 'TakeCareChildrenOther',
  HouseholdIncome: 'HouseholdIncome',
  ExpensesFrom: 'ExpensesFrom',
  ExtraWork: 'ExtraWork',
  ExtraWorkIncome: 'ExtraWorkIncome',
  CarryMoneySchool: 'CarryMoneySchool',
  HelpFromSchool: 'HelpFromSchool',
  HelpFromSchoolOther: 'HelpFromSchoolOther',
  HelpFamilyReceived: 'HelpFamilyReceived',
  HelpFamilyReceivedOther: 'HelpFamilyReceivedOther',
  ParentsConcerns: 'ParentsConcerns',
  Health: 'Health',
  Welfare: 'Welfare',
  DistanceSchool: 'DistanceSchool',
  TimeSchoolHour: 'TimeSchoolHour',
  TimeSchoolMinute: 'TimeSchoolMinute',
  TravelMethod: 'TravelMethod',
  TravelMethodOther: 'TravelMethodOther',
  LivingConditions: 'LivingConditions',
  StudentWorkFamily: 'StudentWorkFamily',
  StudentWorkFamilyOther: 'StudentWorkFamilyOther',
  Hobby: 'Hobby',
  HobbyOther: 'HobbyOther',
  SubstanceAbuseBehavior: 'SubstanceAbuseBehavior',
  ViolenceBehavior: 'ViolenceBehavior',
  SexualBehavior: 'SexualBehavior',
  GameAddiction: 'GameAddiction',
  GameAddictionOther: 'GameAddictionOther',
  InternetAccess: 'InternetAccess',
  UsingElectronicTools: 'UsingElectronicTools',
  Informant: 'Informant',
  PhotosOutsideHome: 'PhotosOutsideHome',
  PhotosInsideHome: 'PhotosInsideHome',
  Latitude: 'Latitude',
  Longitude: 'Longitude',
  StampDate: 'StampDate',
  StampTime: 'StampTime',
  UpdateDate: 'UpdateDate',
  UpdateBy: 'UpdateBy',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  cDel: 'cDel'
};

exports.Prisma.TWithdrawalScalarFieldEnum = {
  id: 'id',
  Withdrawal_Id: 'Withdrawal_Id',
  dWithdrawal: 'dWithdrawal',
  userAdd: 'userAdd',
  UserID: 'UserID',
  userType: 'userType',
  bCancel: 'bCancel',
  dCanCel: 'dCanCel',
  userCancel: 'userCancel',
  sWithdrawalType: 'sWithdrawalType',
  nBalance: 'nBalance',
  nMoney: 'nMoney',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardHistoryID: 'CardHistoryID'
};

exports.Prisma.TWithdrawal_BackupScalarFieldEnum = {
  id: 'id',
  Withdrawal_Id: 'Withdrawal_Id',
  dWithdrawal: 'dWithdrawal',
  userAdd: 'userAdd',
  UserID: 'UserID',
  userType: 'userType',
  bCancel: 'bCancel',
  dCanCel: 'dCanCel',
  userCancel: 'userCancel',
  sWithdrawalType: 'sWithdrawalType',
  nBalance: 'nBalance',
  nMoney: 'nMoney',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel',
  CardHistoryID: 'CardHistoryID'
};

exports.Prisma.TWithdrawalGroupScalarFieldEnum = {
  WithdrawID: 'WithdrawID',
  SchoolID: 'SchoolID',
  TermID: 'TermID',
  LevelID: 'LevelID',
  RoomID: 'RoomID',
  WithdrawType: 'WithdrawType',
  Amount: 'Amount',
  SuccessUserID: 'SuccessUserID',
  FailUserID: 'FailUserID',
  Created: 'Created',
  CreateBy: 'CreateBy',
  CancleDate: 'CancleDate',
  CancleBy: 'CancleBy'
};

exports.Prisma.TYearScalarFieldEnum = {
  nYear: 'nYear',
  numberYear: 'numberYear',
  YearStatus: 'YearStatus',
  SchoolID: 'SchoolID',
  CreatedBy: 'CreatedBy',
  UpdatedBy: 'UpdatedBy',
  CreatedDate: 'CreatedDate',
  UpdatedDate: 'UpdatedDate',
  cDel: 'cDel'
};

exports.Prisma.UpdateBalanceScalarFieldEnum = {
  LogID: 'LogID',
  sID: 'sID',
  sEmp: 'sEmp',
  SchoolID: 'SchoolID',
  nMoney: 'nMoney',
  Tstamp: 'Tstamp',
  Source: 'Source'
};

exports.Prisma.UpdateBalanceLogScalarFieldEnum = {
  LogID: 'LogID',
  sID: 'sID',
  OldBalance: 'OldBalance',
  NewBalance: 'NewBalance',
  Source: 'Source',
  TStatmp: 'TStatmp'
};

exports.Prisma.UpdateBalanceLogOldScalarFieldEnum = {
  uID: 'uID',
  sID: 'sID',
  sEmp: 'sEmp',
  SchoolID: 'SchoolID',
  nMoney: 'nMoney',
  Tstamp: 'Tstamp',
  CardID: 'CardID'
};

exports.Prisma.UpdateBalanceMemoryScalarFieldEnum = {
  LogID: 'LogID',
  sID: 'sID',
  sEmp: 'sEmp',
  SchoolID: 'SchoolID',
  nMoney: 'nMoney',
  Tstamp: 'Tstamp',
  Source: 'Source'
};

exports.Prisma.UpdatedShopsScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  DeviceID: 'DeviceID',
  UserID: 'UserID',
  ShopID: 'ShopID'
};

exports.Prisma.UpdatedUsersScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  DeviceID: 'DeviceID',
  UserID: 'UserID',
  sID: 'sID'
};

exports.Prisma.UpdateTempCardScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  Money: 'Money',
  CardID: 'CardID',
  CardHistoryID: 'CardHistoryID',
  MethodName: 'MethodName',
  NFC: 'NFC',
  Tstamp: 'Tstamp'
};

exports.Prisma.UpdateTempCardMoneyScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  Money: 'Money',
  CardID: 'CardID',
  CardHistoryID: 'CardHistoryID',
  NFCEncrypt: 'NFCEncrypt',
  MethodName: 'MethodName',
  Tstamp: 'Tstamp'
};

exports.Prisma.UserAPIResponseScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  MethodName: 'MethodName',
  DeviceTime: 'DeviceTime',
  ResponseTime: 'ResponseTime',
  APIProcessedTime: 'APIProcessedTime',
  Tstamp: 'Tstamp',
  EmployeeID: 'EmployeeID',
  ShopID: 'ShopID',
  sID: 'sID',
  sEmp: 'sEmp',
  UserID: 'UserID',
  Status: 'Status'
};

exports.Prisma.UserDailyBalance_BackupScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  sID: 'sID',
  sStudentID: 'sStudentID',
  sName: 'sName',
  sLastname: 'sLastname',
  cDel: 'cDel',
  cType: 'cType',
  BusinessDate: 'BusinessDate',
  OpeningBalance: 'OpeningBalance',
  TotalTopUp: 'TotalTopUp',
  TotalCancelTopUp: 'TotalCancelTopUp',
  TotalWithDraw: 'TotalWithDraw',
  TotalCancelWithDraw: 'TotalCancelWithDraw',
  TotalSales: 'TotalSales',
  TotalCancelSales: 'TotalCancelSales',
  LastUpdatedDate: 'LastUpdatedDate',
  Balance: 'Balance',
  OfflineSales: 'OfflineSales',
  SystemBalance: 'SystemBalance'
};

exports.Prisma.UserDailyBalance_SearlizeScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  BusinessDate: 'BusinessDate',
  UserDailyBalance: 'UserDailyBalance',
  LastUpdatedDate: 'LastUpdatedDate'
};

exports.Prisma.UserDailyBalanceTempScalarFieldEnum = {
  ID: 'ID',
  SchoolID: 'SchoolID',
  sID: 'sID',
  sStudentID: 'sStudentID',
  sName: 'sName',
  sLastname: 'sLastname',
  cDel: 'cDel',
  cType: 'cType',
  BusinessDate: 'BusinessDate',
  OpeningBalance: 'OpeningBalance',
  TotalTopUp: 'TotalTopUp',
  TotalCancelTopUp: 'TotalCancelTopUp',
  TotalWithDraw: 'TotalWithDraw',
  TotalCancelWithDraw: 'TotalCancelWithDraw',
  TotalSales: 'TotalSales',
  TotalCancelSales: 'TotalCancelSales',
  LastUpdatedDate: 'LastUpdatedDate',
  Balance: 'Balance',
  SystemBalance: 'SystemBalance'
};

exports.Prisma.UserDailyBalanceTempCardScalarFieldEnum = {
  SchoolID: 'SchoolID',
  sID: 'sID',
  sStudentID: 'sStudentID',
  sName: 'sName',
  sLastname: 'sLastname',
  cDel: 'cDel',
  cType: 'cType',
  BusinessDate: 'BusinessDate',
  OpeningBalance: 'OpeningBalance',
  TotalTopUp: 'TotalTopUp',
  TotalCancelTopUp: 'TotalCancelTopUp',
  TotalWithDraw: 'TotalWithDraw',
  TotalCancelWithDraw: 'TotalCancelWithDraw',
  TotalSales: 'TotalSales',
  TotalCancelSales: 'TotalCancelSales',
  LastUpdatedDate: 'LastUpdatedDate',
  Balance: 'Balance',
  CardHistoryID: 'CardHistoryID',
  OfflineSales: 'OfflineSales',
  Insurance: 'Insurance',
  SystemBalance: 'SystemBalance',
  ID: 'ID'
};

exports.Prisma.UserDailySalesScalarFieldEnum = {
  SalesID: 'SalesID',
  SchoolID: 'SchoolID',
  sID: 'sID',
  sStudentID: 'sStudentID',
  SName: 'SName',
  sLastName: 'sLastName',
  cDel: 'cDel',
  cType: 'cType',
  TotalSales: 'TotalSales',
  TotalCancelSales: 'TotalCancelSales',
  TransactionDate: 'TransactionDate',
  BusinessDate: 'BusinessDate'
};

exports.Prisma.UserUsedLimitScalarFieldEnum = {
  ID: 'ID',
  UserID: 'UserID',
  UserType: 'UserType',
  UsedAmount: 'UsedAmount',
  Tstamp: 'Tstamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  AnswerKey: 'AnswerKey',
  APIConfiguration: 'APIConfiguration',
  APILog: 'APILog',
  APIMemoryData: 'APIMemoryData',
  APIResponse: 'APIResponse',
  APIResponseDev: 'APIResponseDev',
  APIResponseErrors: 'APIResponseErrors',
  APISampleRequest: 'APISampleRequest',
  ApplicationConfiguration: 'ApplicationConfiguration',
  aspnet_Applications: 'aspnet_Applications',
  aspnet_Membership: 'aspnet_Membership',
  aspnet_Paths: 'aspnet_Paths',
  aspnet_PersonalizationAllUsers: 'aspnet_PersonalizationAllUsers',
  aspnet_PersonalizationPerUser: 'aspnet_PersonalizationPerUser',
  aspnet_Profile: 'aspnet_Profile',
  aspnet_Roles: 'aspnet_Roles',
  aspnet_SchemaVersions: 'aspnet_SchemaVersions',
  aspnet_Users: 'aspnet_Users',
  aspnet_UsersInRoles: 'aspnet_UsersInRoles',
  aspnet_WebEvent_Events: 'aspnet_WebEvent_Events',
  BBLTransaction: 'BBLTransaction',
  CommandLog: 'CommandLog',
  DailyProductSales: 'DailyProductSales',
  DailySales: 'DailySales',
  DashboardData: 'DashboardData',
  DeviceDailyStatus: 'DeviceDailyStatus',
  DeviceUpdateStatus: 'DeviceUpdateStatus',
  ExcelExportData: 'ExcelExportData',
  IdentityTable: 'IdentityTable',
  KPromptPayAccessToken: 'KPromptPayAccessToken',
  KPromptPayTransaction: 'KPromptPayTransaction',
  KPromptPayTransactionInquiry: 'KPromptPayTransactionInquiry',
  KResCharge: 'KResCharge',
  KResInquiryQR: 'KResInquiryQR',
  KResOrder: 'KResOrder',
  KTBApprovalTransaction: 'KTBApprovalTransaction',
  KTBPaymentTransaction: 'KTBPaymentTransaction',
  KTBTransaction: 'KTBTransaction',
  KTransaction: 'KTransaction',
  MemorySchoolDBUser: 'MemorySchoolDBUser',
  MemorySchoolEmployees: 'MemorySchoolEmployees',
  MemoryTempCard: 'MemoryTempCard',
  ModifiedShops: 'ModifiedShops',
  ModifiedUsers: 'ModifiedUsers',
  OfflineSales: 'OfflineSales',
  PaymentServersDetails: 'PaymentServersDetails',
  PTDailySalesAPI: 'PTDailySalesAPI',
  SBLoginHistory: 'SBLoginHistory',
  SchoolIDMapping: 'SchoolIDMapping',
  sysdiagrams: 'sysdiagrams',
  T_FSDQ_Answer: 'T_FSDQ_Answer',
  T_FSDQ_Data: 'T_FSDQ_Data',
  T_FSDQ_Point: 'T_FSDQ_Point',
  T_FSDQ_Question: 'T_FSDQ_Question',
  TAPIRequestResponse: 'TAPIRequestResponse',
  TApproveEmployeeContactAddress: 'TApproveEmployeeContactAddress',
  TApproveEmployeeEducation: 'TApproveEmployeeEducation',
  TApproveEmployeeFamily: 'TApproveEmployeeFamily',
  TApproveEmployeeHistoryReceivingRoyalDecoration: 'TApproveEmployeeHistoryReceivingRoyalDecoration',
  TApproveEmployeeHonor: 'TApproveEmployeeHonor',
  TApproveEmployeeOccupationalLicense: 'TApproveEmployeeOccupationalLicense',
  TApproveEmployeePermanentAddress: 'TApproveEmployeePermanentAddress',
  TApproveEmployeeProfile: 'TApproveEmployeeProfile',
  TApproveEmployeeTraining: 'TApproveEmployeeTraining',
  TApproveStudentContactAddress: 'TApproveStudentContactAddress',
  TApproveStudentFatherInfo: 'TApproveStudentFatherInfo',
  TApproveStudentMotherInfo: 'TApproveStudentMotherInfo',
  TApproveStudentParentInfo: 'TApproveStudentParentInfo',
  TApproveStudentPermanentAddress: 'TApproveStudentPermanentAddress',
  TApproveStudentProfile: 'TApproveStudentProfile',
  TAssetCategory: 'TAssetCategory',
  TAssetCutting: 'TAssetCutting',
  TAssetGet: 'TAssetGet',
  TAssetProduct: 'TAssetProduct',
  TAssetTransaction: 'TAssetTransaction',
  TAssetTransfer: 'TAssetTransfer',
  TAssetWithdraw: 'TAssetWithdraw',
  TB_EQ_Answer: 'TB_EQ_Answer',
  TB_EQ_Data: 'TB_EQ_Data',
  TB_EQ_Group: 'TB_EQ_Group',
  TB_EQ_Point: 'TB_EQ_Point',
  TB_EQ_Question: 'TB_EQ_Question',
  TB_HistorySetting: 'TB_HistorySetting',
  TBackupCard: 'TBackupCard',
  TBackupCardHistory: 'TBackupCardHistory',
  TBaseSalary: 'TBaseSalary',
  TBehavior: 'TBehavior',
  TBehaviorHistory: 'TBehaviorHistory',
  TBehaviorHistory_Files: 'TBehaviorHistory_Files',
  TBehaviorSetting: 'TBehaviorSetting',
  TBehaviorTimeSetting: 'TBehaviorTimeSetting',
  TBlackList: 'TBlackList',
  TBranch: 'TBranch',
  TBranchSpec: 'TBranchSpec',
  TBranchSubject: 'TBranchSubject',
  TCalendar: 'TCalendar',
  TClass: 'TClass',
  TClassMember: 'TClassMember',
  TClassOnline: 'TClassOnline',
  TCourseGroup: 'TCourseGroup',
  TCourseGroupTranslation: 'TCourseGroupTranslation',
  TCourseRegister: 'TCourseRegister',
  TCourseTranslation: 'TCourseTranslation',
  TCourseType: 'TCourseType',
  TCourseTypeTranslation: 'TCourseTypeTranslation',
  TCurriculum: 'TCurriculum',
  TDepartment: 'TDepartment',
  TDocumentStampDate: 'TDocumentStampDate',
  TEmpAddress: 'TEmpAddress',
  TEmpEducationInfo: 'TEmpEducationInfo',
  TEmpFamily: 'TEmpFamily',
  TEmpHonor: 'TEmpHonor',
  TEmpInsignia: 'TEmpInsignia',
  TEmployeeInfo: 'TEmployeeInfo',
  TEmployees: 'TEmployees',
  TEmployeesNew: 'TEmployeesNew',
  TEmployeeType: 'TEmployeeType',
  TEmpProfessionalLicense: 'TEmpProfessionalLicense',
  TEmpSalary: 'TEmpSalary',
  TEmpSigner: 'TEmpSigner',
  TEmpTeaching: 'TEmpTeaching',
  TEmpTOEIC: 'TEmpTOEIC',
  TEmpTraining: 'TEmpTraining',
  TExam: 'TExam',
  TExamAnswer: 'TExamAnswer',
  TExamRange: 'TExamRange',
  TExamResult: 'TExamResult',
  TFaceScanLog: 'TFaceScanLog',
  TFamilyProfile: 'TFamilyProfile',
  TGradeAttendance: 'TGradeAttendance',
  TGradeCheck: 'TGradeCheck',
  TGradeLock: 'TGradeLock',
  TGradeMigration: 'TGradeMigration',
  TGradeRegisterPeriod: 'TGradeRegisterPeriod',
  TGradeShareInfo: 'TGradeShareInfo',
  TGradeTeacherDescribe: 'TGradeTeacherDescribe',
  TGradeViewRoomListSetting: 'TGradeViewRoomListSetting',
  TGradeViewSetting: 'TGradeViewSetting',
  TGradeViewStudentBlockListSetting: 'TGradeViewStudentBlockListSetting',
  TGroupExam: 'TGroupExam',
  TGroupExamDetail: 'TGroupExamDetail',
  THealtProfile: 'THealtProfile',
  THistoryLog: 'THistoryLog',
  THoliday: 'THoliday',
  THolidayLog: 'THolidayLog',
  THolidaySome: 'THolidaySome',
  THomeVisit: 'THomeVisit',
  THomeVisitFile: 'THomeVisitFile',
  THomework: 'THomework',
  THomework_User: 'THomework_User',
  THomework_User_File: 'THomework_User_File',
  THomework_User_History: 'THomework_User_History',
  THomeWorkFile: 'THomeWorkFile',
  THomeWorkLearning: 'THomeWorkLearning',
  THomeWorkLearningFile: 'THomeWorkLearningFile',
  THomeWorkReply: 'THomeWorkReply',
  THomeWorkReply_File: 'THomeWorkReply_File',
  TJobList: 'TJobList',
  TLanguage: 'TLanguage',
  TLearningCenter: 'TLearningCenter',
  TLeave: 'TLeave',
  TLeave_ConfigStudent: 'TLeave_ConfigStudent',
  TLeave_ConfigTeacher: 'TLeave_ConfigTeacher',
  TLeave_ConfigTeacher_Day: 'TLeave_ConfigTeacher_Day',
  TLeave_ConfigTeacher_DayList: 'TLeave_ConfigTeacher_DayList',
  TLeave_ConfigTeacher_Department: 'TLeave_ConfigTeacher_Department',
  TLeave_ConfigTeacher_Notify: 'TLeave_ConfigTeacher_Notify',
  TLeave_ConfigTeacher_NotifyUser: 'TLeave_ConfigTeacher_NotifyUser',
  TLeave_Log: 'TLeave_Log',
  TLeave_Type: 'TLeave_Type',
  TLeaveLetter: 'TLeaveLetter',
  TLeaveLetter_History: 'TLeaveLetter_History',
  TLeaveLetterFiles: 'TLeaveLetterFiles',
  TLeaveLetterFiles_History: 'TLeaveLetterFiles_History',
  TLeaveList: 'TLeaveList',
  TLeaveSetting: 'TLeaveSetting',
  TLeaveTeacherList: 'TLeaveTeacherList',
  TLevel: 'TLevel',
  TLogEmpTimeScan: 'TLogEmpTimeScan',
  TLogEmpTimeScan_History: 'TLogEmpTimeScan_History',
  TLogLearnTimeScan: 'TLogLearnTimeScan',
  TLogLearnTimeScan_History: 'TLogLearnTimeScan_History',
  TLogLearnTimeScanNew: 'TLogLearnTimeScanNew',
  TLogUserTimeScan: 'TLogUserTimeScan',
  TLogUserTimeScan_History: 'TLogUserTimeScan_History',
  TLogUserTimeScan_Old_Bkup: 'TLogUserTimeScan_Old_Bkup',
  TLogUserTimeScanNew: 'TLogUserTimeScanNew',
  TMasterData: 'TMasterData',
  TMasterType: 'TMasterType',
  TMessage_User: 'TMessage_User',
  TMessage_User_History: 'TMessage_User_History',
  TMessageBox: 'TMessageBox',
  TMessageBox_History: 'TMessageBox_History',
  TMessageLINEMulticast: 'TMessageLINEMulticast',
  TMoney: 'TMoney',
  TMoney_12022024: 'TMoney_12022024',
  TMoney_20210208: 'TMoney_20210208',
  TMoney_History: 'TMoney_History',
  TMoneyDBError: 'TMoneyDBError',
  TNewsFiles: 'TNewsFiles',
  TONETScore: 'TONETScore',
  TopupWebLogData: 'TopupWebLogData',
  TPeriod: 'TPeriod',
  TPeriod_TSubLevel: 'TPeriod_TSubLevel',
  TPermissionCard: 'TPermissionCard',
  TPermissionCardType: 'TPermissionCardType',
  TPlan: 'TPlan',
  TPlanCourse: 'TPlanCourse',
  TPlanCourseAdjustedTerm: 'TPlanCourseAdjustedTerm',
  TPlanCourseStudent: 'TPlanCourseStudent',
  TPlanCourseTeacher: 'TPlanCourseTeacher',
  TPlanCourseTerm: 'TPlanCourseTerm',
  TPlane: 'TPlane',
  TPlane_TSubLevel: 'TPlane_TSubLevel',
  TPlanList: 'TPlanList',
  TPlanOwner: 'TPlanOwner',
  TPlanTermSubLevel2: 'TPlanTermSubLevel2',
  TPreRegister: 'TPreRegister',
  TPreRegisterDocument: 'TPreRegisterDocument',
  TpreRegisterOption: 'TpreRegisterOption',
  TPreRegisterRequiredCategory: 'TPreRegisterRequiredCategory',
  TPreRegisterRequiredField: 'TPreRegisterRequiredField',
  TPreRegisterRequiredFieldInitiate: 'TPreRegisterRequiredFieldInitiate',
  TPreRegisterSendMail: 'TPreRegisterSendMail',
  TProduct: 'TProduct',
  TProductStock: 'TProductStock',
  TQuestionnaireEQ: 'TQuestionnaireEQ',
  TQuestionnaireScreening: 'TQuestionnaireScreening',
  TQuestionnaireSDQ: 'TQuestionnaireSDQ',
  TQuiz: 'TQuiz',
  TrackingData: 'TrackingData',
  TRegisterExamRoom: 'TRegisterExamRoom',
  TRegisterExplanation: 'TRegisterExplanation',
  TRegisterPlanSetup: 'TRegisterPlanSetup',
  TRegisterRegularity: 'TRegisterRegularity',
  TRegisterSetup: 'TRegisterSetup',
  TRoom: 'TRoom',
  TRoomChange: 'TRoomChange',
  TSalesDailyReport: 'TSalesDailyReport',
  TSchedule: 'TSchedule',
  TSchedule_Student: 'TSchedule_Student',
  TScheduleTeacher: 'TScheduleTeacher',
  TSchoolRecord: 'TSchoolRecord',
  TSchoolRecord_Detail: 'TSchoolRecord_Detail',
  TScore: 'TScore',
  TSell: 'TSell',
  TSell_API: 'TSell_API',
  TSell_API_Backup: 'TSell_API_Backup',
  TSell_Detail: 'TSell_Detail',
  TSell_Detail_History: 'TSell_Detail_History',
  TSell_Detail_Recovered: 'TSell_Detail_Recovered',
  TSell_DetailDBError: 'TSell_DetailDBError',
  TSell_History: 'TSell_History',
  TSell_Move: 'TSell_Move',
  TSell_Recovered: 'TSell_Recovered',
  TSellDBError: 'TSellDBError',
  TSendDataPSIS: 'TSendDataPSIS',
  TSendGradePSIS: 'TSendGradePSIS',
  TSendSubjectPSIS: 'TSendSubjectPSIS',
  TSettingExtraTime: 'TSettingExtraTime',
  TShop: 'TShop',
  TShop_Employees: 'TShop_Employees',
  TSMS: 'TSMS',
  TSMSGroup: 'TSMSGroup',
  TSMSGroupUser: 'TSMSGroupUser',
  TSMSSubLevel: 'TSMSSubLevel',
  TStock: 'TStock',
  TStockDetail: 'TStockDetail',
  TStockDetailTemp: 'TStockDetailTemp',
  TStockImprove: 'TStockImprove',
  TStockLog: 'TStockLog',
  TStockLog_Old: 'TStockLog_Old',
  TStudentCardInfo: 'TStudentCardInfo',
  TStudentClassroomHistory: 'TStudentClassroomHistory',
  TStudentHealthGrowth: 'TStudentHealthGrowth',
  TStudentHealthGrowth_History: 'TStudentHealthGrowth_History',
  TStudentHealthInfo: 'TStudentHealthInfo',
  TStudentHIstory: 'TStudentHIstory',
  TStudentLevel: 'TStudentLevel',
  TStudentProfile: 'TStudentProfile',
  TStudenttime: 'TStudenttime',
  TStudentType: 'TStudentType',
  TSubLevel: 'TSubLevel',
  TSystemlog: 'TSystemlog',
  TTeacherCardInfo: 'TTeacherCardInfo',
  TTempScanCameraIPStatus: 'TTempScanCameraIPStatus',
  TTempScanStatusOnline: 'TTempScanStatusOnline',
  TTerm: 'TTerm',
  TTermSubLevel2: 'TTermSubLevel2',
  TTermTimeTable: 'TTermTimeTable',
  TTime: 'TTime',
  TTimetype: 'TTimetype',
  TTitleList: 'TTitleList',
  TTranscriptNumber: 'TTranscriptNumber',
  TType: 'TType',
  TUnit: 'TUnit',
  TUser: 'TUser',
  TUserAttendance: 'TUserAttendance',
  TUserBlackList: 'TUserBlackList',
  TUserNew: 'TUserNew',
  TUserVerify: 'TUserVerify',
  TUserVerifyLINEConnect: 'TUserVerifyLINEConnect',
  TVisitHouse: 'TVisitHouse',
  TWithdrawal: 'TWithdrawal',
  TWithdrawal_Backup: 'TWithdrawal_Backup',
  TWithdrawalGroup: 'TWithdrawalGroup',
  TYear: 'TYear',
  UpdateBalance: 'UpdateBalance',
  UpdateBalanceLog: 'UpdateBalanceLog',
  UpdateBalanceLogOld: 'UpdateBalanceLogOld',
  UpdateBalanceMemory: 'UpdateBalanceMemory',
  UpdatedShops: 'UpdatedShops',
  UpdatedUsers: 'UpdatedUsers',
  UpdateTempCard: 'UpdateTempCard',
  UpdateTempCardMoney: 'UpdateTempCardMoney',
  UserAPIResponse: 'UserAPIResponse',
  UserDailyBalance_Backup: 'UserDailyBalance_Backup',
  UserDailyBalance_Searlize: 'UserDailyBalance_Searlize',
  UserDailyBalanceTemp: 'UserDailyBalanceTemp',
  UserDailyBalanceTempCard: 'UserDailyBalanceTempCard',
  UserDailySales: 'UserDailySales',
  UserUsedLimit: 'UserUsedLimit'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
