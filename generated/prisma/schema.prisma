generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ADjustedSIDS {
  schoolid   Int
  sid        Int?
  sEmp       Int?
  TotalSales Decimal? @db.Decimal(38, 2)

  @@map("_ADjustedSIDS")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BackupOfflineSales {
  SalesID           String   @db.UniqueIdentifier
  SchoolID          Int
  EmployeeID        Int
  ShopID            Int
  UserID            Int
  cType             String   @db.NVarChar(5)
  SalesAmount       Decimal  @db.Decimal(18, 2)
  SalesDate         DateTime @db.DateTime
  TempCardHistoryID String?  @db.UniqueIdentifier
  TempCardID        String?  @db.UniqueIdentifier
  DeviceID          String?  @db.NVarChar(200)
  Processed         Boolean
  Tstamp            DateTime @db.DateTime
  SalesProductInfo  String?  @db.NVarChar(Max)
  Barcode           String?  @db.NVarChar(350)
  CardID            String?  @db.UniqueIdentifier
  SourceIP          String?  @db.NVarChar(250)

  @@map("_BackupOfflineSales")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CheckUserBalance {
  sID     Int
  Balance Decimal? @db.Decimal(18, 2)
  Sale    Decimal  @db.Decimal(38, 2)
  Topup   Decimal  @db.Decimal(38, 2)
  nMoney  Decimal? @db.Decimal(18, 2)

  @@map("_CheckUserBalance")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DeviceActivityLog {
  LogID          String   @db.UniqueIdentifier
  SchoolID       Int
  DeviceID       String   @db.NVarChar(200)
  LogDescription String   @db.NVarChar(2900)
  Tstamp         DateTime @db.DateTime
  DeviceType     String   @db.NVarChar(150)

  @@map("_DeviceActivityLog")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MOfflineSale {
  dSell1         DateTime? @db.DateTime
  dSell          DateTime?
  sID            Int?
  sEmp           Int?
  nSession       Int?
  nTotal         Decimal?  @db.Decimal(18, 2)
  sID2           Int?
  shop_id        Int?
  dayCancal      DateTime?
  UserCancel     Int?
  id             String?   @db.NVarChar(100)
  sSellID        Int?
  ReferenceOrder String?   @db.NVarChar(30)
  SchoolID       Int?
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime?
  UpdatedDate    DateTime?
  cDel           Boolean?
  CardID         String?   @db.UniqueIdentifier
  DeviceID       String?   @db.NVarChar(200)
  Online         Boolean?
  UpdatedTime    DateTime?
  Barcode        String?   @db.NVarChar(40)
  NFCOrEncrypt   String?   @db.NVarChar(40)
  PaymentType    Int?
  RefPromptPay   String?   @db.NVarChar(300)

  @@index([sSellID], map: "INDEX_VV_973_972")
  @@map("_MOfflineSale")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MOfflineSaleDetail {
  id            String? @db.UniqueIdentifier
  SellDetailsID Int?
  nSell         Int?
  nOrder        Int?
  nProduct      Int?
  nNumber       Int?

  @@index([id], map: "INDEX_VV_969_968")
  @@map("_MOfflineSaleDetail")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ProcessedOffline {
  SalesID           String   @db.UniqueIdentifier
  SchoolID          Int
  EmployeeID        Int
  ShopID            Int
  UserID            Int
  cType             String   @db.NVarChar(5)
  SalesAmount       Decimal  @db.Decimal(18, 2)
  SalesDate         DateTime @db.DateTime
  TempCardHistoryID String?  @db.UniqueIdentifier
  TempCardID        String?  @db.UniqueIdentifier
  DeviceID          String?  @db.NVarChar(200)
  Processed         Boolean
  Tstamp            DateTime @db.DateTime

  @@map("_ProcessedOffline")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tempCardBalance {
  ID                  Int
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  CardHistoryID       String?   @db.UniqueIdentifier
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  Insurance           Float
  NewBalance          Decimal?  @db.Decimal(21, 2)
  CardID              String    @db.UniqueIdentifier
  CurrBalance         Decimal?  @db.Decimal(18, 2)

  @@map("_tempCardBalance")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TempSyncSales {
  LogID        Int       @default(autoincrement())
  SchoolID     Int
  APIRequest   String?   @db.NVarChar(Max)
  APIResponse  String?   @db.NVarChar(Max)
  MethodName   String?   @db.NVarChar(250)
  Tstamp       DateTime  @db.DateTime
  UserID       Int?
  CardID       String?   @db.UniqueIdentifier
  ResponseTime Float
  DeviceTime   DateTime? @db.DateTime

  @@map("_TempSyncSales")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalance {
  ID                  Int       @default(autoincrement())
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)

  @@map("_UserDailyBalance")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserList {
  nmoney   Decimal? @db.Decimal(18, 2)
  SchoolID Int
  sID      Int
  cType    Int

  @@map("_UserList")
  @@ignore
}

model AnswerKey {
  ID          Int       @id(map: "PK_AnswerKey") @default(autoincrement())
  Score       Int?
  Answer      String?   @db.NVarChar(Max)
  Indicator   String?   @db.NVarChar(Max)
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  ExamID      Int
  TExamExamID Int?
  Section     Int?

  @@index([Score], map: "INDEX_VV_1660_1659")
}

model APIConfiguration {
  ConfigurationID Int    @id(map: "PK_APIConfiguration") @default(autoincrement())
  Name            String @db.NVarChar(200)
  Value           String @db.NVarChar(Max)
}

model APILog {
  ID         Int      @id(map: "PK_APILog") @default(autoincrement())
  Info       String?  @db.NVarChar(Max)
  Balance    String?  @db.NVarChar(1500)
  OldBalance String?  @db.NVarChar(1500)
  Tstamp     DateTime @db.DateTime
  UpdatedTo  String?  @db.NVarChar(1500)
  SchoolID   Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model APILog_Backup {
  ID         Int      @default(autoincrement())
  Info       String?  @db.NVarChar(Max)
  Balance    String?  @db.NVarChar(1500)
  OldBalance String?  @db.NVarChar(1500)
  Tstamp     DateTime @db.DateTime
  UpdatedTo  String?  @db.NVarChar(1500)
  SchoolID   Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model APILogTemp {
  ID         Int      @default(autoincrement())
  Info       String?  @db.NVarChar(Max)
  Balance    String?  @db.NVarChar(1500)
  OldBalance String?  @db.NVarChar(1500)
  Tstamp     DateTime @db.DateTime
  UpdatedTo  String?  @db.NVarChar(1500)
  SchoolID   Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model APiLOgTmp {
  ID         Int      @default(autoincrement())
  Info       String?  @db.NVarChar(Max)
  Balance    String?  @db.NVarChar(1500)
  OldBalance String?  @db.NVarChar(1500)
  Tstamp     DateTime @db.DateTime
  UpdatedTo  String?  @db.NVarChar(1500)
  SchoolID   Int?

  @@ignore
}

model APIMemoryData {
  ID     Int      @id(map: "PK_APIMemoryData") @default(autoincrement())
  Name   String   @db.NVarChar(250)
  Data   String   @db.NVarChar(Max)
  TStamp DateTime @db.DateTime
}

model APIResponse {
  LogID        Int       @id(map: "PK_APIResponse") @default(autoincrement())
  SchoolID     Int
  APIRequest   String?   @db.NVarChar(Max)
  APIResponse  String?   @db.NVarChar(Max)
  MethodName   String?   @db.NVarChar(250)
  Tstamp       DateTime  @db.DateTime
  UserID       Int?
  CardID       String?   @db.UniqueIdentifier
  ResponseTime Float
  DeviceTime   DateTime? @db.DateTime
  SourceIP     String?   @db.NVarChar(200)

  @@index([SchoolID, Tstamp], map: "INDEX_VV_13827_13826")
  @@index([Tstamp], map: "IX_APIResponse")
  @@index([SchoolID], map: "IX_APIResponse_MethodName")
}

model APIResponseDev {
  LogID        Int       @id(map: "PK_APIResponseDev") @default(autoincrement())
  SchoolID     Int
  APIRequest   String?   @db.NVarChar(Max)
  APIResponse  String?   @db.NVarChar(Max)
  MethodName   String?   @db.NVarChar(250)
  Tstamp       DateTime  @db.DateTime
  UserID       Int?
  CardID       String?   @db.UniqueIdentifier
  ResponseTime Float
  DeviceTime   DateTime? @db.DateTime
}

model APIResponseErrors {
  LogID             Int      @id(map: "PK_APIResponseErrors") @default(autoincrement())
  SchoolID          Int
  APIRequest        String?  @db.NVarChar(Max)
  APIResponseErrors String?  @db.NVarChar(Max)
  MethodName        String?  @db.NVarChar(250)
  Tstamp            DateTime @db.DateTime
  UserID            Int?
  CardID            String?  @db.UniqueIdentifier
  ResponseTime      Float
}

model APISampleRequest {
  APIRequestID Int      @id(map: "PK_APISampleRequest") @default(autoincrement())
  APIRequest   String   @db.NVarChar(Max)
  MethodPrefix String?  @db.NVarChar(300)
  MethodName   String   @db.NVarChar(200)
  MethodType   String   @db.NVarChar(10)
  Tstatmp      DateTime @db.DateTime
}

model ApplicationConfiguration {
  ID     Int      @id(map: "PK_ApplicationConfiguration") @default(autoincrement())
  Name   String   @db.NVarChar(250)
  Value  String
  Tstamp DateTime @db.DateTime
}

model aspnet_Applications {
  ApplicationName        String  @unique(map: "UQ__aspnet_A__3091033194AA1FB0") @db.NVarChar(256)
  LoweredApplicationName String  @unique(map: "UQ__aspnet_A__17477DE4757DD4E1") @db.NVarChar(256)
  ApplicationId          String  @id(clustered: false, map: "PK__aspnet_A__C93A4C9837BA0430") @db.UniqueIdentifier
  Description            String? @db.NVarChar(256)

  @@index([LoweredApplicationName], map: "aspnet_Applications_Index")
}

model aspnet_Membership {
  ApplicationId                          String   @db.UniqueIdentifier
  UserId                                 String   @id(clustered: false, map: "PK__aspnet_M__1788CC4DC087A489") @db.UniqueIdentifier
  Password                               String   @db.NVarChar(128)
  PasswordFormat                         Int
  PasswordSalt                           String   @db.NVarChar(128)
  MobilePIN                              String?  @db.NVarChar(16)
  Email                                  String?  @db.NVarChar(256)
  LoweredEmail                           String?  @db.NVarChar(256)
  PasswordQuestion                       String?  @db.NVarChar(256)
  PasswordAnswer                         String?  @db.NVarChar(128)
  IsApproved                             Boolean
  IsLockedOut                            Boolean
  CreateDate                             DateTime @db.DateTime
  LastLoginDate                          DateTime @db.DateTime
  LastPasswordChangedDate                DateTime @db.DateTime
  LastLockoutDate                        DateTime @db.DateTime
  FailedPasswordAttemptCount             Int
  FailedPasswordAttemptWindowStart       DateTime @db.DateTime
  FailedPasswordAnswerAttemptCount       Int
  FailedPasswordAnswerAttemptWindowStart DateTime @db.DateTime
  Comment                                String?  @db.NText

  @@index([ApplicationId, LoweredEmail], map: "aspnet_Membership_index")
}

model aspnet_Paths {
  ApplicationId String @db.UniqueIdentifier
  PathId        String @id(clustered: false, map: "PK__aspnet_P__CD67DC58300BF29E") @db.UniqueIdentifier
  Path          String @db.NVarChar(256)
  LoweredPath   String @db.NVarChar(256)

  @@index([ApplicationId, LoweredPath], map: "aspnet_Paths_index")
}

model aspnet_PersonalizationAllUsers {
  PathId          String   @id(map: "PK__aspnet_P__CD67DC592C77D5A4") @db.UniqueIdentifier
  PageSettings    Bytes    @db.Image
  LastUpdatedDate DateTime @db.DateTime
}

model aspnet_PersonalizationPerUser {
  Id              String   @id(clustered: false, map: "PK__aspnet_P__3214EC0690177876") @db.UniqueIdentifier
  PathId          String?  @db.UniqueIdentifier
  UserId          String?  @db.UniqueIdentifier
  PageSettings    Bytes    @db.Image
  LastUpdatedDate DateTime @db.DateTime

  @@index([PathId, UserId], map: "aspnet_PersonalizationPerUser_index1")
  @@index([UserId, PathId], map: "aspnet_PersonalizationPerUser_ncindex2")
}

model aspnet_Profile {
  UserId               String   @id(map: "PK__aspnet_P__1788CC4C0E473D51") @db.UniqueIdentifier
  PropertyNames        String   @db.NText
  PropertyValuesString String   @db.NText
  PropertyValuesBinary Bytes    @db.Image
  LastUpdatedDate      DateTime @db.DateTime
}

model aspnet_Roles {
  ApplicationId   String  @db.UniqueIdentifier
  RoleId          String  @id(clustered: false, map: "PK__aspnet_R__8AFACE1BFAEAC194") @db.UniqueIdentifier
  RoleName        String  @db.NVarChar(256)
  LoweredRoleName String  @db.NVarChar(256)
  Description     String? @db.NVarChar(256)

  @@index([ApplicationId, LoweredRoleName], map: "aspnet_Roles_index1")
}

model aspnet_SchemaVersions {
  Feature                 String  @db.NVarChar(128)
  CompatibleSchemaVersion String  @db.NVarChar(128)
  IsCurrentVersion        Boolean

  @@id([Feature, CompatibleSchemaVersion], map: "PK__aspnet_S__5A1E6BC1AAD8BD2F")
}

model aspnet_Users {
  ApplicationId    String   @db.UniqueIdentifier
  UserId           String   @id(clustered: false, map: "PK__aspnet_U__1788CC4D98BD049B") @db.UniqueIdentifier
  UserName         String   @db.NVarChar(256)
  LoweredUserName  String   @db.NVarChar(256)
  MobileAlias      String?  @db.NVarChar(16)
  IsAnonymous      Boolean
  LastActivityDate DateTime @db.DateTime

  @@index([ApplicationId, LoweredUserName], map: "aspnet_Users_Index")
  @@index([ApplicationId, LastActivityDate], map: "aspnet_Users_Index2")
}

model aspnet_UsersInRoles {
  UserId String @db.UniqueIdentifier
  RoleId String @db.UniqueIdentifier

  @@id([UserId, RoleId], map: "PK__aspnet_U__AF2760ADC0669829")
  @@index([RoleId], map: "aspnet_UsersInRoles_index")
}

model aspnet_WebEvent_Events {
  EventId                String   @id(map: "PK__aspnet_W__7944C8106B3BB4EC") @db.Char(32)
  EventTimeUtc           DateTime @db.DateTime
  EventTime              DateTime @db.DateTime
  EventType              String   @db.NVarChar(256)
  EventSequence          Decimal  @db.Decimal(19, 0)
  EventOccurrence        Decimal  @db.Decimal(19, 0)
  EventCode              Int
  EventDetailCode        Int
  Message                String?  @db.NVarChar(1024)
  ApplicationPath        String?  @db.NVarChar(256)
  ApplicationVirtualPath String?  @db.NVarChar(256)
  MachineName            String   @db.NVarChar(256)
  RequestUrl             String?  @db.NVarChar(1024)
  ExceptionType          String?  @db.NVarChar(256)
  Details                String?  @db.NText
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BackupSales {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
  rn              BigInt?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BalanceIssuesUserList {
  ID                  Int
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  SystemBalance       Float
  row_number          BigInt?
  NewBalance          Float?
  ExistingBalance     Float?

  @@index([ID], map: "INDEX_VV_1400_1399")
  @@ignore
}

model BBLTransaction {
  TransactionID String    @id(map: "PK_BBLTransaction") @db.UniqueIdentifier
  payeeId       String?   @db.NVarChar(100)
  transDate     String?   @db.NVarChar(100)
  transTime     String?   @db.NVarChar(100)
  transRef      String?   @db.NVarChar(100)
  channel       String?   @db.NVarChar(100)
  termId        String?   @db.NVarChar(100)
  amount        String?   @db.NVarChar(100)
  reference1    String?   @db.NVarChar(100)
  reference2    String?   @db.NVarChar(100)
  fromBank      String?   @db.NVarChar(100)
  retryFlag     String?   @db.NVarChar(100)
  InvoiceID     Int?
  SchoolID      Int?
  ErrorCode     String?   @db.NVarChar(250)
  ErrorMessage  String?   @db.NVarChar(250)
  VerifyDate    DateTime? @db.DateTime
  VerifyCode    String?   @db.NVarChar(10)
  VerifyStatus  String?   @db.NVarChar(100)
  NotifyDate    DateTime? @db.DateTime
  NotifyCode    String?   @db.NVarChar(10)
  NotifyStatus  String?   @db.NVarChar(100)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BK_JabjaiSingleDB {
  TableName     String   @db.NVarChar(128)
  SchemaName    String?  @db.NVarChar(128)
  rows          BigInt?
  TotalSpaceKB  BigInt?
  TotalSpaceMB  Decimal? @db.Decimal(36, 2)
  UsedSpaceKB   BigInt?
  UsedSpaceMB   Decimal? @db.Decimal(36, 2)
  UnusedSpaceKB BigInt?
  UnusedSpaceMB Decimal? @db.Decimal(36, 2)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BuybarcodeRecovered {
  dSell           String?   @db.NVarChar(200)
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int?
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int?
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     String?   @db.NVarChar(200)
  UpdatedDate     String?   @db.NVarChar(200)
  cDel            Boolean?
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean?
  UpdatedTime     String?   @db.NVarChar(200)
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
  Created         DateTime  @db.DateTime

  @@index([dSell], map: "INDEX_VV_17744_17743")
  @@ignore
}

model CommandLog {
  ID              Int       @id(map: "PK_CommandLog") @default(autoincrement())
  DatabaseName    String?   @db.NVarChar(128)
  SchemaName      String?   @db.NVarChar(128)
  ObjectName      String?   @db.NVarChar(128)
  ObjectType      String?   @db.Char(2)
  IndexName       String?   @db.NVarChar(128)
  IndexType       Int?      @db.TinyInt
  StatisticsName  String?   @db.NVarChar(128)
  PartitionNumber Int?
  ExtendedInfo    String?   @db.Xml
  Command         String    @db.NVarChar(Max)
  CommandType     String    @db.NVarChar(60)
  StartTime       DateTime
  EndTime         DateTime?
  ErrorNumber     Int?
  ErrorMessage    String?   @db.NVarChar(Max)
}

model DailyProductSales {
  SellDetailsID Int       @id(map: "PK_DailyProductSales")
  nSell         Int
  nOrder        Int
  nProduct      Int?
  nNumber       Int?
  cDel          String?   @db.Char(1)
  nPrice        Decimal?  @db.Decimal(18, 2)
  nCost         Decimal?  @db.Decimal(18, 2)
  SchoolID      Int
  dSell         DateTime  @db.DateTime
  dayCancal     DateTime? @db.DateTime
  sID           Int?
  sID2          Int?
  ShopID        Int?

  @@index([nProduct], map: "INDEX_VV_1719_1718")
  @@index([dSell], map: "INDEX_VV_49459_49458")
  @@index([ShopID], map: "INDEX_VV_49461_49460")
  @@index([nProduct], map: "INDEX_VV_5126_5125")
  @@index([nProduct, dayCancal, dSell], map: "INDEX_VV_81590_81589")
  @@index([dayCancal], map: "INDEX_VV_8692_8691")
  @@index([SchoolID, dayCancal, ShopID, dSell], map: "INDEX_VV_9103_9102")
  @@index([dayCancal, dSell], map: "INDEX_VV_98756_98755")
  @@index([nNumber], map: "NonClusteredIndex-20240609-231150")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DailyProductStock {
  nStockDetailID Int
  nStock         Int
  nOrder         Int
  nNumber        Int?
  nProductID     Int?
  SchoolID       Int
  dStock         DateTime @db.DateTime
  cDel           Boolean
  Tstamp         DateTime @db.DateTime

  @@index([SchoolID], map: "IX_DailyProductStock_ProductID")
  @@index([nNumber], map: "NonClusteredIndex-20240609-231233")
  @@ignore
}

model DailySales {
  ID       Int      @id(map: "PK_DailySales") @default(autoincrement())
  SchoolID Int
  ShopID   Int?
  dSell    DateTime @db.DateTime
  sID      Int?
  sID2     Int?
  sEmp     Int?
  nTotal   Decimal  @db.Decimal(18, 2)
  CardID   String?  @db.UniqueIdentifier
  TStamp   DateTime @default(now(), map: "DF_DailySales_TStamp") @db.DateTime

  @@index([SchoolID, ShopID, dSell, sID, sID2, CardID], map: "IX_DailySales")
}

model DashboardData {
  ID               String   @id(map: "PK_DashboardData") @db.UniqueIdentifier
  SchoolID         Int
  SchoolName       String?  @db.NVarChar(250)
  NoofStudent      Int
  NoOfTeacher      Int
  BusinessDate     DateTime @db.DateTime
  AppAttendance    Float
  Card             Float
  Camera           Float
  Subject          Float
  Leave            Float
  Invoices         Float
  Sales            Float
  NoOfSales        Int
  CanteenSales     Float
  NoOfCanteenSales Int
  SchoolTopup      Float
  NoOfSchoolTopup  Int
  OnlineTopup      Float
  NoOfOnlineTopup  Int
  TutionReceive    Float
  NoOfDevice       Int
  UserLog          Float
  ClassOnline      Float
  GradeEntry       Float
  ExamGrade        Float
  Exam             Float
  Library          Float
  HomeVisit        Float
  SDQ              Float
  EQ               Float
  TotalLogs        Float
  Tstamp           DateTime @db.DateTime

  @@index([SchoolID], map: "INDEX_VV_161687_161686")
  @@index([BusinessDate], map: "IX_DashboardData_1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model defrag_work {
  objectid     Int?
  indexid      Int?
  partition_no Int?
  frag         Float?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DeviceActivityLogTemp {
  SchoolID Int
  DeviceID String @db.NVarChar(200)

  @@ignore
}

model DeviceDailyStatus {
  DeviceStatusID String    @id(map: "PK_DeviceDailyStatus") @db.UniqueIdentifier
  SchoolID       Int
  DeviceID       String    @db.NVarChar(200)
  Online         Boolean
  OnlineTime     DateTime? @db.DateTime
  Login          Boolean
  LoginTime      DateTime? @db.DateTime
  LogOut         Boolean
  LogoutTime     DateTime? @db.DateTime
  Tstamp         DateTime  @db.DateTime
  BusinessDate   DateTime  @db.Date

  @@index([SchoolID], map: "INDEX_VV_5942378_5942377")
  @@index([SchoolID, DeviceID, BusinessDate], map: "IX_DeviceDailyStatus_SchoolID_DeviceID_BusinessDate")
}

model DeviceUpdateStatus {
  ID             Int      @id(map: "PK_DeviceUpdateStatus") @default(autoincrement())
  SchoolID       Int
  DeviceID       String   @db.NVarChar(500)
  UserID         Int
  NeedToUpdate   Boolean  @default(true, map: "DF_DeviceUpdateStatus_NeedToUpdate")
  Tstamp         DateTime @default(now(), map: "DF_DeviceUpdateStatus_Tstamp") @db.DateTime
  ResponseStatus Boolean
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Duplicate_Tsell {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  RowOrder        BigInt?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DuplicateRef {
  Column_0 String? @map("Column 0") @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DuplicateSalesData {
  dsell           DateTime? @db.DateTime
  sid             Int?
  semp            Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sid2            Int?
  shop_id         Int?
  schoolid        Int
  cardid          String?   @db.UniqueIdentifier
  deviceid        String?   @db.NVarChar(200)
  barcode         String?   @db.NVarChar(40)
  nfcorencrypt    String?   @db.NVarChar(40)
  applicationname String?   @db.NVarChar(200)
  RowOrder        BigInt?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dupRecord {
  SellDetailsID Int       @default(autoincrement())
  nSell         Int
  nOrder        Int
  nProduct      Int?
  nNumber       Int?
  cDel          String?   @db.Char(1)
  nPrice        Decimal?  @db.Decimal(18, 2)
  nCost         Decimal?  @db.Decimal(18, 2)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  DiscountPer   Int
  DiscountPrice Decimal   @db.Decimal(18, 0)
  dup           BigInt?

  @@ignore
}

model ExcelExportData {
  ExportID     Int      @id(map: "PK_ExcelExportData") @default(autoincrement())
  Name         String?  @db.NVarChar(300)
  StudentID    String?  @db.NVarChar(50)
  SchoolID     Int
  nMoney       Decimal  @db.Decimal(18, 2)
  Status       String?  @db.Char(1)
  Tstamp       DateTime @db.DateTime
  Success      Boolean
  RecordExists Boolean
  Remarks      String?  @db.NVarChar(500)
}

model IdentityTable {
  TableName String? @db.NVarChar(150)
  OldID     Int?
  NewID     Int?
  ID        Int     @id(map: "PK_IdentityClass") @default(autoincrement())
}

model KPromptPayAccessToken {
  ID             Int       @id(map: "PK_KPromptPayAccessToken") @default(autoincrement())
  AccessToken    String?   @db.VarChar(50)
  ClientID       String?   @db.VarChar(50)
  DeveloperEmail String?   @db.VarChar(100)
  ExpiresIn      String?   @db.VarChar(6)
  Scope          String?   @db.VarChar(50)
  Status         String?   @db.VarChar(20)
  TokenType      String?   @db.VarChar(20)
  CreateDate     DateTime? @db.DateTime
}

model KPromptPayTransaction {
  TransactionID     Int       @id(map: "PK_KPromptPayTransaction") @default(autoincrement())
  SchoolID          Int?
  ShopID            Int?
  IMEI              String?   @db.VarChar(100)
  PartnerTxnUID     String?   @db.VarChar(50)
  QRType            String?   @db.VarChar(2)
  TxnAmount         Decimal?  @db.Decimal(7, 2)
  TxnCurrencyCode   String?   @db.VarChar(5)
  CreateDate        DateTime? @db.DateTime
  StatusCode        String?   @db.VarChar(5)
  ErrorCode         String?   @db.VarChar(25)
  ErrorDesc         String?   @db.VarChar(100)
  TxnNo             String?   @db.VarChar(50)
  UpdateDate        DateTime? @db.DateTime
  UserID            Int?
  TxnStatus         String?   @db.VarChar(50)
  LoyaltyId         String?   @db.VarChar(50)
  OrigPartnerTxnUID String?   @db.VarChar(50)
  Method            String?   @db.VarChar(20)
  SellGuID          String?   @db.VarChar(100)
  AppName           String?   @db.VarChar(100)
  SellDetail        String?   @db.NVarChar(2000)

  @@index([PartnerTxnUID], map: "INDEX_VV_156691_156690")
  @@index([SchoolID], map: "INDEX_VV_168656_168655")
  @@index([Method, SellGuID, CreateDate], map: "INDEX_VV_63_62")
  @@index([SchoolID, CreateDate], map: "INDEX_VV_85956_85955")
  @@index([ShopID, CreateDate], map: "IX_KPromptPayTransaction_ShopID_CreateDate")
  @@index([SchoolID, PartnerTxnUID], map: "IX_SchoolID_PartnerTxnUID")
}

model KPromptPayTransactionInquiry {
  TransactionID     Int       @id(map: "PK_KPromptPayTransactionInquiry") @default(autoincrement())
  SchoolID          Int?
  PartnerTxnUID     String?   @db.VarChar(50)
  OrigPartnerTxnUID String?   @db.VarChar(50)
  Method            String?   @db.VarChar(20)
  ErrorCode         String?   @db.VarChar(25)
  ErrorDesc         String?   @db.VarChar(100)
  StatusCode        String?   @db.VarChar(5)
  LoyaltyId         String?   @db.VarChar(50)
  TxnNo             String?   @db.VarChar(50)
  TxnStatus         String?   @db.VarChar(50)
  CreateDate        DateTime? @db.DateTime

  @@index([CreateDate], map: "INDEX_VV_26358_26357")
  @@index([OrigPartnerTxnUID, CreateDate], map: "INDEX_VV_5941457_5941456")
  @@index([OrigPartnerTxnUID], map: "INDEX_VV_6064067_6064066")
  @@index([SchoolID], map: "INDEX_VV_85965_85964")
}

model KResCharge {
  Year        Int
  ResChargeID String    @db.NVarChar(100)
  SchoolID    Int
  TransID     Int?
  Data        String?   @db.NVarChar(2000)
  Tstamp      DateTime? @db.DateTime

  @@id([Year, ResChargeID, SchoolID], map: "PK_KResCharge_1")
  @@index([Tstamp], map: "INDEX_VV_3516_3515")
  @@index([TransID], map: "INDEX_VV_4896507_4896506")
}

model KResInquiryQR {
  Year              Int
  ResInquirryQRId   Int       @default(autoincrement())
  TransID           Int?
  ChargeID          String?   @db.NVarChar(100)
  Object            String?   @db.NVarChar(20)
  Amount            Decimal?  @db.Decimal(9, 2)
  Currency          String?   @db.NVarChar(3)
  Description       String?   @db.NVarChar(255)
  TransactionState  String?   @db.NVarChar(50)
  ReferenceOrder    String?   @db.NVarChar(50)
  Created           String?   @db.NVarChar(17)
  OrderID           String?   @db.NVarChar(100)
  Status            String?   @db.NVarChar(10)
  LiveMode          String?   @db.NVarChar(10)
  MetaData          String?   @db.NVarChar(256)
  FailureCode       String?   @db.NVarChar(256)
  FailureMessage    String?   @db.NVarChar(256)
  SourceID          String?   @db.NVarChar(100)
  SourceObject      String?   @db.NVarChar(10)
  SourceBrand       String?   @db.NVarChar(10)
  SourceCardMasking String?   @db.NVarChar(16)
  SourceIssuerBank  String?   @db.NVarChar(56)
  CreateDate        DateTime? @db.DateTime
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, Year, ResInquirryQRId], map: "PK_KRESINQUIRYQR")
  @@index([CreateDate], map: "INDEX_VV_26452_26451")
  @@index([TransID], map: "INDEX_VV_95435_95434")
  @@index([SchoolID, ChargeID, Year], map: "IX_ChargeID_SchoolID_YearID")
}

model KResOrder {
  Year                     Int
  ResOrderID               Int       @default(autoincrement())
  TransID                  Int?
  OrderID                  String?   @db.NVarChar(100)
  Object                   String?   @db.NVarChar(20)
  Amount                   Decimal?  @db.Decimal(9, 2)
  Currency                 String?   @db.NVarChar(3)
  Description              String?   @db.NVarChar(255)
  SourceType               String?   @db.NVarChar(10)
  AdditionalDataMID        String?   @db.NVarChar(20)
  AdditionalDataTID        String?   @db.NVarChar(20)
  AdditionalDataSmartpayID String?   @db.NVarChar(5)
  AdditionalDataTerm       Int?
  CustomerID               String?   @db.NVarChar(256)
  MetaDataItem             String?   @db.NVarChar(255)
  MetaDataQty              Int?
  MetaDataAmount           Decimal?  @db.Decimal(9, 2)
  ExpireTimeSeconds        Int?
  Created                  String?   @db.NVarChar(17)
  Status                   String?   @db.NVarChar(10)
  ReferenceOrder           String?   @db.NVarChar(50)
  LiveMode                 String?   @db.NVarChar(10)
  FailureCode              String?   @db.NVarChar(256)
  FailureMessage           String?   @db.NVarChar(256)
  CreateDate               DateTime? @db.DateTime
  SchoolID                 Int
  CreatedBy                Int?
  UpdatedBy                Int?
  UpdatedDate              DateTime? @db.DateTime
  cDel                     Boolean

  @@id([SchoolID, Year, ResOrderID], map: "PK_KRESORDER")
  @@index([TransID], map: "INDEX_VV_1161_1160")
  @@index([OrderID, SchoolID], map: "INDEX_VV_18446_18445")
}

model KTBApprovalTransaction {
  ApprovalTransID Int       @id(map: "PK_KTBApprovalTransaction") @default(autoincrement())
  KTBUser         String?   @db.VarChar(20)
  KTBPassword     String?   @db.VarChar(20)
  ComCode         String?   @db.VarChar(10)
  ProdCode        String?   @db.VarChar(10)
  Command         String?   @db.VarChar(20)
  BankCode        Int?
  BankRef         String?   @db.VarChar(20)
  DateTime        String?   @db.VarChar(14)
  EffDate         String?   @db.VarChar(8)
  Amount          Decimal?  @db.Decimal(10, 2)
  Channel         String?   @db.VarChar(20)
  CusName         String?   @db.NVarChar(60)
  Ref1            String?   @db.VarChar(20)
  Ref2            String?   @db.VarChar(20)
  Ref3            String?   @db.VarChar(20)
  Ref4            String?   @db.VarChar(20)
  SchoolID        Int
  TransID         Int
  CreateDate      DateTime? @db.DateTime
  UpdateDate      DateTime? @db.DateTime
  RespCode        Int?
  RespMsg         String?   @db.VarChar(100)

  @@index([SchoolID, TransID, RespCode], map: "INDEX_VV_69594_69593")
}

model KTBPaymentTransaction {
  PaymentTransID Int       @id(map: "PK_KTBPaymentTransaction") @default(autoincrement())
  KTBUser        String?   @db.VarChar(20)
  KTBPassword    String?   @db.VarChar(20)
  ComCode        String?   @db.VarChar(10)
  ProdCode       String?   @db.VarChar(10)
  Command        String?   @db.VarChar(20)
  BankCode       Int?
  BankRef        String?   @db.VarChar(20)
  TranxId        String?   @db.VarChar(20)
  DateTime       String?   @db.VarChar(14)
  EffDate        String?   @db.VarChar(8)
  Amount         Decimal?  @db.Decimal(10, 2)
  Channel        String?   @db.VarChar(20)
  CusName        String?   @db.NVarChar(60)
  Ref1           String?   @db.VarChar(20)
  Ref2           String?   @db.VarChar(20)
  Ref3           String?   @db.VarChar(20)
  Ref4           String?   @db.VarChar(20)
  SchoolID       Int
  TransID        Int
  CreateDate     DateTime? @db.DateTime
  UpdateDate     DateTime? @db.DateTime
  RespCode       Int?
  RespMsg        String?   @db.VarChar(100)

  @@index([RespCode, CreateDate], map: "INDEX_VV_119275_119274")
  @@index([KTBUser], map: "INDEX_VV_57250_57249")
  @@index([SchoolID, RespCode], map: "INDEX_VV_89957_89956")
  @@index([Ref2], map: "INDEX_VV_9155_9154")
}

model KTBTransaction {
  SchoolID         Int
  Year             Int
  TransactionID    Int       @default(autoincrement())
  GUID             String?   @db.VarChar(40)
  Ref1             String?   @db.VarChar(20)
  Ref2             String?   @db.VarChar(20)
  IMEI             String?   @db.VarChar(100)
  UserID           Int?
  Amount           Decimal?  @db.Decimal(9, 2)
  InvoiceID        Int?
  PaidPaymentID    Int?
  ShopID           Int?
  SellGuID         String?   @db.VarChar(100)
  AppName          String?   @db.VarChar(100)
  SellDetail       String?   @db.NVarChar(2000)
  CreateDate       DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean?
  ApprovalRespCode Int?
  ApprovalRespMsg  String?   @db.VarChar(100)
  PaymentRespCode  Int?
  PaymentRespMsg   String?   @db.VarChar(100)

  @@id([SchoolID, Year, TransactionID], map: "PK_KTBTransaction")
  @@index([CreateDate], map: "INDEX_VV_164080_164079")
  @@index([SchoolID, CreateDate], map: "INDEX_VV_1698_1697")
  @@index([ApprovalRespMsg, PaymentRespMsg, Ref1, Ref2, CreateDate], map: "INDEX_VV_26407_26406")
  @@index([IMEI], map: "INDEX_VV_2912_2911")
  @@index([SchoolID, TransactionID], map: "INDEX_VV_5124_5123")
  @@index([GUID], map: "INDEX_VV_6018_6017")
  @@index([ApprovalRespMsg, PaymentRespMsg, Ref2, CreateDate], map: "INDEX_VV_62891_62890")
  @@index([PaymentRespCode, CreateDate], map: "INDEX_VV_79568_79567")
  @@index([Ref2], map: "INDEX_VV_93975_93974")
  @@index([SchoolID, CreateDate], map: "INDEX_VV_97471_97470")
}

model KTransaction {
  Year          Int
  TransactionID Int       @default(autoincrement())
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@id([SchoolID, TransactionID, Year], map: "PK_KTRANSACTION")
  @@index([TransactionID], map: "INDEX_VV_1029_1028")
  @@index([Amount], map: "INDEX_VV_104671_104670")
  @@index([Year, ReferenceNo], map: "INDEX_VV_133_132")
  @@index([UserID], map: "INDEX_VV_1789_1788")
  @@index([CreateDate], map: "INDEX_VV_18409_18408")
  @@index([CreateDate], map: "INDEX_VV_23530_23529")
  @@index([InvoiceID, ChargeID, CreateDate], map: "INDEX_VV_3520_3519")
  @@index([SchoolID, CreateDate], map: "INDEX_VV_37229_37228")
  @@index([ChargeID], map: "INDEX_VV_616_615")
  @@index([ReferenceNo], map: "INDEX_VV_71192_71191")
  @@index([OrderID], map: "INDEX_VV_94108_94107")
  @@index([InvoiceID, ChargeID, CreateDate], map: "IX_KTransaction_InvoiceID_ChargeID_CreateDate")
  @@index([Year, OrderID], map: "KTransaction_Year_OrderID")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model KTransaction_11022024 {
  Year          Int
  TransactionID Int       @default(autoincrement())
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model KTransaction_12022024 {
  Year          Int
  TransactionID Int       @default(autoincrement())
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@index([Year], map: "INDEX_VV_36_35")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model KTransactionB {
  Year          Int
  TransactionID Int       @default(autoincrement())
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@ignore
}

model MemorySchoolDBUser {
  ID          Int      @id(map: "PK_MemorySchoolDBUser") @default(autoincrement())
  SchoolID    Int
  sID         Int
  nMoney      Decimal  @db.Decimal(18, 2)
  UpdatedDate DateTime @db.DateTime
  bUpdatedDB  String   @db.NVarChar(1)
  SourceIP    String?  @db.NVarChar(50)

  @@index([SourceIP, SchoolID, sID], map: "IX_MemorySchoolDBUser")
}

model MemorySchoolEmployees {
  ID          Int      @id(map: "PK_MemorySchoolEmployees") @default(autoincrement())
  SchoolID    Int
  sEmp        Int
  nMoney      Decimal  @db.Decimal(18, 2)
  UpdatedDate DateTime @db.DateTime
  bUpdatedDB  String   @db.NVarChar(1)
  SourceIP    String?  @db.NVarChar(50)

  @@index([sEmp, bUpdatedDB, SourceIP], map: "INDEX_VV_9168_9167")
  @@index([SourceIP, SchoolID, sEmp], map: "IX_MemorySchoolEmployees")
}

model MemoryTempCard {
  ID            Int      @id(map: "PK_MemoryTempCard") @default(autoincrement())
  SchoolID      Int
  CardID        String   @db.UniqueIdentifier
  CardHistoryID String   @db.UniqueIdentifier
  Money         Decimal  @db.Decimal(18, 2)
  UpdatedDate   DateTime @db.DateTime
  bUpdatedDB    String   @db.NVarChar(50)
  SourceIP      String?  @db.NVarChar(50)

  @@index([CardID, bUpdatedDB, SourceIP], map: "INDEX_VV_10239_10238")
  @@index([SourceIP, SchoolID, CardHistoryID, CardID], map: "IX_MemoryTempCard")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MissingTopupList {
  BusinessDate  DateTime? @db.DateTime
  Year          Int
  TransactionID Int
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@index([OrderID], map: "INDEX_VV_49279_49278")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MissKTrans {
  Year          Int
  TransactionID Int       @default(autoincrement())
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MissKTrans1 {
  Year          Int
  TransactionID Int       @default(autoincrement())
  GUID          String?   @db.NVarChar(40)
  OrderID       String?   @db.NVarChar(100)
  QRID          String?   @db.NVarChar(100)
  ChargeID      String?   @db.NVarChar(100)
  UserID        Int?
  ReferenceNo   String?   @db.NVarChar(50)
  Amount        Decimal?  @db.Decimal(9, 2)
  CreateDate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  InvoiceID     Int?
  PaidPaymentID Int?
  TokenID       String?   @db.NVarChar(100)
  CardID        String?   @db.NVarChar(100)
  CustomerID    String?   @db.NVarChar(100)
  ErrorCode     String?   @db.NVarChar(50)
  ErrorMessage  String?   @db.NVarChar(100)

  @@ignore
}

model ModifiedShops {
  ID           Int      @id(map: "PK_ModifiedShops") @default(autoincrement())
  LastModified DateTime @db.DateTime
  ShopModified Boolean
  ShopID       Int

  @@unique([ShopID, ShopModified], map: "Unique_ShopID_ShopModified")
}

model ModifiedUsers {
  ID           Int      @id(map: "PK_ModifiedUsers") @default(autoincrement())
  LastModified DateTime @db.DateTime
  UserModified Boolean
  UserID       Int

  @@unique([UserID, UserModified], map: "Unique_UserID_UserModified")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Move_Tsell {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@ignore
}

model OfflineSales {
  SalesID           String   @id(map: "PK_OfflineSales_1") @db.UniqueIdentifier
  SchoolID          Int
  EmployeeID        Int
  ShopID            Int
  UserID            Int
  cType             String   @db.NVarChar(5)
  SalesAmount       Decimal  @db.Decimal(18, 2)
  SalesDate         DateTime @db.DateTime
  TempCardHistoryID String?  @db.UniqueIdentifier
  TempCardID        String?  @db.UniqueIdentifier
  DeviceID          String?  @db.NVarChar(200)
  Processed         Boolean
  Tstamp            DateTime @db.DateTime
  SalesProductInfo  String?  @db.NVarChar(Max)
  Barcode           String?  @db.NVarChar(350)
  CardID            String?  @db.UniqueIdentifier
  SourceIP          String?  @db.NVarChar(250)

  @@index([SourceIP], map: "INDEX_VV_20400_20399")
}

model PaymentServersDetails {
  ID        Int      @id(map: "PK_PaymentServersDetails") @default(autoincrement())
  IPAddress String   @unique(map: "duplicate_ip") @db.NVarChar(100)
  Updated   Boolean
  Tstamp    DateTime @db.DateTime
  IsDevMode Boolean
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PosSalesRecovered {
  SchoolID     Int?
  EmployeeID   Int?
  ShopID       Int?
  sID          Int?
  sEmp         Int?
  Tstamp       String?  @db.NVarChar(200)
  TempCardID   String?  @db.UniqueIdentifier
  SalesAmount  Decimal? @db.Decimal(18, 2)
  Application  String?  @db.NVarChar(200)
  PinCode      String?  @db.NVarChar(200)
  CashSale     Boolean?
  Barcode      String?  @db.NVarChar(200)
  RefPromptPay String?  @db.NVarChar(500)
  sSellID      Int?
  SalesDetails String?  @db.NVarChar(Max)
  Created      DateTime @db.DateTime

  @@ignore
}

model PTDailySalesAPI {
  ID                  Int      @id(map: "PK_PTDailySalesAPI") @default(autoincrement())
  JsonData            String   @db.NVarChar(Max)
  Status              Boolean?
  ResponseDescription String?  @db.NVarChar(Max)
  Tstamp              DateTime @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ResultVerifyUserBalance {
  SchoolID      Int
  sID           Int
  Balance       Decimal? @db.Decimal(18, 2)
  SystemBalance Float
  SQLStatement  String?  @db.VarChar(99)
  Tstamp        DateTime @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ResultVerifyUserBalance_Bkup {
  SchoolID      Int
  sID           Int
  Balance       Decimal? @db.Decimal(18, 2)
  SystemBalance Float
  SQLStatement  String?  @db.VarChar(99)
  Tstamp        DateTime @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ResultVerifyUserBalanceTempCard {
  CardHistoryID String?  @db.UniqueIdentifier
  balance       Decimal? @db.Decimal(18, 2)
  SystemBalance Float?
  SQLStatement  String?  @db.NVarChar(560)
  Tstamp        DateTime @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ResultVerifyUserBalanceTempCard_Bkup {
  CardHistoryID String?  @db.UniqueIdentifier
  balance       Decimal? @db.Decimal(18, 2)
  SystemBalance Float?
  SQLStatement  String?  @db.NVarChar(560)
  Tstamp        DateTime @db.DateTime

  @@ignore
}

model SBLoginHistory {
  id          Int       @id(map: "PK_SBLoginHistory") @default(autoincrement())
  nStudentID  Int?
  sFirstName  String?   @db.NVarChar(100)
  sLastName   String?   @db.NVarChar(100)
  schoolID    Int?
  sIMEI       String?   @db.NVarChar(450)
  sDeviceOS   String?   @db.NVarChar(450)
  sAppName    String?   @db.NVarChar(100)
  sAppVersion String?   @db.NVarChar(100)
  sIPAddress  String?   @db.NVarChar(150)
  loginAt     DateTime? @db.DateTime

  @@index([schoolID, nStudentID, loginAt(sort: Desc), sIMEI], map: "_dta_index_SBLoginHistory_15_1641772906__K5_K2_K11D_K6")
  @@index([sIMEI], map: "INDEX_VV_18204_18203")
  @@index([schoolID], map: "INDEX_VV_40255_40254")
  @@index([nStudentID], map: "IX_SBLoginHistory_schoolID")
}

model SchoolIDMapping {
  SchoolID  Int      @id(map: "PK_SchoolIDMapping")
  Name      String   @db.NVarChar(300)
  MappingID String   @db.NVarChar(200)
  Tstamp    DateTime @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SG_JabjaiSingleDB {
  TableName     String   @db.NVarChar(128)
  SchemaName    String?  @db.NVarChar(128)
  rows          BigInt?
  TotalSpaceKB  BigInt?
  TotalSpaceMB  Decimal? @db.Decimal(36, 2)
  UsedSpaceKB   BigInt?
  UsedSpaceMB   Decimal? @db.Decimal(36, 2)
  UnusedSpaceKB BigInt?
  UnusedSpaceMB Decimal? @db.Decimal(36, 2)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SQLStatements {
  ID           Int    @default(autoincrement())
  SQLStatement String @db.NVarChar(Max)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model StudentListTemp {
  SId      Int?
  nGradeId Int?

  @@ignore
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61EFC999CF") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model T_FSDQ_Answer {
  T_FSDQ_Answer_Id   Int       @default(autoincrement())
  T_FSDQ_Question_Id Int?
  T_FSDQ_Point_Point Int?
  sId                Int?
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, T_FSDQ_Answer_Id], map: "PK_T_FSDQ_Answer")
}

model T_FSDQ_Data {
  T_FSDQ_Data_Id       Int       @default(autoincrement())
  T_FSDQ_Data_Datetime DateTime? @db.DateTime
  sID                  Int?
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, T_FSDQ_Data_Id], map: "PK_T_FSDQ_Data")
}

model T_FSDQ_Point {
  T_FSDQ_Point_Id    Int       @default(autoincrement())
  T_FSDQ_Point_Point Int?
  T_FSDQ_Question_Id Int?
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, T_FSDQ_Point_Id], map: "PK_T_FSDQ_Point")
}

model T_FSDQ_Question {
  T_FSDQ_Question_Id    Int       @default(autoincrement())
  T_FSDQ_Question_Des   String?   @db.NVarChar(250)
  T_FSDQ_Question_Group Int?
  SchoolID              Int
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime
  cDel                  Boolean

  @@id([SchoolID, T_FSDQ_Question_Id], map: "PK_T_FSDQ_Question")
}

model TAPIRequestResponse {
  ID           Int      @id(map: "PK_TAPIRequestResponse") @default(autoincrement())
  MethodName   String   @db.NVarChar(50)
  ExamID       Int
  SchoolID     Int
  StudentID    Int
  RequestData  String   @db.NVarChar(Max)
  ResponseData String?  @db.NVarChar(Max)
  Tstamp       DateTime @db.DateTime
  ServerIP     String   @db.NVarChar(100)
  Status       Boolean
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TAPIRequestResponseMove {
  ID           Int      @default(autoincrement())
  MethodName   String   @db.NVarChar(50)
  ExamID       Int
  SchoolID     Int
  StudentID    Int
  RequestData  String   @db.NVarChar(Max)
  ResponseData String?  @db.NVarChar(Max)
  Tstamp       DateTime @db.DateTime
  ServerIP     String   @db.NVarChar(100)
  Status       Boolean

  @@ignore
}

model TApproveEmployeeContactAddress {
  ID                 Int       @default(autoincrement())
  Version            Int?
  EmployeeID         Int
  SchoolID           Int
  IsPermanentAddress Boolean?
  HouseNo            String?   @db.VarChar(10)
  Moo                String?   @db.VarChar(10)
  Village            String?   @db.VarChar(50)
  Soi                String?   @db.VarChar(40)
  Building           String?   @db.VarChar(50)
  Road               String?   @db.VarChar(40)
  Province           Int?
  District           Int?
  SubDistrict        Int?
  PostalCode         String?   @db.VarChar(10)
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEECONTACTADDR")
}

model TApproveEmployeeEducation {
  ID                   Int       @default(autoincrement())
  Version              Int?
  EmployeeID           Int
  SchoolID             Int
  No                   Int?
  EducationInstitution String?   @db.VarChar(100)
  GraduateStartDate    Int?
  GraduateEndDate      Int?
  Education            Int?
  Major                String?   @db.VarChar(100)
  Minor                String?   @db.VarChar(100)
  RequestApproveDate   DateTime? @db.DateTime
  ApproveDate          DateTime? @db.DateTime
  ApproveBy            Int?
  ApproveStatus        String?   @db.VarChar(20)
  ApproveComment       String?   @db.VarChar(500)
  UserAcknowledge      Boolean?
  EndDateShowResult    DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEEDUCATION")
}

model TApproveEmployeeFamily {
  ID                 Int       @default(autoincrement())
  Version            Int?
  EmployeeID         Int
  SchoolID           Int
  No                 Int?
  FamilyRelationship String?   @db.VarChar(20)
  Title              Int?
  Name               String?   @db.VarChar(30)
  Surname            String?   @db.VarChar(50)
  Birthday           DateTime? @db.DateTime
  MaritalStatus      Int?
  LivingStatus       String?   @db.VarChar(30)
  DeathStatus        String?   @db.VarChar(30)
  FamilyOccupation   String?   @db.VarChar(50)
  Education          Int?
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEFAMILY")
}

model TApproveEmployeeHistoryReceivingRoyalDecoration {
  ID                      Int       @default(autoincrement())
  Version                 Int?
  EmployeeID              Int
  SchoolID                Int
  No                      Int?
  YearReceived            Int?
  RoyalDecorationClass    String?   @db.VarChar(50)
  Position                String?   @db.VarChar(50)
  RoyalGovernmentVolumeNo String?   @db.VarChar(10)
  RoyalGovernmentPart     String?   @db.VarChar(10)
  RoyalGovernmentNo       String?   @db.VarChar(10)
  Dated                   DateTime? @db.DateTime
  RequestApproveDate      DateTime? @db.DateTime
  ApproveDate             DateTime? @db.DateTime
  ApproveBy               Int?
  ApproveStatus           String?   @db.VarChar(20)
  ApproveComment          String?   @db.VarChar(500)
  UserAcknowledge         Boolean?
  EndDateShowResult       DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEHISTORYRECE")
}

model TApproveEmployeeHonor {
  ID                 Int       @default(autoincrement())
  Version            Int?
  EmployeeID         Int
  SchoolID           Int
  No                 Int?
  HonorType          String?   @db.VarChar(100)
  DonatingAgency     String?   @db.VarChar(100)
  YearReceived       Int?
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEHONOR")
}

model TApproveEmployeeOccupationalLicense {
  ID                             Int       @default(autoincrement())
  Version                        Int?
  EmployeeID                     Int
  SchoolID                       Int
  No                             Int?
  ProfessionalLicenseType        Int?
  ProfessionalLicenseNumber      String?   @db.VarChar(20)
  ProfessionalLicenseName        String?   @db.VarChar(100)
  CertificateIssueDate           DateTime? @db.DateTime
  CertificateExpireDate          DateTime? @db.DateTime
  OrganizationIssuingCertificate String?   @db.VarChar(100)
  RequestApproveDate             DateTime? @db.DateTime
  ApproveDate                    DateTime? @db.DateTime
  ApproveBy                      Int?
  ApproveStatus                  String?   @db.VarChar(20)
  ApproveComment                 String?   @db.VarChar(500)
  UserAcknowledge                Boolean?
  EndDateShowResult              DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEOCCUPATIONA")
}

model TApproveEmployeePermanentAddress {
  ID                 Int       @default(autoincrement())
  Version            Int?
  EmployeeID         Int
  SchoolID           Int
  HouseNo            String?   @db.VarChar(100)
  Moo                String?   @db.VarChar(50)
  Village            String?   @db.VarChar(50)
  Soi                String?   @db.VarChar(50)
  Building           String?   @db.VarChar(50)
  Road               String?   @db.VarChar(50)
  Province           Int?
  District           Int?
  SubDistrict        Int?
  PostalCode         String?   @db.VarChar(10)
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEPERMANENTAD")
}

model TApproveEmployeeProfile {
  ID                 Int       @default(autoincrement())
  Version            Int?
  EmployeeID         Int
  SchoolID           Int
  Gender             String?   @db.Char(1)
  Title              Int?
  Name               String?   @db.VarChar(256)
  Surname            String?   @db.VarChar(256)
  NameEn             String?   @db.VarChar(30)
  SurnameEn          String?   @db.VarChar(50)
  IDCardNumber       String?   @db.VarChar(13)
  PassportNumber     String?   @db.VarChar(50)
  PassportCountry    String?   @db.VarChar(100)
  BirthDay           DateTime? @db.DateTime
  BloodType          String?   @db.VarChar(5)
  Nationality        String?   @db.VarChar(3)
  Race               String?   @db.VarChar(3)
  Religion           String?   @db.VarChar(3)
  MaritalStatus      Int?
  SpouseName         String?   @db.VarChar(30)
  SpouseSurname      String?   @db.VarChar(50)
  PhoneNumber        String?   @db.VarChar(20)
  Email              String?   @db.VarChar(256)
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEEPROFILE")
}

model TApproveEmployeeTraining {
  ID                 Int       @default(autoincrement())
  Version            Int?
  EmployeeID         Int
  SchoolID           Int
  No                 Int?
  Type               Int?
  Project            String?   @db.VarChar(100)
  TrainingCourseName String?   @db.VarChar(100)
  TrainingStartDate  DateTime? @db.DateTime
  TrainingEndDate    DateTime? @db.DateTime
  NumberHours        Decimal?  @db.Decimal(6, 2)
  Location           String?   @db.VarChar(100)
  Country            String?   @db.VarChar(100)
  Province           String?   @db.VarChar(100)
  Expenses           Decimal?  @db.Decimal(6, 2)
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime

  @@id([ID, EmployeeID, SchoolID], map: "PK_TAPPROVEEMPLOYEETRAINING")
}

model TApproveStudentContactAddress {
  ID                 Int       @default(autoincrement())
  Version            Int?
  StudentID          Int
  SchoolID           Int
  IsPermanentAddress Boolean?
  HouseNo            String?   @db.VarChar(100)
  Soi                String?   @db.VarChar(50)
  Moo                String?   @db.VarChar(50)
  Road               String?   @db.VarChar(50)
  Province           Int?
  District           Int?
  SubDistrict        Int?
  PostalCode         String?   @db.VarChar(50)
  HousePhone         String?   @db.VarChar(50)
  LiveWithTitle      Int?
  LiveWithName       String?   @db.VarChar(100)
  LiveWithSurname    String?   @db.VarChar(100)
  EmergencyPhone     String?   @db.VarChar(20)
  LiveWithEmail      String?   @db.VarChar(100)
  NeighborName       String?   @db.VarChar(50)
  NeighborSurname    String?   @db.VarChar(50)
  NeighborPhone      String?   @db.VarChar(30)
  HouseStyle         Int?
  RequestApproveDate DateTime? @db.DateTime
  ApproveDate        DateTime? @db.DateTime
  ApproveBy          Int?
  ApproveStatus      String?   @db.VarChar(20)
  ApproveComment     String?   @db.VarChar(500)
  UserAcknowledge    Boolean?
  EndDateShowResult  DateTime? @db.DateTime
  RecoveryScript     String?   @db.VarChar(2000)
  RecoveryDate       DateTime? @db.DateTime
  RecoveryBy         Int?

  @@id([ID, StudentID, SchoolID], map: "PK_TAPPROVESTUDENTCONTACTADDRE")
  @@index([StudentID, SchoolID], map: "INDEX_VV_156524_156523")
}

model TApproveStudentFatherInfo {
  ID                   Int       @default(autoincrement())
  Version              Int?
  StudentID            Int
  SchoolID             Int
  Title                Int?
  Name                 String?   @db.VarChar(50)
  Surname              String?   @db.VarChar(50)
  NameEn               String?   @db.VarChar(100)
  SurnameEn            String?   @db.VarChar(100)
  BirthDay             DateTime? @db.DateTime
  IDCardNumber         String?   @db.VarChar(50)
  Race                 String?   @db.VarChar(3)
  Nationality          String?   @db.VarChar(3)
  Religion             String?   @db.VarChar(3)
  Education            Int?
  HouseNo              String?   @db.VarChar(50)
  Soi                  String?   @db.VarChar(50)
  Moo                  String?   @db.VarChar(50)
  Road                 String?   @db.VarChar(50)
  Province             Int?
  District             Int?
  SubDistrict          Int?
  PostalCode           String?   @db.VarChar(50)
  Career               String?   @db.VarChar(100)
  MonthlyIncome        Float?
  WorkPlaces           String?   @db.VarChar(200)
  PhoneNumberHouse     String?   @db.VarChar(50)
  PhoneNumberMobile    String?   @db.VarChar(20)
  PhoneNumberWorkPlace String?   @db.VarChar(20)
  RequestApproveDate   DateTime? @db.DateTime
  ApproveDate          DateTime? @db.DateTime
  ApproveBy            Int?
  ApproveStatus        String?   @db.VarChar(20)
  ApproveComment       String?   @db.VarChar(500)
  UserAcknowledge      Boolean?
  EndDateShowResult    DateTime? @db.DateTime
  RecoveryScript       String?   @db.VarChar(2000)
  RecoveryDate         DateTime? @db.DateTime
  RecoveryBy           Int?

  @@id([ID, StudentID, SchoolID], map: "PK_TAPPROVESTUDENTFATHERINFO")
  @@index([StudentID, SchoolID], map: "INDEX_VV_18210_18209")
}

model TApproveStudentMotherInfo {
  ID                   Int       @default(autoincrement())
  Version              Int?
  StudentID            Int
  SchoolID             Int
  Title                Int?
  Name                 String?   @db.VarChar(50)
  Surname              String?   @db.VarChar(50)
  NameEn               String?   @db.VarChar(100)
  SurnameEn            String?   @db.VarChar(100)
  BirthDay             DateTime? @db.DateTime
  IDCardNumber         String?   @db.VarChar(50)
  Race                 String?   @db.VarChar(3)
  Nationality          String?   @db.VarChar(3)
  Religion             String?   @db.VarChar(3)
  Education            Int?
  IsFatherAddress      Boolean?
  HouseNo              String?   @db.VarChar(50)
  Soi                  String?   @db.VarChar(50)
  Moo                  String?   @db.VarChar(50)
  Road                 String?   @db.VarChar(50)
  Province             Int?
  District             Int?
  SubDistrict          Int?
  PostalCode           String?   @db.VarChar(50)
  Career               String?   @db.VarChar(100)
  MonthlyIncome        Float?
  WorkPlaces           String?   @db.VarChar(200)
  PhoneNumberHouse     String?   @db.VarChar(50)
  PhoneNumberMobile    String?   @db.VarChar(20)
  PhoneNumberWorkPlace String?   @db.VarChar(20)
  RequestApproveDate   DateTime? @db.DateTime
  ApproveDate          DateTime? @db.DateTime
  ApproveBy            Int?
  ApproveStatus        String?   @db.VarChar(20)
  ApproveComment       String?   @db.VarChar(500)
  UserAcknowledge      Boolean?
  EndDateShowResult    DateTime? @db.DateTime
  RecoveryScript       String?   @db.VarChar(2000)
  RecoveryDate         DateTime? @db.DateTime
  RecoveryBy           Int?

  @@id([ID, StudentID, SchoolID], map: "PK_TAPPROVESTUDENTMOTHERINFO")
  @@index([StudentID, SchoolID], map: "INDEX_VV_156854_156853")
}

model TApproveStudentParentInfo {
  ID                   Int       @default(autoincrement())
  Version              Int?
  StudentID            Int
  SchoolID             Int
  CopyFrom             Int?
  Relationship         String?   @db.VarChar(20)
  Title                Int?
  Name                 String?   @db.VarChar(50)
  Surname              String?   @db.VarChar(50)
  NameEn               String?   @db.VarChar(50)
  SurnameEn            String?   @db.VarChar(50)
  BirthDay             DateTime? @db.DateTime
  IDCardNumber         String?   @db.VarChar(20)
  Race                 String?   @db.VarChar(3)
  Nationality          String?   @db.VarChar(3)
  Religion             String?   @db.VarChar(3)
  Education            Int?
  HouseNo              String?   @db.VarChar(50)
  Soi                  String?   @db.VarChar(50)
  Moo                  String?   @db.VarChar(50)
  Road                 String?   @db.VarChar(50)
  Province             Int?
  District             Int?
  SubDistrict          Int?
  PostalCode           String?   @db.VarChar(50)
  TuitionFee           Int?
  FamilyStatus         Int?
  Career               String?   @db.VarChar(200)
  MonthlyIncome        Float?
  WorkPlaces           String?   @db.VarChar(200)
  PhoneNumberHouse     String?   @db.VarChar(30)
  PhoneNumberMobile    String?   @db.VarChar(30)
  PhoneNumberWorkPlace String?   @db.VarChar(30)
  RequestApproveDate   DateTime? @db.DateTime
  ApproveDate          DateTime? @db.DateTime
  ApproveBy            Int?
  ApproveStatus        String?   @db.VarChar(20)
  ApproveComment       String?   @db.VarChar(500)
  UserAcknowledge      Boolean?
  EndDateShowResult    DateTime? @db.DateTime
  RecoveryScript       String?   @db.VarChar(2000)
  RecoveryDate         DateTime? @db.DateTime
  RecoveryBy           Int?

  @@id([ID, StudentID, SchoolID], map: "PK_TAPPROVESTUDENTPARENTINFO")
  @@index([StudentID, SchoolID], map: "INDEX_VV_157518_157517")
}

model TApproveStudentPermanentAddress {
  ID                    Int       @default(autoincrement())
  Version               Int?
  StudentID             Int
  SchoolID              Int
  HouseCode             String?   @db.VarChar(20)
  HouseNo               String?   @db.VarChar(100)
  Soi                   String?   @db.VarChar(100)
  Moo                   String?   @db.VarChar(100)
  Road                  String?   @db.VarChar(100)
  Province              Int?
  District              Int?
  SubDistrict           Int?
  PostalCode            String?   @db.VarChar(20)
  HomePhoneNumber       String?   @db.VarChar(20)
  BirthPlace            String?   @db.VarChar(100)
  BirthPlaceProvince    Int?
  BirthPlaceDistrict    Int?
  BirthPlaceSubDistrict Int?
  RequestApproveDate    DateTime? @db.DateTime
  ApproveDate           DateTime? @db.DateTime
  ApproveBy             Int?
  ApproveStatus         String?   @db.VarChar(20)
  ApproveComment        String?   @db.VarChar(500)
  UserAcknowledge       Boolean?
  EndDateShowResult     DateTime? @db.DateTime
  RecoveryScript        String?   @db.VarChar(2000)
  RecoveryDate          DateTime? @db.DateTime
  RecoveryBy            Int?

  @@id([ID, StudentID, SchoolID], map: "PK_TAPPROVESTUDENTPERMANENTADD")
  @@index([StudentID, SchoolID], map: "INDEX_VV_145218_145217")
}

model TApproveStudentProfile {
  ID                       Int       @default(autoincrement())
  Version                  Int?
  StudentID                Int
  SchoolID                 Int
  Gender                   String?   @db.Char(1)
  Title                    Int?
  Name                     String?   @db.VarChar(256)
  Surname                  String?   @db.VarChar(256)
  NameEn                   String?   @db.VarChar(50)
  SurnameEn                String?   @db.VarChar(50)
  NameOther                String?   @db.VarChar(50)
  SurnameOther             String?   @db.VarChar(50)
  Nickname                 String?   @db.VarChar(256)
  NicknameEn               String?   @db.VarChar(256)
  BirthDay                 DateTime? @db.DateTime
  Race                     String?   @db.VarChar(3)
  Nationality              String?   @db.VarChar(3)
  Religion                 String?   @db.VarChar(3)
  Disability               String?   @db.VarChar(2)
  Disadvantaged            String?   @db.VarChar(2)
  PhoneNumber              String?   @db.VarChar(100)
  Email                    String?   @db.VarChar(256)
  NumberMemberInFamily     Int?
  YouAreChildOfFamily      Int?
  HaveBrotherStudyInSchool Int?
  Other                    String?   @db.VarChar(1000)
  RequestApproveDate       DateTime? @db.DateTime
  ApproveDate              DateTime? @db.DateTime
  ApproveBy                Int?
  ApproveStatus            String?   @db.VarChar(20)
  ApproveComment           String?   @db.VarChar(500)
  UserAcknowledge          Boolean?
  EndDateShowResult        DateTime? @db.DateTime
  RecoveryScript           String?   @db.VarChar(2000)
  RecoveryDate             DateTime? @db.DateTime
  RecoveryBy               Int?

  @@id([ID, StudentID, SchoolID], map: "PK_TAPPROVESTUDENTPROFILE")
  @@index([StudentID, SchoolID], map: "INDEX_VV_5794232_5794231")
}

model TAssetCategory {
  AssetCategoryId Int       @default(autoincrement())
  Code            String?   @db.NVarChar(15)
  Category        String?   @db.NVarChar(50)
  Flag            Int?
  UpdateDate      DateTime? @db.DateTime
  UpdateBy        Int?
  SchoolID        Int
  CreatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, AssetCategoryId], map: "PK_TASSETCATEGORY")
}

model TAssetCutting {
  Year           Int
  AssetCuttingId Int       @default(autoincrement())
  AssetProductId Int?
  Amount         Int?
  UnitID         Int?
  Receiver       Int?
  DepID          Int?
  Status         Int?
  UpdateDate     DateTime? @db.DateTime
  UpdateBy       Int?
  DateStamp      DateTime? @db.DateTime
  SchoolID       Int
  CreatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, Year, AssetCuttingId], map: "PK_TASSETCUTTING")
}

model TAssetGet {
  Year           Int
  AssetGetId     Int       @default(autoincrement())
  Source         String?   @db.NVarChar(50)
  AssetProductId Int?
  Amount         Int?
  UnitID         Int?
  DepID          Int?
  Receiver       Int?
  DateStamp      DateTime? @db.DateTime
  UpdateDate     DateTime? @db.DateTime
  UpdateBy       Int?
  SchoolID       Int
  CreatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, Year, AssetGetId], map: "PK_TASSETGET")
}

model TAssetProduct {
  AssetCategoryId Int?
  AssetProductId  Int       @default(autoincrement())
  Type            String?   @db.NVarChar(15)
  Product         String?   @db.NVarChar(50)
  UnitID          Int?
  Flag            Int?
  UpdateDate      DateTime? @db.DateTime
  UpdateBy        Int?
  SchoolID        Int
  CreatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, AssetProductId], map: "PK_TASSETPRODUCT")
}

model TAssetTransaction {
  Year               Int
  AssetTransactionId Int       @default(autoincrement())
  TransactionType    Int?
  TransactionID      Int?
  AssetProductId     Int?
  DepID              Int?
  Amount             Int?
  Balance            Int?
  UpdateDate         DateTime? @db.DateTime
  UpdateBy           Int?
  Action             String?   @db.NVarChar(10)
  UnitID             Int?
  SchoolID           Int
  CreatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, Year, AssetTransactionId], map: "PK_TASSETTRANSACTION")
}

model TAssetTransfer {
  Year            Int
  AssetTransferId Int       @default(autoincrement())
  AssetProductId  Int?
  Amount          Int?
  UnitID          Int?
  DepIDRequest    Int?
  DepIDTransfer   Int?
  UpdateDate      DateTime? @db.DateTime
  UpdateBy        Int?
  DateStamp       DateTime? @db.DateTime
  SchoolID        Int
  CreatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, Year, AssetTransferId], map: "PK_TASSETTRANSFER")
}

model TAssetWithdraw {
  Year            Int
  AssetWithdrawId Int       @default(autoincrement())
  TransactionType String?   @db.NVarChar(5)
  AssetProductId  Int?
  Amount          Int?
  UnitID          Int?
  DepID           Int?
  Receiver        Int?
  DateStamp       DateTime? @db.DateTime
  UpdateDate      DateTime? @db.DateTime
  UpdateBy        Int?
  DocumentNo      String?   @db.NVarChar(10)
  ResponsibleBy   Int?
  SchoolID        Int
  CreatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, Year, AssetWithdrawId], map: "PK_TASSETWITHDRAW")
}

model TB_EQ_Answer {
  TB_EQ_Answer_Id   Int       @default(autoincrement())
  TB_EQ_Question_Id Int?
  TB_EQ_Point_Point Int?
  sID               Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, TB_EQ_Answer_Id], map: "PK_TB_EQ_Answer")
}

model TB_EQ_Data {
  TB_EQ_Data_Id       Int       @default(autoincrement())
  TB_EQ_Data_Datetime DateTime? @db.DateTime
  sID                 Int?
  SchoolID            Int
  CreatedBy           Int?
  UpdatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  UpdatedDate         DateTime? @db.DateTime
  cDel                Boolean

  @@id([SchoolID, TB_EQ_Data_Id], map: "PK_TB_EQ_Data")
}

model TB_EQ_Group {
  TB_EQ_Group_Id       Int       @default(autoincrement())
  TB_EQ_Group_Des      String?   @db.NVarChar(250)
  TB_EQ_Question_Group Int?
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, TB_EQ_Group_Id], map: "PK_TB_EQ_Group")
}

model TB_EQ_Point {
  TB_EQ_Point_Id    Int       @default(autoincrement())
  TB_EQ_Point_Point Int?
  TB_EQ_Question_Id Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, TB_EQ_Point_Id], map: "PK_TB_EQ_Point")
}

model TB_EQ_Question {
  TB_EQ_Question_Id    Int       @default(autoincrement())
  TB_EQ_Question_Des   String?   @db.NVarChar(250)
  TB_EQ_Question_Group Int?
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, TB_EQ_Question_Id], map: "PK_TB_EQ_Question")
}

model TB_HistorySetting {
  Fd_HistoryID    String    @id(map: "PK_TB_HistorySetting") @db.UniqueIdentifier
  Fd_FunctionName String?   @db.NVarChar(200)
  Fd_SettingData  String?   @db.Text
  Fd_SchoolID     Int?
  Fd_UpdatedDate  DateTime? @db.DateTime
  Fd_UpdatedBy    Int?
}

model TBackupCard {
  CardID            String    @db.UniqueIdentifier
  SchoolID          Int
  CardName          String?   @db.NVarChar(250)
  BarCode           String?   @db.NVarChar(20)
  NFC               String?   @db.NVarChar(20)
  NFCReverse        String?   @db.VarChar(20)
  NFCEncrypt        String?   @db.NVarChar(20)
  NFCEncryptReverse String?   @db.VarChar(20)
  Money             Decimal?  @db.Decimal(18, 2)
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean?
  Insurance         Decimal?  @db.Decimal(6, 2)

  @@id([CardID, SchoolID], map: "PK_TBackupCard_1")
  @@index([SchoolID, cDel], map: "INDEX_VV_100022_100021")
  @@index([SchoolID], map: "INDEX_VV_118357_118356")
  @@index([SchoolID, Money], map: "INDEX_VV_118359_118358")
  @@index([NFC, cDel], map: "INDEX_VV_13_12")
  @@index([SchoolID, cDel], map: "INDEX_VV_14789_14788")
  @@index([SchoolID, cDel], map: "INDEX_VV_26_25")
  @@index([NFCReverse, cDel], map: "INDEX_VV_316_315")
  @@index([BarCode, cDel], map: "INDEX_VV_32_31")
  @@index([CardName], map: "INDEX_VV_5246275_5246274")
  @@index([CardName], map: "INDEX_VV_6064660_6064659")
  @@index([CardName], map: "INDEX_VV_6066270_6066269")
  @@index([SchoolID, cDel], map: "INDEX_VV_90336_90335")
  @@index([SchoolID, cDel], map: "INDEX_VV_94236_94235")
  @@index([SchoolID, cDel], map: "INDEX_VV_94321_94320")
  @@index([cDel], map: "INDEX_VV_98178_98177")
  @@index([SchoolID, BarCode, cDel], map: "TBackupCard_SchoolID_Barcode_Cdel")
}

model TBackupCardHistory {
  CardHistoryID String    @db.UniqueIdentifier
  SchoolID      Int
  CardID        String?   @db.UniqueIdentifier
  UserType      Int?
  UserID        Int?
  UserName      String?   @db.NVarChar(250)
  BorrowingDate DateTime? @db.DateTime
  ReturnDate    DateTime? @db.DateTime
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean?
  Insurance     Decimal?  @db.Decimal(6, 2)

  @@id([CardHistoryID, SchoolID], map: "PK_TBackupCardHistory")
  @@index([UserType], map: "INDEX_VV_1146_1145")
  @@index([SchoolID], map: "INDEX_VV_12242_12241")
  @@index([UserID], map: "INDEX_VV_28494_28493")
  @@index([CardID], map: "INDEX_VV_38_37")
  @@index([ReturnDate, CardID], map: "INDEX_VV_5204837_5204836")
  @@index([UserType], map: "INDEX_VV_6066314_6066313")
  @@index([SchoolID, ReturnDate, BorrowingDate], map: "INDEX_VV_90848_90847")
  @@index([SchoolID], map: "INDEX_VV_91886_91885")
  @@index([CardID], map: "IX_TBackupCardHistory_SchoolID")
  @@index([SchoolID, ReturnDate], map: "IX_TBackupCardHistory_SchoolID_ReturnDate")
}

model TBaseSalary {
  nTBaseID    Int       @default(autoincrement())
  sID         Int?
  BaseSalary  Int?
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nTBaseID], map: "PK_TBaseSalary")
}

model TBehavior {
  BehaviorId     Int       @default(autoincrement())
  BehaviorName   String?   @db.NVarChar(250)
  BehaviorNameEN String?   @db.NVarChar(250)
  Status         Boolean?
  Type           Int?
  Score          Decimal?  @db.Decimal(18, 2)
  UserAdd        Int?
  dAdd           DateTime? @db.DateTime
  UserUpdate     Int?
  dUpdate        DateTime? @db.DateTime
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  nAutoType      Int?

  @@id([SchoolID, BehaviorId], map: "PK_Table_1")
}

model TBehaviorHistory {
  BehaviorId        Int
  StudentId         Int?
  BehaviorName      String?   @db.NVarChar(250)
  BehaviorNameEN    String?   @db.NVarChar(250)
  Type              String?   @db.Char(1)
  Score             Decimal?  @db.Decimal(18, 2)
  ResidualScore     Decimal?  @db.Decimal(18, 2)
  dAdd              DateTime? @db.DateTime
  UserAdd           Int?
  dUpdate           DateTime? @db.DateTime
  UserUpdate        Int?
  Note              String?   @db.Text
  BehaviorHistoryId Int       @default(autoincrement())
  dCanCel           DateTime? @db.DateTime
  UserCancel        Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean
  LogDate           DateTime? @db.Date
  ImageURL          String?   @db.Text
  IsHolidayCancel   Boolean?

  @@id([SchoolID, BehaviorHistoryId], map: "PK_TBehaviorHistory_Backup")
  @@index([SchoolID, dAdd], map: "INDEX_VV_13053_13052")
  @@index([LogDate, dAdd, cDel], map: "INDEX_VV_3432_3431")
  @@index([SchoolID, UpdatedDate], map: "INDEX_VV_92243_92242")
  @@index([SchoolID, cDel, LogDate], map: "INDEX_VV_92836_92835")
  @@index([dCanCel, LogDate, dAdd, cDel], map: "INDEX_VV_93153_93152")
  @@index([dCanCel, cDel, dAdd], map: "INDEX_VV_93203_93202")
  @@index([dCanCel, SchoolID, dAdd, cDel], map: "INDEX_VV_93552_93551")
  @@index([BehaviorId, dCanCel, cDel, dAdd, LogDate], map: "INDEX_VV_B100231_100230")
  @@index([dCanCel, SchoolID, LogDate], map: "INDEX_VV_B100879_100878")
  @@index([StudentId, dCanCel, SchoolID, cDel, LogDate], map: "INDEX_VV_B2227_2226")
  @@index([StudentId, dCanCel, cDel, dAdd], map: "INDEX_VV_B29900_29899")
  @@index([dAdd], map: "INDEX_VV_B59612_59611")
  @@index([dCanCel, SchoolID, cDel, dAdd], map: "INDEX_VV_B91728_91727")
  @@index([BehaviorHistoryId], map: "INDEX_VV_B93967_93966")
  @@index([dCanCel, SchoolID, cDel, dAdd], map: "INDEX_VV_B94024_94023")
  @@index([dCanCel, cDel, dAdd, LogDate], map: "INDEX_VV_B94748_94747")
  @@index([dCanCel, SchoolID, cDel, LogDate], map: "INDEX_VV_B98376_98375")
  @@index([StudentId], map: "IX_TBehaviorHistory_Backup_BehaviorId_dCanCel_cDel_dAdd_LogDate")
  @@index([StudentId, dCanCel, SchoolID, cDel, dAdd], map: "IX_VV_TBehaviorHistory_Backup_StudentId_dCanCel_SchoolID_cDel_dAdd")
  @@index([StudentId, cDel, dAdd], map: "TBehaviorHistory_Backup_StudentID_cDel_dAdd")
}

model TBehaviorHistory_Files {
  BehaviorHistoryId Int?
  sFileName         String?   @db.NVarChar(250)
  ContentType       String?   @db.NVarChar(100)
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean
  nFileId           String    @id(map: "PK_TBehaviorHistory_Files") @db.UniqueIdentifier
}

model TBehaviorSetting {
  Type              Int?
  MaxScore          Decimal?  @db.Decimal(18, 0)
  BehaviorSettingID Int       @default(autoincrement())
  Late              Decimal?  @db.Decimal(18, 0)
  Absence           Decimal?  @db.Decimal(18, 0)
  BeginLate         Int?
  BeginAbsence      Int?
  ShowMinusSign     Int?
  Alert             Int?
  Errand            Decimal?  @db.Decimal(18, 0)
  Sick              Decimal?  @db.Decimal(18, 0)
  UncheckName       Decimal?  @db.Decimal(18, 0)
  BeginErrand       Int?
  BeginSick         Int?
  BeginUncheckName  Int?
  TimeStartCutPoint String?   @db.NVarChar(5)
  AbsenceHalfPoint  String?   @db.NVarChar(1)
  LateSettingTime   Boolean?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, BehaviorSettingID], map: "PK_TBehaviorSetting")
  @@index([BeginLate], map: "INDEX_VV_58763_58762")
}

model TBehaviorTimeSetting {
  BehaviorTimeSettingID Int       @id(map: "PK_TBehaviorTimeSetting") @default(autoincrement())
  SchoolID              Int
  TimeStatr             String?   @db.NVarChar(50)
  TimeEnd               String?   @db.NVarChar(50)
  Cut_Point             Int?
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime
  cDel                  Boolean
}

model TBlackList {
  nProductID  Int
  sID         Int
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nProductID, sID], map: "PK_TBlackList")
}

model TBranch {
  BranchId    Int       @default(autoincrement())
  nTLevel     Int?
  BranchName  String?   @db.NVarChar(200)
  cDel        Int?
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, BranchId], map: "PK_TBranch")
  @@index([BranchId], map: "IDX_M_3441_3440")
  @@index([nTLevel], map: "IX_TBranch")
}

model TBranchSpec {
  BranchSpecId    Int       @default(autoincrement())
  BranchSubjectId Int
  BranchSpecName  String?   @db.NVarChar(200)
  cDel            Int?
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime

  @@id([SchoolID, BranchSpecId], map: "PK_TBranchSpec")
  @@index([BranchSpecId], map: "INDEX_VV_19312_19311")
  @@index([BranchSubjectId], map: "IX_TBranchSpec")
}

model TBranchSubject {
  BranchSubjectId   Int       @default(autoincrement())
  BranchId          Int
  BranchSubjectName String?   @db.NVarChar(200)
  cDel              Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime

  @@id([SchoolID, BranchSubjectId], map: "PK_TBranchSubject")
  @@index([BranchSubjectId], map: "INDEX_VV_19314_19313")
  @@index([BranchId], map: "IX_TBranchSubject")
}

model TCalendar {
  CalendarID  Int       @default(autoincrement())
  dDay        DateTime? @db.Date
  sDetail     String?   @db.NVarChar(Max)
  cImportant  String?   @db.Char(1)
  cHoly       String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, CalendarID], map: "PK_TCalendar")
}

model TClass {
  sClassID    String    @db.NVarChar(10)
  sClass      String?   @db.NVarChar(250)
  sClassIP    String?   @db.NVarChar(15)
  cDel        String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, sClassID], map: "PK_TClass")
}

model TClassMember {
  nClassMemberid    Int       @default(autoincrement())
  nTeacherHeadid    Int?
  nTeacherAssistOne Int?
  nTeacherAssistTwo Int?
  nTermSubLevel2    Int?
  nTerm             String?   @db.NVarChar(50)
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, nClassMemberid], map: "PK_Table_2")
  @@index([nTermSubLevel2, nTerm, SchoolID], map: "IDX_M_1448_1447")
  @@index([nTermSubLevel2, SchoolID], map: "IDX_M_206765_206764")
  @@index([nTeacherHeadid, nTermSubLevel2, nTerm, SchoolID], map: "IDX_M_4084_4083")
  @@index([nTerm], map: "INDEX_VV_89574_89573")
}

model TClassOnline {
  OnlineId     Int       @id(map: "PK_TClassOnline") @default(autoincrement())
  TermId       String?   @db.VarChar(20)
  LevelId      Int?
  PlanId       Int?
  TitleName    String?   @db.NVarChar(150)
  TeacherId    Int?
  SchoolId     Int?
  SelectedRoom String?   @db.VarChar(150)
  cDel         Boolean?
  ShareId      String?   @db.VarChar(250)
  CreateBy     Int?
  Created      DateTime? @db.DateTime
  ModifyBy     Int?
  Modfied      DateTime? @db.DateTime

  @@index([TermId, LevelId, SchoolId], map: "IDX_M_138_137")
  @@index([TermId, LevelId, PlanId, SchoolId], map: "IDX_M_3183_3182")
  @@index([SchoolId], map: "INDEX_VV_98267_98266")
  @@index([TitleName], map: "TClassOnline_PlanID_SchoolID")
  @@index([PlanId], map: "TClassOnline_SchoolID")
  @@index([PlanId], map: "TClassOnline_SchoolID1")
}

model TCourseGroup {
  courseGroupId Int       @default(autoincrement())
  Description   String?   @db.NVarChar(30)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  MasterCode    String?   @db.VarChar(5)
  DescriptionEn String?   @db.NVarChar(100)

  @@id([SchoolID, courseGroupId], map: "PK_TCourseGroup")
  @@index([courseGroupId], map: "INDEX_VV_89878_89877")
}

model TCourseGroupTranslation {
  GroupTranslationID Int       @default(autoincrement())
  CourseGroupId      Int
  Description        String    @db.NVarChar(50)
  LanguageCode       String    @db.NVarChar(5)
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, GroupTranslationID], map: "PK_TCourseGroupTranslation")
}

model TCourseRegister {
  couserRegisterId Int       @default(autoincrement())
  nTLevel          String?   @db.NVarChar(50)
  sPlaneID         Int?
  courseStatus     String?   @db.NVarChar(50)
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean

  @@id([SchoolID, couserRegisterId], map: "PK_TCourseRegister")
}

model TCourseTranslation {
  CourseTranlationID Int       @default(autoincrement())
  sPlaneID           Int
  CourseName         String    @db.NVarChar(250)
  CourseCode         String    @db.NVarChar(50)
  LanguageCode       String    @db.NVarChar(5)
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, CourseTranlationID], map: "PK_TCourseTranslation")
}

model TCourseType {
  courseTypeId  Int       @default(autoincrement())
  Description   String?   @db.NVarChar(50)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  nOrder        Int?
  MasterCode    String?   @db.VarChar(5)
  DescriptionEn String?   @db.NVarChar(100)

  @@id([SchoolID, courseTypeId], map: "PK_TCourseType")
  @@index([courseTypeId], map: "INDEX_VV_12040_12039")
}

model TCourseTypeTranslation {
  CourseTypeTransID Int       @default(autoincrement())
  CourseTypeId      Int
  Description       String    @db.NVarChar(50)
  LanguageCode      String    @db.NVarChar(5)
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, CourseTypeTransID], map: "PK_TCourseTypeTranslation")
}

model TCurriculum {
  CurriculumId   Int      @default(autoincrement())
  CurriculumName String?  @db.NVarChar(250)
  CreatedDate    DateTime @db.DateTime
  CreatedBy      Int?
  UpdatedDate    DateTime @db.DateTime
  UpdatedBy      Int?
  nYear          Int?
  SchoolId       Int
  IsActive       Boolean?
  cDel           Boolean

  @@id([SchoolId, CurriculumId], map: "PK_TCurriculum")
  @@index([nYear], map: "IX_TCurriculum")
  @@index([CurriculumId], map: "IX_TCurriculum_CurriculumId")
}

model TDepartment {
  DepID          Int       @default(autoincrement())
  userHeadId     Int?
  userApproveOne Int?
  userApproveTwo Int?
  departmentName String?   @db.NVarChar(50)
  deleted        Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, DepID], map: "PK_TDepartment")
}

model TDocumentStampDate {
  ID       Int       @id(map: "PK_TDocumentStampDate") @default(autoincrement())
  SchoolID Int?
  DocType  String?   @db.VarChar(3)
  DocDate  DateTime? @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model temp_drs_dbo_55_TAPIReques_dcd81495 {
  ID           Int
  MethodName   String   @db.NVarChar(50)
  ExamID       Int
  SchoolID     Int
  StudentID    Int
  RequestData  String   @db.NVarChar(Max)
  ResponseData String?  @db.NVarChar(Max)
  Tstamp       DateTime @db.DateTime
  ServerIP     String   @db.NVarChar(100)
  Status       Boolean

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Temp_sSellID {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@ignore
}

model TEmpAddress {
  sEmp          Int
  ID            Int
  Type          Int?
  No            String?   @db.NVarChar(10)
  VillageNo     String?   @db.NVarChar(10)
  Village       String?   @db.NVarChar(50)
  Building      String?   @db.NVarChar(50)
  Alley         String?   @db.NVarChar(40)
  Road          String?   @db.NVarChar(40)
  SubdistrictID Int?
  DistrictID    Int?
  ProvinceID    Int?
  Postcode      String?   @db.NVarChar(10)
  UpdateDate    DateTime? @db.DateTime
  UpdateBy      Int?
  SchoolID      Int
  CreatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  cDel          Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPADDRESS")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TempAPIResponse {
  LogID        Int       @default(autoincrement())
  SchoolID     Int
  APIRequest   String?   @db.NVarChar(Max)
  APIResponse  String?   @db.NVarChar(Max)
  MethodName   String?   @db.NVarChar(250)
  Tstamp       DateTime  @db.DateTime
  UserID       Int?
  CardID       String?   @db.UniqueIdentifier
  ResponseTime Float
  DeviceTime   DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TempCardMismatchSales {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
  CardHistoryID   String    @db.UniqueIdentifier
  BorrowingDate   DateTime? @db.DateTime
  ReturnDate      DateTime  @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TempCardMismatchSales1 {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
  CardHistoryID   String    @db.UniqueIdentifier
  BorrowingDate   DateTime? @db.DateTime
  ReturnDate      DateTime  @db.DateTime

  @@ignore
}

model TEmpEducationInfo {
  sEmp           Int
  ID             Int
  Institution    String?   @db.NVarChar(100)
  StudyYear      Int?
  GraduationYear Int?
  LevelID        Int?
  Major          String?   @db.NVarChar(100)
  MinorSubject   String?   @db.NVarChar(100)
  UpdateDate     DateTime? @db.DateTime
  UpdateBy       Int?
  SchoolID       Int
  CreatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPEDUCATIONINFO")
  @@index([sEmp, cDel], map: "IX_TEmpEducationInfo_sEmp_cDel")
}

model TEmpFamily {
  sEmp                Int
  ID                  Int
  FamilyRelation      String?   @db.NVarChar(20)
  TitleID             Int?
  FirstName           String?   @db.NVarChar(30)
  LastName            String?   @db.NVarChar(50)
  Birthday            DateTime? @db.DateTime
  PersonalStatus      Int?
  LiveStatus          String?   @db.NVarChar(30)
  DeathStatus         String?   @db.NVarChar(30)
  FamilyCareer        String?   @db.NVarChar(50)
  LevelID             Int?
  UpdateDate          DateTime? @db.DateTime
  UpdateBy            Int?
  SchoolID            Int
  CreatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  cDel                Boolean
  EducationBackground Int?

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPFAMILY")
  @@index([sEmp, cDel], map: "INDEX_VV_18226_18225")
}

model TEmpHonor {
  sEmp        Int
  ID          Int
  Type        String?   @db.NVarChar(100)
  Department  String?   @db.NVarChar(100)
  Year        Int?
  UpdateDate  DateTime? @db.DateTime
  UpdateBy    Int?
  SchoolID    Int
  CreatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPHONOR")
  @@index([sEmp, cDel], map: "IX_TEmpHonor_sEmp_cDel")
}

model TEmpInsignia {
  sEmp        Int
  ID          Int
  Year        Int?
  Grade       String?   @db.NVarChar(50)
  Position    String?   @db.NVarChar(50)
  BookNumber  String?   @db.NVarChar(10)
  Part        String?   @db.NVarChar(10)
  Duty        String?   @db.NVarChar(10)
  Number      String?   @db.NVarChar(10)
  Date        DateTime? @db.DateTime
  UpdateDate  DateTime? @db.DateTime
  UpdateBy    Int?
  SchoolID    Int
  CreatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPINSIGNIA")
}

model TEmployeeInfo {
  sEmp                     Int
  ID                       Int
  Code                     String?   @db.NVarChar(20)
  FirstNameEn              String?   @db.NVarChar(256)
  LastNameEn               String?   @db.NVarChar(256)
  PassportNumber           String?   @db.NVarChar(50)
  PassportCountry          String?   @db.NVarChar(100)
  PassportExpirationDate   DateTime? @db.DateTime
  VisaNo                   String?   @db.NVarChar(50)
  VisaExpirationDate       DateTime? @db.DateTime
  WorkPermitNo             String?   @db.NVarChar(50)
  WorkPermitExpirationDate DateTime? @db.DateTime
  BloodType                String?   @db.NVarChar(5)
  Nationality              String?   @db.NVarChar(50)
  Ethnicity                String?   @db.NVarChar(50)
  Religion                 String?   @db.NVarChar(50)
  PersonalStatus           Int?
  SpouseFirstName          String?   @db.NVarChar(30)
  SpouseLastName           String?   @db.NVarChar(50)
  UpdateDate               DateTime? @db.DateTime
  UpdateBy                 Int?
  SchoolID                 Int
  CreatedBy                Int?
  CreatedDate              DateTime? @db.DateTime
  cDel                     Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPLOYEEINFO")
  @@index([sEmp], map: "IDX_M_27937_27936")
  @@index([Code], map: "INDEX_VV_1280_1279")
  @@index([SchoolID, cDel], map: "INDEX_VV_66390_66389")
  @@index([SchoolID, cDel], map: "INDEX_VV_94247_94246")
}

model TEmployees {
  sEmp             Int
  sName            String?   @db.NVarChar(256)
  sLastname        String?   @db.NVarChar(256)
  sIdentification  String?   @db.NVarChar(13)
  dBirth           DateTime? @db.DateTime
  cSex             String?   @db.Char(1)
  sPhone           String?   @db.NVarChar(20)
  sEmail           String?   @db.NVarChar(256)
  sPassword        String?   @db.NVarChar(100)
  sSubtopic        String?   @db.NVarChar(512)
  sAddress         String?   @db.NVarChar(512)
  sCity            String?   @db.NVarChar(512)
  sPostalcode      String?   @db.NVarChar(10)
  sCountry         String?   @db.NVarChar(512)
  dUpdate          DateTime? @db.DateTime
  sFinger          String?   @db.NVarChar(Max)
  nMoney           Decimal?  @db.Decimal(18, 2)
  sFinger2         String?   @db.NVarChar(Max)
  sClaim           String?   @db.NVarChar(100)
  cDel             String?   @db.Char(1)
  sStatusReport    String?   @db.NVarChar(20)
  nTimeType        Int?
  cType            String?   @db.VarChar(10)
  sToken           String?   @db.NVarChar(Max)
  sPicture         String?   @db.NVarChar(250)
  sProvince        String?   @db.NVarChar(5)
  sTumbon          String?   @db.NVarChar(5)
  sSoy             String?   @db.NVarChar(50)
  sHomeNumber      String?   @db.NVarChar(100)
  sMuu             String?   @db.NVarChar(50)
  sRoad            String?   @db.NVarChar(50)
  sAumpher         String?   @db.NVarChar(5)
  sPost            String?   @db.NVarChar(10)
  sTitle           String?   @db.NVarChar(10)
  dPicUpdate       DateTime? @db.DateTime
  nPicversion      Int?
  leavecheck       Int?
  nJobid           Int?
  nDepartmentId    Int?
  gradeSystemAdmin Int?
  Village          String?   @db.NVarChar(50)
  Building         String?   @db.NVarChar(50)
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  DailyUsageLimit  Decimal   @db.Decimal(18, 2)
  nMax             Decimal   @db.Decimal(18, 2)
  sNameEng         String?   @db.NVarChar(256)
  sLastNameEng     String?   @db.NVarChar(256)

  @@id([SchoolID, sEmp], map: "PK_TEmployees")
  @@index([cDel, SchoolID], map: "INDEX_VV_100035_100034")
  @@index([cDel, SchoolID], map: "INDEX_VV_10175_10174")
  @@index([cDel, nTimeType, SchoolID], map: "INDEX_VV_102570_102569")
  @@index([cDel, cType, SchoolID], map: "INDEX_VV_107596_107595")
  @@index([cType, SchoolID], map: "INDEX_VV_116071_116070")
  @@index([cDel, nJobid, SchoolID], map: "INDEX_VV_27766_27765")
  @@index([sEmp], map: "INDEX_VV_4_3")
  @@index([cDel, SchoolID], map: "INDEX_VV_42901_42900")
  @@index([sName], map: "INDEX_VV_5222001_5222000")
  @@index([sIdentification, cDel, SchoolID, sEmp], map: "INDEX_VV_5661378_5661377")
  @@index([sName], map: "INDEX_VV_6066175_6066174")
  @@index([cDel, SchoolID], map: "INDEX_VV_63_62")
  @@index([nJobid, SchoolID], map: "INDEX_VV_81363_81362")
  @@index([cDel, SchoolID], map: "INDEX_VV_89977_89976")
  @@index([cDel, SchoolID], map: "INDEX_VV_92468_92467")
  @@index([cDel, cType, SchoolID, sEmp], map: "INDEX_VV_93494_93493")
  @@index([cDel, SchoolID], map: "INDEX_VV_93549_93548")
  @@index([cDel, SchoolID], map: "INDEX_VV_94147_94146")
  @@index([cDel, cType, SchoolID], map: "INDEX_VV_94203_94202")
  @@index([cDel], map: "IX_TEmployees")
  @@index([sName], map: "IX_TEmployees_sEmp_cDEl")
}

model TEmployeesNew {
  sEmp             Int
  sName            String?   @db.NVarChar(256)
  sLastname        String?   @db.NVarChar(256)
  sIdentification  String?   @db.NVarChar(13)
  dBirth           DateTime? @db.DateTime
  cSex             String?   @db.Char(1)
  sPhone           String?   @db.NVarChar(20)
  sEmail           String?   @db.NVarChar(256)
  sPassword        String?   @db.NVarChar(100)
  sSubtopic        String?   @db.NVarChar(512)
  sAddress         String?   @db.NVarChar(512)
  sCity            String?   @db.NVarChar(512)
  sPostalcode      String?   @db.NVarChar(10)
  sCountry         String?   @db.NVarChar(512)
  dUpdate          DateTime? @db.DateTime
  sFinger          String?   @db.NVarChar(Max)
  nMoney           Decimal?  @db.Decimal(18, 2)
  sFinger2         String?   @db.NVarChar(Max)
  sClaim           String?   @db.NVarChar(100)
  cDel             String?   @db.Char(1)
  sStatusReport    String?   @db.NVarChar(20)
  nTimeType        Int?
  cType            String?   @db.VarChar(10)
  sToken           String?   @db.NVarChar(Max)
  sPicture         String?   @db.NVarChar(250)
  sProvince        String?   @db.NVarChar(5)
  sTumbon          String?   @db.NVarChar(5)
  sSoy             String?   @db.NVarChar(50)
  sHomeNumber      String?   @db.NVarChar(50)
  sMuu             String?   @db.NVarChar(50)
  sRoad            String?   @db.NVarChar(50)
  sAumpher         String?   @db.NVarChar(5)
  sPost            String?   @db.NVarChar(10)
  sTitle           String?   @db.NVarChar(10)
  dPicUpdate       DateTime? @db.DateTime
  nPicversion      Int?
  leavecheck       Int?
  nJobid           Int?
  nDepartmentId    Int?
  gradeSystemAdmin Int?
  Village          String?   @db.NVarChar(50)
  Building         String?   @db.NVarChar(50)
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  DailyUsageLimit  Decimal   @db.Decimal(18, 2)
  nMax             Decimal   @db.Decimal(18, 2)

  @@id([SchoolID, sEmp], map: "PK_TEmployeesNew")
}

model TEmployeeType {
  nTypeId     Int       @default(autoincrement())
  nTypeId2    Int?
  Title       String?   @db.NVarChar(150)
  SchoolID    Int
  IsDel       Boolean
  IsActive    Boolean
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  MasterCode  String?   @db.VarChar(20)

  @@id([SchoolID, nTypeId], map: "PK_TEmployeeType")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tempOfflineSales {
  SalesID           String   @db.UniqueIdentifier
  SchoolID          Int
  EmployeeID        Int
  ShopID            Int
  UserID            Int
  cType             String   @db.NVarChar(5)
  SalesAmount       Decimal  @db.Decimal(18, 2)
  SalesDate         DateTime @db.DateTime
  TempCardHistoryID String?  @db.UniqueIdentifier
  TempCardID        String?  @db.UniqueIdentifier
  DeviceID          String?  @db.NVarChar(200)
  Processed         Boolean
  Tstamp            DateTime @db.DateTime
  SalesProductInfo  String?  @db.NVarChar(Max)
  Barcode           String?  @db.NVarChar(350)
  CardID            String?  @db.UniqueIdentifier

  @@ignore
}

model TEmpProfessionalLicense {
  sEmp         Int
  ID           Int
  LicenseType  Int?
  LicenseNo    String?   @db.NVarChar(20)
  LicenseName  String?   @db.NVarChar(100)
  IssuedDate   DateTime? @db.DateTime
  ExpireDate   DateTime? @db.DateTime
  AgencyIssued String?   @db.NVarChar(100)
  UpdateDate   DateTime? @db.DateTime
  UpdateBy     Int?
  SchoolID     Int
  CreatedBy    Int?
  CreatedDate  DateTime? @db.DateTime
  cDel         Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPPROFESSIONALLICENSE")
  @@index([sEmp, cDel], map: "IX_TEmpProfessionalLicense_sEmp_cDel")
}

model TEmpSalary {
  sEmp                  Int
  ID                    Int
  WorkStatus            Int?
  WorkInEducationDate   DateTime? @db.DateTime
  Salary                Decimal?  @db.Decimal(8, 2)
  PositionMoney         Decimal?  @db.Decimal(8, 2)
  RetirementDate        DateTime? @db.DateTime
  RemainGovernmentYear  Int?
  RemainGovernmentMonth Int?
  RemainGovernmentDay   Int?
  Degree                String?   @db.NVarChar(100)
  GovernmentOrderDate   DateTime? @db.DateTime
  WorkStartDate         DateTime? @db.DateTime
  AcademicStandingMoney Decimal?  @db.Decimal(8, 2)
  NetSalary             Decimal?  @db.Decimal(8, 2)
  SchoolID              Int
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime
  cDel                  Boolean
  DayQuit               DateTime? @db.Date

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPSALARY")
  @@index([WorkStatus, SchoolID], map: "INDEX_VV_145730_145729")
  @@index([sEmp], map: "INDEX_VV_146515_146514")
}

model TEmpSigner {
  SignerID  Int       @default(autoincrement())
  SchoolID  Int
  TermID    String?   @db.VarChar(20)
  Position  String?   @db.NVarChar(250)
  DefaultID Int?
  EmpID     Int?
  Signer    String?   @db.NVarChar(250)
  IsDefault Boolean?
  IsDel     Boolean?
  IsActive  Boolean?
  Created   DateTime? @db.DateTime
  Modified  DateTime? @db.DateTime
  CreateBy  Int?
  ModifyBy  Int?

  @@id([SignerID, SchoolID], map: "PK_TEmpSigner")
  @@index([SchoolID, IsDel], map: "INDEX_VV_102695_102694")
}

model TEmpTeaching {
  sEmp              Int
  ID                Int
  nYear             Int?
  nTerm             String?   @db.NVarChar(20)
  courseTypeId      Int?
  SUBJECT_ID        Int?
  sClassID          String?   @db.NVarChar(10)
  sRoomID           String?   @db.NVarChar(10)
  HoursPerWeek      Int?
  DirectTeaching    Int?
  CompetentTeaching Int?
  WantTrain         Int?
  UpdateDate        DateTime? @db.DateTime
  UpdateBy          Int?
  SchoolID          Int
  CreatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPTEACHING")
}

model TEmpTOEIC {
  sEmp                    Int
  ID                      Int
  TOEICScore              Int?
  InstitutionAnnouncement String?   @db.VarChar(300)
  ExpirationDate          DateTime? @db.DateTime
  SchoolID                Int
  CreatedBy               Int?
  CreatedDate             DateTime? @db.DateTime
  UpdateBy                Int?
  UpdateDate              DateTime? @db.DateTime
  cDel                    Boolean

  @@id([sEmp, ID, SchoolID], map: "PK_TEmpTOEIC")
}

model TEmpTraining {
  sEmp          Int
  ID            Int
  ProjectName   String?   @db.NVarChar(100)
  TrainingName  String?   @db.NVarChar(100)
  StartDate     DateTime? @db.DateTime
  EndDate       DateTime? @db.DateTime
  Place         String?   @db.NVarChar(100)
  ProvinceID    Int?
  Country       String?   @db.NVarChar(100)
  Expenses      Decimal?  @db.Decimal(6, 2)
  UpdateDate    DateTime? @db.DateTime
  UpdateBy      Int?
  Province      String?   @db.NVarChar(100)
  SchoolID      Int
  CreatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  cDel          Boolean
  TrainingType  String?   @db.VarChar(2)
  TrainingHours Decimal?  @db.Decimal(6, 2)

  @@id([SchoolID, sEmp, ID], map: "PK_TEMPTRAINING")
  @@index([sEmp, cDel], map: "IDX_M_53_52")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TErrorImages {
  ID           Int       @default(autoincrement())
  nSchoolID    Int?
  nExamID      Int?
  strStudentID String?   @db.VarChar(128)
  strImageUrl  String?   @db.VarChar(256)
  CreatedDate  DateTime? @db.DateTime

  @@ignore
}

model TExam {
  ExamID            Int       @default(autoincrement())
  nTerm             String    @db.VarChar(20)
  SchoolID          Int
  sPlaneID          Int
  nTermSubLevel2    Int?
  NameExam          String?   @db.NVarChar(500)
  PassScore         Float?
  ScoreProportion   Int?
  TypePaper         String?   @db.NVarChar(250)
  TypeExam          String?   @db.NVarChar(250)
  TestKey           String?   @db.NVarChar(Max)
  nYear             Int?
  CourseGroupId     Int?
  nTSubLevel        Int?
  sCreaterName      String?   @db.NVarChar(100)
  sExamIDLabel      String?   @db.NVarChar(50)
  sTermSubLevel2IDs String?   @db.NVarChar(200)
  nTemplateType     Int?
  CreateBy          Int?
  ModifyBy          Int?
  Created           DateTime? @db.DateTime
  Modified          DateTime? @db.DateTime
  sAdminCreater     String?   @db.NVarChar(256)
  sAdminModifier    String?   @db.NVarChar(256)

  @@id([ExamID, SchoolID], map: "PK_TExam")
  @@index([nTSubLevel, nTerm], map: "INDEX_VV_27974_27973")
  @@index([nTerm], map: "INDEX_VV_5668089_5668088")
  @@index([SchoolID, TypeExam, nTSubLevel], map: "INDEX_VV_57752_57751")
  @@index([sPlaneID], map: "INDEX_VV_585_584")
  @@index([nTerm], map: "INDEX_VV_5943329_5943328")
  @@index([nTerm], map: "INDEX_VV_63324_63323")
  @@index([nTSubLevel], map: "IX_TExam_nTSubLevel")
}

model TExamAnswer {
  AnswerID  Int     @default(autoincrement())
  ExamID    Int
  SchoolID  Int
  RangeID   Int
  AnswerNo  Int
  No        Int?    @db.SmallInt
  Answer    String? @db.NChar(1)
  Score     Float?
  Indicator String? @db.NVarChar(Max)

  @@id([AnswerID, SchoolID], map: "PK_TExamAnswer")
}

model TExamRange {
  RangeID  Int       @default(autoincrement())
  ExamID   Int
  SchoolID Int
  RangeNo  Int
  FromNo   Int?      @db.SmallInt
  ToNo     Int?      @db.SmallInt
  Score    Float?
  CreateBy Int?
  ModifyBy Int?
  Created  DateTime? @db.DateTime
  Modified DateTime? @db.DateTime

  @@id([RangeID, SchoolID], map: "PK_TExamRange")
}

model TExamResult {
  id           Int     @id(map: "PK_TExamResult") @default(autoincrement())
  testCode     Int
  teacherId    Int
  studentId    String  @db.NVarChar(10)
  testKey      String  @db.NVarChar(10)
  answers      String  @db.NVarChar(Max)
  testDate     String? @db.NVarChar(50)
  schoolID     Int?
  testDateUTC  String? @db.NVarChar(50)
  fullScore    Int?
  studentScore Int?
  testImage64  String? @db.NVarChar(Max)

  @@index([testCode], map: "INDEX_VV_4965776_4965775")
  @@index([fullScore], map: "INDEX_VV_59345_59344")
  @@index([testCode], map: "IX_TExamResult_schoolID")
  @@index([testCode, studentId, schoolID], map: "IX_TExamResult_studentId_schoolID")
  @@index([studentId], map: "IX_TExamResult_testCode")
  @@index([testCode, schoolID], map: "IX_TExamResult_testCode_schoolID")
  @@index([testCode, studentId], map: "IX_TExamResult_testCode_studentId")
  @@index([teacherId], map: "IX_VV_TExamResult_testCode")
  @@index([testCode, schoolID], map: "TExamResult_SchoolID")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TExamResultCopy {
  id           Int
  testCode     Int
  teacherId    Int
  studentId    String  @db.NVarChar(10)
  testKey      String  @db.NVarChar(10)
  answers      String  @db.NVarChar(Max)
  testDate     String? @db.NVarChar(50)
  schoolID     Int?
  testDateUTC  String? @db.NVarChar(50)
  fullScore    Int?
  studentScore Int?
  testImage64  String? @db.NVarChar(Max)

  @@ignore
}

model TFaceScanLog {
  LogID       Int       @default(autoincrement())
  sID         Int
  SchoolID    Int
  LogTime     DateTime? @db.DateTime
  Temperature Float?
  FaceScanUrl String?   @db.VarChar(300)
  IsOnline    Boolean?

  @@id([LogID, sID, SchoolID], map: "PK_FaceScanLog")
  @@index([SchoolID], map: "INDEX_VV_12814_12813")
  @@index([Temperature], map: "INDEX_VV_144942_144941")
  @@index([sID, SchoolID], map: "TFaceScanLog_sid_schoolid")
}

model TFamilyProfile {
  sFamilyTitle              String?   @db.NVarChar(50)
  sFamilyName               String?   @db.NVarChar(50)
  sFamilyLast               String?   @db.NVarChar(50)
  sFamilyRace               String?   @db.NVarChar(50)
  sFamilyNation             String?   @db.NVarChar(50)
  sFamilyReligion           String?   @db.NVarChar(50)
  sFamilyIdCardNumber       String?   @db.NVarChar(20)
  sFamilyRelate             String?   @db.NVarChar(20)
  sFamilyHomeNumber         String?   @db.NVarChar(50)
  sFamilySoy                String?   @db.NVarChar(50)
  sFamilyTumbon             String?   @db.NVarChar(50)
  sFamilyProvince           String?   @db.NVarChar(50)
  sFamilyMuu                String?   @db.NVarChar(50)
  sFamilyRoad               String?   @db.NVarChar(50)
  sFamilyAumpher            String?   @db.NVarChar(50)
  sFamilyPost               String?   @db.NVarChar(50)
  sPhoneOne                 String?   @db.NVarChar(30)
  sPhoneTwo                 String?   @db.NVarChar(30)
  sPhoneThree               String?   @db.NVarChar(30)
  sPhoneMail                String?   @db.NVarChar(50)
  sID                       Int?
  sDeleted                  String?   @db.NVarChar(10)
  sFatherTitle              String?   @db.NVarChar(50)
  sFatherFirstName          String?   @db.NVarChar(50)
  sFatherLastName           String?   @db.NVarChar(50)
  sFatherNation             String?   @db.NVarChar(50)
  sFatherRace               String?   @db.NVarChar(50)
  sFatherReligion           String?   @db.NVarChar(50)
  sFatherIdCardNumber       String?   @db.NVarChar(50)
  sMotherTitle              String?   @db.NVarChar(50)
  sMotherFirstName          String?   @db.NVarChar(50)
  sMotherLastName           String?   @db.NVarChar(50)
  sMotherNation             String?   @db.NVarChar(50)
  sMotherRace               String?   @db.NVarChar(50)
  sMotherReligion           String?   @db.NVarChar(50)
  sMotherIdCardNumber       String?   @db.NVarChar(50)
  sMotherTumbon             String?   @db.NVarChar(50)
  sMotherSoy                String?   @db.NVarChar(50)
  sMotherRoad               String?   @db.NVarChar(50)
  sMotherProvince           String?   @db.NVarChar(50)
  sMotherPost               String?   @db.NVarChar(50)
  sMotherPhone              String?   @db.NVarChar(50)
  sMotherMuu                String?   @db.NVarChar(50)
  sMotherHomeNumber         String?   @db.NVarChar(50)
  sMotherAumpher            String?   @db.NVarChar(50)
  sFatherTumbon             String?   @db.NVarChar(50)
  sFatherSoy                String?   @db.NVarChar(50)
  sFatherRoad               String?   @db.NVarChar(50)
  sFatherProvince           String?   @db.NVarChar(50)
  sFatherPost               String?   @db.NVarChar(50)
  sFatherPhone              String?   @db.NVarChar(50)
  sFatherMuu                String?   @db.NVarChar(50)
  sFatherHomeNumber         String?   @db.NVarChar(50)
  sFatherAumpher            String?   @db.NVarChar(50)
  nFamilyID                 Int       @default(autoincrement())
  sFamilyNameEN             String?   @db.NVarChar(50)
  sFamilyLastEN             String?   @db.NVarChar(50)
  dFamilyBirthDay           DateTime? @db.DateTime
  nFamilyRequestStudyMoney  Int?
  sFamilyGraduated          Int?
  sFamilyJob                String?   @db.NVarChar(200)
  sFamilyWorkPlace          String?   @db.NVarChar(200)
  nFamilyIncome             Float?
  sFatherNameEN             String?   @db.NVarChar(100)
  sFatherLastEN             String?   @db.NVarChar(100)
  dFatherBirthDay           DateTime? @db.DateTime
  sFatherGraduated          Int?
  sFatherJob                String?   @db.NVarChar(100)
  sFatherWorkPlace          String?   @db.NVarChar(200)
  sFatherPhone2             String?   @db.NVarChar(20)
  sFatherPhone3             String?   @db.NVarChar(20)
  nFatherIncome             Float?
  sMotherNameEN             String?   @db.NVarChar(100)
  sMotherLastEN             String?   @db.NVarChar(100)
  dMotherBirthDay           DateTime? @db.DateTime
  sMotherGraduated          Int?
  sMotherJob                String?   @db.NVarChar(100)
  sMotherWorkPlace          String?   @db.NVarChar(200)
  sMotherPhone2             String?   @db.NVarChar(20)
  sMotherPhone3             String?   @db.NVarChar(20)
  nMotherIncome             Float?
  nSonTotal                 Int?
  nRelativeStudyHere        Int?
  stayWithTitle             Int?
  stayWithName              String?   @db.NVarChar(100)
  stayWithLast              String?   @db.NVarChar(100)
  stayWithEmergencyCall     String?   @db.NVarChar(20)
  stayWithEmail             String?   @db.NVarChar(100)
  HomeType                  Int?
  friendSID                 Int?
  houseRegistrationNumber   String?   @db.NVarChar(100)
  houseRegistrationMuu      String?   @db.NVarChar(100)
  houseRegistrationSoy      String?   @db.NVarChar(100)
  houseRegistrationRoad     String?   @db.NVarChar(100)
  houseRegistrationProvince Int?
  houseRegistrationAumpher  Int?
  houseRegistrationTumbon   Int?
  houseRegistrationPost     String?   @db.NVarChar(20)
  houseRegistrationPhone    String?   @db.NVarChar(20)
  bornFrom                  String?   @db.NVarChar(100)
  bornFromProvince          Int?
  bornFromAumpher           Int?
  bornFromTumbon            Int?
  friendName                String?   @db.NVarChar(50)
  friendLastName            String?   @db.NVarChar(50)
  friendSubLevel            Int?
  friendPhone               String?   @db.NVarChar(30)
  familyStatus              Int?
  SchoolID                  Int
  CreatedBy                 Int?
  UpdatedBy                 Int?
  CreatedDate               DateTime? @db.DateTime
  UpdatedDate               DateTime? @db.DateTime
  cDel                      Boolean

  @@id([SchoolID, nFamilyID], map: "PK_TFamilyProfile")
  @@index([nFamilyID], map: "IDX_M_580_579")
  @@index([sID, SchoolID], map: "INDEX_VV_8468_8467")
}

model TGradeAttendance {
  nGradeAttendanceId Int       @default(autoincrement())
  nGradeId           Int
  sID                Int
  week1_1            String?   @db.NVarChar(1)
  week1_2            String?   @db.NVarChar(1)
  week1_3            String?   @db.NVarChar(1)
  week1_4            String?   @db.NVarChar(1)
  week1_5            String?   @db.NVarChar(1)
  week1_6            String?   @db.NVarChar(1)
  week1_7            String?   @db.NVarChar(1)
  week2_1            String?   @db.NVarChar(1)
  week2_2            String?   @db.NVarChar(1)
  week2_3            String?   @db.NVarChar(1)
  week2_4            String?   @db.NVarChar(1)
  week2_5            String?   @db.NVarChar(1)
  week2_6            String?   @db.NVarChar(1)
  week2_7            String?   @db.NVarChar(1)
  week3_1            String?   @db.NVarChar(1)
  week3_2            String?   @db.NVarChar(1)
  week3_3            String?   @db.NVarChar(1)
  week3_4            String?   @db.NVarChar(1)
  week3_5            String?   @db.NVarChar(1)
  week3_6            String?   @db.NVarChar(1)
  week3_7            String?   @db.NVarChar(1)
  week4_1            String?   @db.NVarChar(1)
  week4_2            String?   @db.NVarChar(1)
  week4_3            String?   @db.NVarChar(1)
  week4_4            String?   @db.NVarChar(1)
  week4_5            String?   @db.NVarChar(1)
  week4_6            String?   @db.NVarChar(1)
  week4_7            String?   @db.NVarChar(1)
  week5_1            String?   @db.NVarChar(1)
  week5_2            String?   @db.NVarChar(1)
  week5_3            String?   @db.NVarChar(1)
  week5_4            String?   @db.NVarChar(1)
  week5_5            String?   @db.NVarChar(1)
  week5_6            String?   @db.NVarChar(1)
  week5_7            String?   @db.NVarChar(1)
  week6_1            String?   @db.NVarChar(1)
  week6_2            String?   @db.NVarChar(1)
  week6_3            String?   @db.NVarChar(1)
  week6_4            String?   @db.NVarChar(1)
  week6_5            String?   @db.NVarChar(1)
  week6_6            String?   @db.NVarChar(1)
  week6_7            String?   @db.NVarChar(1)
  week7_1            String?   @db.NVarChar(1)
  week7_2            String?   @db.NVarChar(1)
  week7_3            String?   @db.NVarChar(1)
  week7_4            String?   @db.NVarChar(1)
  week7_5            String?   @db.NVarChar(1)
  week7_6            String?   @db.NVarChar(1)
  week7_7            String?   @db.NVarChar(1)
  week8_1            String?   @db.NVarChar(1)
  week8_2            String?   @db.NVarChar(1)
  week8_3            String?   @db.NVarChar(1)
  week8_4            String?   @db.NVarChar(1)
  week8_5            String?   @db.NVarChar(1)
  week8_6            String?   @db.NVarChar(1)
  week8_7            String?   @db.NVarChar(1)
  week9_1            String?   @db.NVarChar(1)
  week9_2            String?   @db.NVarChar(1)
  week9_3            String?   @db.NVarChar(1)
  week9_4            String?   @db.NVarChar(1)
  week9_5            String?   @db.NVarChar(1)
  week9_6            String?   @db.NVarChar(1)
  week9_7            String?   @db.NVarChar(1)
  week10_1           String?   @db.NVarChar(1)
  week10_2           String?   @db.NVarChar(1)
  week10_3           String?   @db.NVarChar(1)
  week10_4           String?   @db.NVarChar(1)
  week10_5           String?   @db.NVarChar(1)
  week10_6           String?   @db.NVarChar(1)
  week10_7           String?   @db.NVarChar(1)
  week11_1           String?   @db.NVarChar(1)
  week11_2           String?   @db.NVarChar(1)
  week11_3           String?   @db.NVarChar(1)
  week11_4           String?   @db.NVarChar(1)
  week11_5           String?   @db.NVarChar(1)
  week11_6           String?   @db.NVarChar(1)
  week11_7           String?   @db.NVarChar(1)
  week12_1           String?   @db.NVarChar(1)
  week12_2           String?   @db.NVarChar(1)
  week12_3           String?   @db.NVarChar(1)
  week12_4           String?   @db.NVarChar(1)
  week12_5           String?   @db.NVarChar(1)
  week12_6           String?   @db.NVarChar(1)
  week12_7           String?   @db.NVarChar(1)
  week13_1           String?   @db.NVarChar(1)
  week13_2           String?   @db.NVarChar(1)
  week13_3           String?   @db.NVarChar(1)
  week13_4           String?   @db.NVarChar(1)
  week13_5           String?   @db.NVarChar(1)
  week13_6           String?   @db.NVarChar(1)
  week13_7           String?   @db.NVarChar(1)
  week14_1           String?   @db.NVarChar(1)
  week14_2           String?   @db.NVarChar(1)
  week14_3           String?   @db.NVarChar(1)
  week14_4           String?   @db.NVarChar(1)
  week14_5           String?   @db.NVarChar(1)
  week14_6           String?   @db.NVarChar(1)
  week14_7           String?   @db.NVarChar(1)
  week15_1           String?   @db.NVarChar(1)
  week15_2           String?   @db.NVarChar(1)
  week15_3           String?   @db.NVarChar(1)
  week15_4           String?   @db.NVarChar(1)
  week15_5           String?   @db.NVarChar(1)
  week15_6           String?   @db.NVarChar(1)
  week15_7           String?   @db.NVarChar(1)
  week16_1           String?   @db.NVarChar(1)
  week16_2           String?   @db.NVarChar(1)
  week16_3           String?   @db.NVarChar(1)
  week16_4           String?   @db.NVarChar(1)
  week16_5           String?   @db.NVarChar(1)
  week16_6           String?   @db.NVarChar(1)
  week16_7           String?   @db.NVarChar(1)
  week17_1           String?   @db.NVarChar(1)
  week17_2           String?   @db.NVarChar(1)
  week17_3           String?   @db.NVarChar(1)
  week17_4           String?   @db.NVarChar(1)
  week17_5           String?   @db.NVarChar(1)
  week17_6           String?   @db.NVarChar(1)
  week17_7           String?   @db.NVarChar(1)
  week18_1           String?   @db.NVarChar(1)
  week18_2           String?   @db.NVarChar(1)
  week18_3           String?   @db.NVarChar(1)
  week18_4           String?   @db.NVarChar(1)
  week18_5           String?   @db.NVarChar(1)
  week18_6           String?   @db.NVarChar(1)
  week18_7           String?   @db.NVarChar(1)
  week19_1           String?   @db.NVarChar(1)
  week19_2           String?   @db.NVarChar(1)
  week19_3           String?   @db.NVarChar(1)
  week19_4           String?   @db.NVarChar(1)
  week19_5           String?   @db.NVarChar(1)
  week19_6           String?   @db.NVarChar(1)
  week19_7           String?   @db.NVarChar(1)
  week20_1           String?   @db.NVarChar(1)
  week20_2           String?   @db.NVarChar(1)
  week20_3           String?   @db.NVarChar(1)
  week20_4           String?   @db.NVarChar(1)
  week20_5           String?   @db.NVarChar(1)
  week20_6           String?   @db.NVarChar(1)
  week20_7           String?   @db.NVarChar(1)
  totalcome          String?   @db.NVarChar(3)
  totalskip          String?   @db.NVarChar(3)
  totalsick          String?   @db.NVarChar(3)
  totalleave         String?   @db.NVarChar(3)
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, nGradeAttendanceId], map: "PK_TGradeAttendance")
  @@index([nGradeId, sID], map: "IX_TGradeAttendance")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TGradeAuditLogSummary {
  SchoolID     Int?
  NoOfRecord   Int?
  BusinessDate DateTime? @db.DateTime
  MethodName   String?   @db.NVarChar(50)

  @@ignore
}

model TGradeCheck {
  nGradeCheckId Int       @default(autoincrement())
  teacherId     Int?
  PlanId        Int?
  Deleted       String?   @db.NVarChar(10)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean

  @@id([SchoolID, nGradeCheckId], map: "PK_TGradeCheck")
}

model TGradeLock {
  nGradeLock      Int       @default(autoincrement())
  nGradeId        Int
  scoreGrade1     Int?
  scoreGrade2     Int?
  scoreGrade3     Int?
  scoreGrade4     Int?
  scoreGrade5     Int?
  scoreGrade6     Int?
  scoreGrade7     Int?
  scoreGrade8     Int?
  scoreGrade9     Int?
  scoreGrade10    Int?
  scoreGrade11    Int?
  scoreGrade12    Int?
  scoreGrade13    Int?
  scoreGrade14    Int?
  scoreGrade15    Int?
  scoreGrade16    Int?
  scoreGrade17    Int?
  scoreGrade18    Int?
  scoreGrade19    Int?
  scoreGrade20    Int?
  scoreBehavior1  Int?
  scoreBehavior2  Int?
  scoreBehavior3  Int?
  scoreBehavior4  Int?
  scoreBehavior5  Int?
  scoreBehavior6  Int?
  scoreBehavior7  Int?
  scoreBehavior8  Int?
  scoreBehavior9  Int?
  scoreBehavior10 Int?
  scoreMidTerm    Int?
  scoreFinalTerm  Int?
  scoreCheewat1   Int?
  scoreCheewat2   Int?
  scoreCheewat3   Int?
  scoreCheewat4   Int?
  scoreCheewat5   Int?
  scoreCheewat6   Int?
  scoreCheewat7   Int?
  scoreCheewat8   Int?
  scoreCheewat9   Int?
  scoreCheewat10  Int?
  scoreCheewat11  Int?
  scoreCheewat12  Int?
  scoreCheewat13  Int?
  scoreCheewat14  Int?
  scoreCheewat15  Int?
  scoreCheewat16  Int?
  scoreCheewat17  Int?
  scoreCheewat18  Int?
  scoreCheewat19  Int?
  scoreCheewat20  Int?
  scoreMid1       Int?
  scoreMid2       Int?
  scoreMid3       Int?
  scoreMid4       Int?
  scoreMid5       Int?
  scoreMid6       Int?
  scoreMid7       Int?
  scoreMid8       Int?
  scoreMid9       Int?
  scoreMid10      Int?
  scoreFinal1     Int?
  scoreFinal2     Int?
  scoreFinal3     Int?
  scoreFinal4     Int?
  scoreFinal5     Int?
  scoreFinal6     Int?
  scoreFinal7     Int?
  scoreFinal8     Int?
  scoreFinal9     Int?
  scoreFinal10    Int?
  lastUpdate      DateTime  @db.DateTime
  updateByEMP     Int
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, nGradeLock], map: "PK_TGradeLock")
}

model TGradeMigration {
  GradeMigrationId Int       @default(autoincrement())
  nGradeId         Int
  sID              Int
  AssessmentId     Int
  ExamID           Int
  nTermSubLevel2   Int
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean
  ApplicationName  String?   @db.NVarChar(30)

  @@id([SchoolID, GradeMigrationId], map: "PK_TGradeMigration")
  @@index([nGradeId, nTermSubLevel2, SchoolID, ApplicationName, ExamID], map: "INDEX_VV_67778_67777")
  @@index([sID, AssessmentId, ExamID, nTermSubLevel2, SchoolID], map: "INDEX_VV_89364_89363")
  @@index([nTermSubLevel2, SchoolID, cDel], map: "INDEX_VV_94813_94812")
  @@index([ExamID], map: "IX_TGradeMigration_nTermSubLevel2_SchoolID_cDel")
}

model TGradeRegisterPeriod {
  nGradeRegisterPeriod Int       @default(autoincrement())
  nTerm                String    @db.NVarChar(20)
  beforeMidtermStart   DateTime? @db.DateTime
  beforeMidtermEnd     DateTime? @db.DateTime
  duringMidtermStart   DateTime? @db.DateTime
  duringMidtermEnd     DateTime? @db.DateTime
  afterMidtermStart    DateTime? @db.DateTime
  afterMidtermEnd      DateTime? @db.DateTime
  FinaltermStart       DateTime? @db.DateTime
  FinaltermEnd         DateTime? @db.DateTime
  ExtraStart           DateTime? @db.DateTime
  ExtraEnd             DateTime? @db.DateTime
  lastUpdate           DateTime  @db.DateTime
  updateByEmp          Int
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, nGradeRegisterPeriod], map: "PK_TGradeRegisterPeriod")
}

model TGradeShareInfo {
  nGradeShareInfoId Int       @default(autoincrement())
  nTerm             String    @db.NVarChar(20)
  sPlaneID          Int
  from_nTSubLevel2  Int
  to_nTSubLevel2    Int
  cDel              Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime

  @@id([SchoolID, nGradeShareInfoId], map: "PK_TGradeShareInfo")
}

model TGradeTeacherDescribe {
  nGradeTeacherDescribe Int       @default(autoincrement())
  Describe              String?   @db.NVarChar(500)
  cDel                  Int?
  SchoolID              Int
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime

  @@id([SchoolID, nGradeTeacherDescribe], map: "PK_TGradeTeacherDescribe")
}

model TGradeViewRoomListSetting {
  RoomListSettingId  Int       @default(autoincrement())
  GradeViewSettingId Int
  nTermSubLevel2     Int?
  ApprovedDate       DateTime? @db.DateTime
  ApprovedBy         Int?
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  SchoolID           Int
  cDel               Boolean
  IsRoomBlocked      Boolean?

  @@id([SchoolID, RoomListSettingId], map: "PK_TGradeViewRoomListSetting")
  @@index([IsRoomBlocked, GradeViewSettingId, nTermSubLevel2], map: "INDEX_VV_5206679_5206678")
}

model TGradeViewSetting {
  GradeViewSettingId  Int       @id(map: "PK_TGradeViewSetting") @default(autoincrement())
  nTerm               String    @db.NVarChar(20)
  IsTermApproved      Boolean?
  IsAllRoomApproved   Boolean?
  SchoolId            Int
  ApprovedDate        DateTime? @db.DateTime
  ApprovedBy          Int?
  UpdatedDate         DateTime? @db.DateTime
  UpdatedBy           Int?
  CreatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  cDel                Boolean
  GradeViewFor100     Boolean
  IsMidTermApproved   Boolean
  IsFinalTermApproved Boolean

  @@index([SchoolId, nTerm, ApprovedBy, IsTermApproved], map: "IX_TGradeViewSetting")
}

model TGradeViewStudentBlockListSetting {
  StudentBlockListSettingId Int       @id(map: "PK_TGradeViewStudentBlockListSetting") @default(autoincrement())
  GradeViewSettingId        Int
  sID                       Int
  BlockedDate               DateTime? @db.DateTime
  BlockedBy                 Int?
  CreatedBy                 Int?
  UpdatedBy                 Int?
  CreatedDate               DateTime? @db.DateTime
  UpdatedDate               DateTime? @db.DateTime
  cDel                      Boolean
  IsStudentBlocked          Boolean?
  SchoolID                  Int

  @@index([GradeViewSettingId, SchoolID], map: "INDEX_VV_33943_33942")
  @@index([sID], map: "IX_TGradeViewStudentBlockListSetting_GradeViewSettingId_SchoolID")
}

model TGroupExam {
  GroupExamID   Int       @default(autoincrement())
  GroupExamName String?   @db.NVarChar(50)
  nGradeId      Int?
  UserCreate    Int?
  DateCreate    DateTime? @db.DateTime
  cDel          Int?
  UserUpdate    Int?
  DateUpdate    DateTime? @db.DateTime
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime

  @@id([SchoolID, GroupExamID], map: "PK_TGroupExam")
}

model TGroupExamDetail {
  IDColGroup      Int       @default(autoincrement())
  GroupExamID     Int?
  GradeColumnName String?   @db.NVarChar(20)
  UserUpdate      Int?
  DateUpdate      DateTime? @db.DateTime
  status          Int?
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, IDColGroup], map: "PK_TGroupExamDetail")
}

model THealtProfile {
  nWeight     Float?
  nHeight     Float?
  sBlood      String?   @db.NVarChar(255)
  sSickFood   String?   @db.NVarChar(255)
  sSickDrug   String?   @db.NVarChar(255)
  sSickOther  String?   @db.NVarChar(255)
  sSickNormal String?   @db.NVarChar(255)
  sSickDanger String?   @db.NVarChar(255)
  sID         Int?
  sDeleted    String?   @db.NVarChar(10)
  Weight1_1   String?   @db.NVarChar(10)
  Weight1_2   String?   @db.NVarChar(10)
  Weight1_3   String?   @db.NVarChar(10)
  Weight1_4   String?   @db.NVarChar(10)
  Weight2_1   String?   @db.NVarChar(10)
  Weight2_2   String?   @db.NVarChar(10)
  Weight2_3   String?   @db.NVarChar(10)
  Weight2_4   String?   @db.NVarChar(10)
  Weight3_1   String?   @db.NVarChar(10)
  Weight3_2   String?   @db.NVarChar(10)
  Weight3_3   String?   @db.NVarChar(10)
  Weight3_4   String?   @db.NVarChar(10)
  Weight4_1   String?   @db.NVarChar(10)
  Weight4_2   String?   @db.NVarChar(10)
  Weight4_3   String?   @db.NVarChar(10)
  Weight4_4   String?   @db.NVarChar(10)
  Weight5_1   String?   @db.NVarChar(10)
  Weight5_2   String?   @db.NVarChar(10)
  Weight5_3   String?   @db.NVarChar(10)
  Weight5_4   String?   @db.NVarChar(10)
  Weight6_1   String?   @db.NVarChar(10)
  Weight6_2   String?   @db.NVarChar(10)
  Weight6_3   String?   @db.NVarChar(10)
  Weight6_4   String?   @db.NVarChar(10)
  Height1_1   String?   @db.NVarChar(10)
  Height1_2   String?   @db.NVarChar(10)
  Height1_3   String?   @db.NVarChar(10)
  Height1_4   String?   @db.NVarChar(10)
  Height2_1   String?   @db.NVarChar(10)
  Height2_2   String?   @db.NVarChar(10)
  Height2_3   String?   @db.NVarChar(10)
  Height2_4   String?   @db.NVarChar(10)
  Height3_1   String?   @db.NVarChar(10)
  Height3_2   String?   @db.NVarChar(10)
  Height3_3   String?   @db.NVarChar(10)
  Height3_4   String?   @db.NVarChar(10)
  Height4_1   String?   @db.NVarChar(10)
  Height4_2   String?   @db.NVarChar(10)
  Height4_3   String?   @db.NVarChar(10)
  Height4_4   String?   @db.NVarChar(10)
  Height5_1   String?   @db.NVarChar(10)
  Height5_2   String?   @db.NVarChar(10)
  Height5_3   String?   @db.NVarChar(10)
  Height5_4   String?   @db.NVarChar(10)
  Height6_1   String?   @db.NVarChar(10)
  Height6_2   String?   @db.NVarChar(10)
  Height6_3   String?   @db.NVarChar(10)
  Height6_4   String?   @db.NVarChar(10)
  nHealthID   Int       @default(autoincrement())
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nHealthID], map: "PK_THealtProfile")
}

model THistoryLog {
  ID           Int       @id(map: "PK_THistoryLog") @default(autoincrement())
  SchoolID     Int?
  Date         DateTime? @db.DateTime
  MenuID       Int?
  FunctionName String?   @db.VarChar(100)
  sID          Int?
  sEmp         Int?
  UpdateBy     Int?
  JsonDetail   String?   @db.VarChar(Max)
}

model THoliday {
  nHoliday      String    @db.NVarChar(10)
  sEmp          Int?
  sHoliday      String?   @db.NVarChar(250)
  sHolidayEN    String?   @db.NVarChar(250)
  TimeType      Int?      @db.TinyInt
  sHolidayType  String?   @db.Char(1)
  dHolidayStart DateTime? @db.DateTime
  dHolidayEnd   DateTime? @db.DateTime
  cDel          String?   @db.Char(1)
  sHolidayAll   String?   @db.Char(1)
  sWhoSeeThis   String?   @db.NVarChar(1)
  sColor        Int?
  sGroupTarget  String?   @db.NVarChar(1)
  cStatusActive Boolean?
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime

  @@id([SchoolID, nHoliday], map: "PK_THoliday")
  @@index([sHolidayType, cDel, sWhoSeeThis, SchoolID, dHolidayStart, dHolidayEnd], map: "IDX_M_7685_7684")
  @@index([SchoolID, dHolidayStart, dHolidayEnd], map: "INDEX_VV_100020_100019")
  @@index([sHolidayType, SchoolID], map: "INDEX_VV_121211_121210")
  @@index([cDel, SchoolID], map: "INDEX_VV_20402_20401")
  @@index([sEmp], map: "INDEX_VV_6064094_6064093")
  @@index([cDel, SchoolID, sWhoSeeThis], map: "INDEX_VV_84783_84782")
  @@index([SchoolID, sWhoSeeThis], map: "INDEX_VV_94490_94489")
  @@index([cDel, SchoolID], map: "INDEX_VV_96813_96812")
}

model THolidayLog {
  LogID     Int       @id(map: "PK_THolidayLog") @default(autoincrement())
  SchoolID  Int?
  Detail    String?   @db.NVarChar(Max)
  Creator   Int?
  Created   DateTime? @db.DateTime
  HolidayID String?   @db.NVarChar(15)

  @@index([SchoolID], map: "INDEX_VV_110515_110514")
}

model THolidaySome {
  nHolidaySomeID String    @db.NVarChar(50)
  nHoliday       String?   @db.NVarChar(50)
  nTSubLevel     Int?
  nTimeType      Int?
  Deleted        Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, nHolidaySomeID], map: "PK_THolidaySome")
  @@index([Deleted, SchoolID], map: "INDEX_VV_104589_104588")
  @@index([Deleted, SchoolID], map: "INDEX_VV_110603_110602")
  @@index([nHoliday], map: "INDEX_VV_6066208_6066207")
  @@index([nHoliday], map: "IX_THolidaySome_Deleted_SchoolID")
  @@index([nTSubLevel, SchoolID], map: "IX_THolidaySome_nTSubLevel_SchoolID")
}

model THomeVisit {
  ID                                 Int       @default(autoincrement())
  SchoolID                           Int
  RoomID                             Int
  StudentID                          Int
  TermID                             String    @db.VarChar(20)
  YearID                             Int?
  LINE                               String?   @db.VarChar(100)
  Facebook                           String?   @db.VarChar(200)
  Status                             Int?
  HaveParents                        Boolean?
  Relationship                       Int?
  RelationshipOther                  String?   @db.VarChar(100)
  Fullname                           String?   @db.VarChar(100)
  PhoneNumber                        String?   @db.VarChar(50)
  IDCardNumber                       String?   @db.VarChar(50)
  Occupation                         Int?
  OccupationOther                    String?   @db.VarChar(100)
  HighestEducation                   Int?
  WelfareRegistersPoor               Boolean?
  ResidentialHouse                   Int?
  DormitoryLivingWith                String?   @db.VarChar(100)
  ResidentialHouseOther              String?   @db.VarChar(100)
  OwnHome                            Int?
  Cleanliness                        Int?
  CleanlinessOther                   String?   @db.VarChar(100)
  UtilitiesElectricity               Int?
  WaterForConsumption                Int?
  Toilet                             Int?
  LivingEnvironment                  String?   @db.VarChar(300)
  StudentFamilyMembersAmount         Int?
  StudentFamilyMembersMale           Int?
  StudentFamilyMembersFemale         Int?
  SiblingsBornSameParentsAmount      Int?
  SiblingsBornSameParentsMale        Int?
  SiblingsBornSameParentsFemale      Int?
  SiblingsBornDifferentParentsAmount Int?
  SiblingsBornDifferentParentsMale   Int?
  SiblingsBornDifferentParentsFemale Int?
  FamiliesNeedSpecialAssistance      Int?
  FamiliesNeedSpecialAssistanceTotal Int?
  FamilyRelationship                 Int?
  FamilyRelationshipOther            String?   @db.VarChar(300)
  RelationshipMember                 String?   @db.VarChar(500)
  SpendTimeWithFamily                Decimal?  @db.Decimal(4, 2)
  WorkloadTheirFamilies              String?   @db.VarChar(300)
  LeisureActivities                  String?   @db.VarChar(300)
  LeaveStudent                       Int?
  LeaveStudentOther                  String?   @db.VarChar(100)
  MedianHouseholdIncome              Int?
  ReceiveExpensesFrom                Int?
  ReceiveExpensesFromOther           String?   @db.VarChar(100)
  StudentWorkIncome                  Int?
  StudentWorkIncomeOther             String?   @db.VarChar(100)
  DailyIncome                        Int?
  PaidComeDay                        Int?
  ParentWantAgencyHelp               String?   @db.VarChar(50)
  ParentWantAgencyHelpOther          String?   @db.VarChar(100)
  ParentWantAgencyHelp2              String?   @db.VarChar(50)
  ParentWantAgencyHelp2Other         String?   @db.VarChar(100)
  ParentConcerns                     String?   @db.VarChar(500)
  ParentWantSchoolsHelp              String?   @db.VarChar(50)
  ParentWantSchoolsHelpOther         String?   @db.VarChar(100)
  Health                             String?   @db.VarChar(50)
  WelfareSafety                      String?   @db.VarChar(50)
  DistanceHomeToSchool               Int?
  TravelTime                         Int?
  StudentTravel                      Int?
  StudentTravelOther                 String?   @db.VarChar(100)
  LivingConditions                   String?   @db.VarChar(50)
  LivingConditionsOther              String?   @db.VarChar(100)
  StudentResponsibilities            String?   @db.VarChar(50)
  StudentResponsibilitiesOther       String?   @db.VarChar(100)
  Hobbies                            String?   @db.VarChar(50)
  HobbiesOther                       String?   @db.VarChar(100)
  SubstanceAbuseBehavior             String?   @db.VarChar(50)
  ViolentBehavior                    String?   @db.VarChar(50)
  ViolentBehaviorOther               String?   @db.VarChar(100)
  SexualBehavior                     String?   @db.VarChar(50)
  GameAddiction                      String?   @db.VarChar(50)
  GameAddictionOther                 String?   @db.VarChar(100)
  AccessComputerInternet             Int?
  UseElectronicTools                 String?   @db.VarChar(50)
  StudentInfoProvider                Int?
  Note                               String?   @db.VarChar(200)
  HouseStyle                         Int?
  ParentSignature                    String?   @db.VarChar(200)
  StudentSignature                   String?   @db.VarChar(200)
  TeacherSignature                   String?   @db.VarChar(200)
  TeacherId                          Int?
  IsDel                              Boolean?
  CreatedBy                          Int?
  CreatedDate                        DateTime? @db.DateTime
  UpdatedBy                          Int?
  UpdatedDate                        DateTime? @db.DateTime

  @@id([ID, SchoolID, RoomID, StudentID, TermID], map: "PK_THOMEVISIT")
  @@index([YearID], map: "INDEX_VV_1890_1889")
  @@index([TermID(sort: Desc), SchoolID, RoomID, Status, IsDel, StudentID], map: "IX_SchoolID_RoomID_StudentID_TermID_Status_IsDel")
  @@index([StudentID], map: "IX_THomeVisit_StudentID")
}

model THomeVisitFile {
  ID          Int       @default(autoincrement())
  Type        Int
  HomeVisitID Int
  SchoolID    Int
  ContentType String?   @db.VarChar(200)
  FileName    String?   @db.VarChar(200)
  Path        String?   @db.VarChar(200)
  IsDel       Boolean?
  CreatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedBy   Int?
  UpdatedDate DateTime? @db.DateTime

  @@id([ID, Type, HomeVisitID, SchoolID], map: "PK_THOMEVISITFILE")
  @@index([HomeVisitID, SchoolID, IsDel], map: "INDEX_VV_40717_40716")
  @@index([ContentType], map: "INDEX_VV_5134909_5134908")
}

model THomework {
  nHomeWork       Int       @default(autoincrement())
  SchoolID        Int
  OnlineId        Int?
  sPlaneID        Int?
  dStart          DateTime? @db.DateTime
  dEnd            DateTime? @db.DateTime
  dNotification   DateTime? @db.DateTime
  dOrder          DateTime? @db.DateTime
  sEmp            Int?
  sHomeworkDetail String?   @db.NVarChar(Max)
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  TitleName       String?   @db.NVarChar(250)
  MaxScore        Float?
  AssignType      Int?      @db.TinyInt
  LinkYT          String?   @db.VarChar(Max)
  SelectedRoom    String?   @db.VarChar(250)
  SelectedStudent String?   @db.VarChar(2500)
  Created         DateTime? @db.DateTime
  Modified        DateTime? @db.DateTime
  DisplayDate     DateTime? @db.DateTime
  DisplayType     Int?      @db.TinyInt

  @@id([SchoolID, nHomeWork], map: "PK_THomework")
  @@index([OnlineId], map: "IDX_M_9443_9442")
  @@index([cDel], map: "IDX_THomework_nHomeWork")
  @@index([nHomeWork], map: "INDEX_VV_12231_12230")
  @@index([OnlineId], map: "INDEX_VV_5155024_5155023")
  @@index([SchoolID, cDel, DisplayDate], map: "INDEX_VV_89766_89765")
  @@index([OnlineId, SchoolID, cDel, DisplayDate], map: "IX_THomework_SchoolID_cDel_DisplayDate")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model THomework_Bak {
  nHomeWork       Int
  sPlaneID        Int?
  dStart          DateTime? @db.DateTime
  dEnd            DateTime? @db.DateTime
  dNotification   DateTime? @db.DateTime
  dOrder          DateTime? @db.DateTime
  sEmp            Int?
  sHomeworkDetail String?   @db.NVarChar(Max)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  OnlineId        Int?
  TitleName       String?   @db.NVarChar(250)
  MaxScore        Float?
  AssignType      Int?      @db.TinyInt
  LinkYT          String?   @db.VarChar(Max)
  SelectedRoom    String?   @db.VarChar(250)
  SelectedStudent String?   @db.VarChar(2500)
  Created         DateTime? @db.DateTime
  Modified        DateTime? @db.DateTime
  DisplayDate     DateTime? @db.DateTime
  DisplayType     Int?      @db.TinyInt

  @@ignore
}

model THomework_User {
  nHomeWork             Int
  sID                   Int
  cStatusHomeWork       String?   @db.Char(1)
  SchoolID              Int
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime
  cDel                  Boolean
  IsRead                Boolean?
  IsSend                Boolean?
  IsLate                Boolean?
  IsManual              Boolean?
  Score                 Float?
  AttachFile            String?   @db.NVarChar(250)
  AttachTitle           String?   @db.NVarChar(250)
  AttachFileContentType String?   @db.NVarChar(100)
  LinkUrl               String?   @db.NVarChar(250)
  Remark                String?

  @@id([SchoolID, nHomeWork, sID], map: "PK_THomework_User")
  @@index([nHomeWork, sID], map: "INDEX_VV_102707_102706")
  @@index([SchoolID, IsSend, cDel], map: "INDEX_VV_107481_107480")
  @@index([sID, SchoolID, cDel], map: "INDEX_VV_26401_26400")
  @@index([SchoolID, IsSend, nHomeWork, cDel], map: "IX_THomework_User_SchoolID_IsSend_nHomeWork_cDel")
  @@index([sID, SchoolID, cDel, nHomeWork], map: "IX_VV_THomework_User_sID_SchoolID_cDel_nHomeWork")
  @@index([sID, SchoolID, CreatedDate, cDel], map: "IX_VV_THomework_User_sID_SchoolID_CreatedDate_cDel")
}

model THomework_User_File {
  FileId          Int      @default(autoincrement())
  nHomeWorkId     Int
  sID             Int
  SchoolID        Int
  FileUrl         String?  @db.NVarChar(350)
  FileTitle       String?  @db.NVarChar(250)
  FileContentType String?  @db.NVarChar(100)
  cDel            Boolean?

  @@id([FileId, nHomeWorkId, sID, SchoolID], map: "PK_THomework_User_File")
  @@index([nHomeWorkId, sID, SchoolID], map: "INDEX_VV_18206_18205")
}

model THomework_User_History {
  nHomeWork             Int
  sID                   Int
  cStatusHomeWork       String?   @db.Char(1)
  SchoolID              Int
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime
  cDel                  Boolean
  IsRead                Boolean?
  IsSend                Boolean?
  Score                 Float?
  AttachFile            String?   @db.NVarChar(250)
  AttachTitle           String?   @db.NVarChar(250)
  AttachFileContentType String?   @db.NVarChar(100)
  LinkUrl               String?   @db.NVarChar(250)

  @@id([SchoolID, nHomeWork, sID], map: "PK_THomework_User_History")
}

model THomeWorkFile {
  nHomeWorkId Int?
  sFileName   String?   @db.NVarChar(250)
  ContentType String?   @db.NVarChar(100)
  nFileId     Int       @default(autoincrement())
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean
  Title       String?   @db.NVarChar(250)

  @@id([SchoolID, nFileId], map: "PK_THomeWorkFile")
  @@index([nHomeWorkId], map: "IX_THomeWorkFile_SchoolID_cDel")
}

model THomeWorkLearning {
  LearnId         Int       @id(map: "PK_THomeWorkLearning") @default(autoincrement())
  OnlineId        Int?
  sPlaneID        Int?
  sEmp            Int?
  TitleName       String?   @db.NVarChar(250)
  Description     String?   @db.VarChar(Max)
  LinkYT          String?   @db.NVarChar(Max)
  Created         DateTime? @db.DateTime
  Modified        DateTime? @db.DateTime
  SchoolId        Int?
  SelectedRoom    String?   @db.VarChar(250)
  SelectedStudent String?   @db.VarChar(2500)
  AssignType      Int?      @db.TinyInt
  cDel            Boolean?
  DisplayDate     DateTime? @db.DateTime
  DisplayType     Int?      @db.TinyInt

  @@index([SchoolId], map: "INDEX_VV_24290_24289")
  @@index([OnlineId], map: "INDEX_VV_5801486_5801485")
}

model THomeWorkLearningFile {
  AttachId    Int      @id(map: "PK_THomeWorkLearningFile") @default(autoincrement())
  LearnId     Int?
  sFileName   String?  @db.VarChar(250)
  ContentType String?  @db.VarChar(100)
  Title       String?  @db.NVarChar(250)
  SchoolId    Int?
  cDel        Boolean?

  @@index([LearnId], map: "INDEX_VV_5118105_5118104")
}

model THomeWorkReply {
  ReplyId    Int       @id(map: "PK_THomeWorkReply") @default(autoincrement())
  HomeWorkId Int?
  UserId     Int?
  ReplyRefId Int?
  Comment    String?   @db.NVarChar(Max)
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  Type       Int?      @db.TinyInt
  SchoolId   Int?
  sID        Int?
  tID        Int?

  @@index([HomeWorkId], map: "IX_THomeWorkReply_SchoolId")
  @@index([Type, SchoolId, sID], map: "IX_THomeWorkReply_Type_SchoolId_sID")
}

model THomeWorkReply_File {
  FileID      Int       @id(map: "PK_THomeWorkReply_File") @default(autoincrement())
  HomeWorkID  Int
  ReplyID     Int
  FileUrl     String?   @db.NVarChar(250)
  FileTitle   String?   @db.NVarChar(250)
  ContentType String?   @db.NVarChar(100)
  SchoolID    Int?
  cDel        Boolean?
  CreateDate  DateTime? @db.DateTime
}

model TJobList {
  nSchoolId      Int
  jobDescription String?   @db.NVarChar(100)
  deleted        String?   @db.NVarChar(50)
  workStatus     String?   @db.NVarChar(50)
  nJobid         Int       @default(autoincrement())
  empType        String?   @db.Char(1)
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @default(now(), map: "DF_TJobList_CreatedDate") @db.DateTime
  UpdatedDate    DateTime? @default(now(), map: "DF_TJobList_UpdatedDate") @db.DateTime
  cDel           Boolean   @default(false, map: "DF_TJobList_cDel")

  @@id([SchoolID, nJobid], map: "PK_TJobList")
  @@index([nJobid], map: "IDX_M_127_126")
  @@index([SchoolID, deleted], map: "INDEX_VV_208_207")
}

model TLanguage {
  LanguageId   Int       @default(autoincrement())
  LanguageCode String    @db.NVarChar(5)
  LanguageName String    @db.NVarChar(150)
  SchoolID     Int
  CreatedBy    Int?
  UpdatedBy    Int?
  CreatedDate  DateTime? @db.DateTime
  UpdatedDate  DateTime? @db.DateTime
  cDel         Boolean

  @@id([SchoolID, LanguageId, LanguageCode], map: "PK_TLanguage")
}

model TLearningCenter {
  LearningCenterID Int       @default(autoincrement())
  Type             Int?
  Name             String?   @db.NVarChar(100)
  Detail           String?   @db.NVarChar(300)
  Admin            String?   @db.NVarChar(100)
  UpdateDate       DateTime? @db.DateTime
  UpdateBy         Int?
  SchoolID         Int
  CreatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  cDel             Boolean

  @@id([SchoolID, LearningCenterID], map: "PK_TLEARNINGCENTER")
}

model TLeave {
  LeaveID     Int       @default(autoincrement())
  sID         Int?
  dLeaveStart DateTime? @db.DateTime
  dLeaveEnd   DateTime? @db.DateTime
  sLeave      String?   @db.NVarChar(250)
  cDel        String?   @db.Char(1)
  cTypeLeave  String?   @db.Char(1)
  cLeaveTime  String?   @db.Char(1)
  LeaveStatus String?   @db.Char(1)
  cTypeID     String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, LeaveID], map: "PK_TLeave")
}

model TLeave_ConfigStudent {
  SetID      Int       @default(autoincrement())
  SchoolID   Int
  ApproveNum Int?      @db.TinyInt
  LimitDay   Int?      @db.TinyInt
  LimitType  String?   @db.Char(1)
  IsDel      Boolean?
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  CreateBy   Int?
  ModifyBy   Int?
  Remark     String?   @db.NVarChar(Max)

  @@id([SetID, SchoolID], map: "PK_TLeaveSetting_Student")
}

model TLeave_ConfigTeacher {
  SetID      Int       @default(autoincrement())
  SchoolID   Int
  ApproveNum Int?      @db.TinyInt
  IsDel      Boolean?
  IsEnable   Boolean?
  CutOffDay  DateTime? @db.DateTime
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  CreateBy   Int?
  ModifyBy   Int?
  Remark     String?   @db.NVarChar(Max)

  @@id([SetID, SchoolID], map: "PK_TLeave_TeacherConfig")
}

model TLeave_ConfigTeacher_Day {
  PKID       Int       @default(autoincrement())
  SchoolID   Int
  YearStart  Int?      @db.TinyInt
  YearEnd    Int?      @db.TinyInt
  Sick       Int?      @db.TinyInt
  Personal   Int?      @db.TinyInt
  Vacation   Int?      @db.TinyInt
  Maternity  Int?      @db.TinyInt
  Ordination Int?      @db.TinyInt
  Military   Int?      @db.TinyInt
  Goverment  Int?      @db.TinyInt
  Training   Int?      @db.TinyInt
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  CreateBy   Int?
  ModifyBy   Int?
  IsDel      Boolean?

  @@id([PKID, SchoolID], map: "PK_TLeave_ConfigTeacher_Day")
}

model TLeave_ConfigTeacher_DayList {
  Id       Int      @id(map: "PK_TLeave_ConfigTeacher_DayList") @default(autoincrement())
  DayID    Int
  SchoolID Int
  TypeID   Int
  Day      Int?     @db.SmallInt
  IsDel    Boolean?
}

model TLeave_ConfigTeacher_Department {
  PKID       Int       @default(autoincrement())
  SchoolID   Int
  DeptID     Int?
  TeacherID1 Int?
  TeacherID2 Int?
  TeacherID3 Int?
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  CreateBy   Int?
  ModifyBy   Int?
  IsDel      Boolean?

  @@id([PKID, SchoolID], map: "PK_TLeave_TeacherConfig_Department")
}

model TLeave_ConfigTeacher_Notify {
  NotiID   Int       @default(autoincrement())
  SchoolID Int
  NotiType Int?      @db.TinyInt
  No       Int?      @db.SmallInt
  Time1    Int?      @db.SmallInt
  Time2    Int?      @db.SmallInt
  Created  DateTime? @db.DateTime
  Modified DateTime? @db.DateTime
  CreateBy Int?
  ModifyBy Int?
  IsDel    Boolean?

  @@id([NotiID, SchoolID], map: "PK_TLeave_ConfigTeacher_Notify")
}

model TLeave_ConfigTeacher_NotifyUser {
  ID        Int       @default(autoincrement())
  SchoolID  Int
  TeacherID Int
  Created   DateTime? @db.DateTime
  Modified  DateTime? @db.DateTime
  CreateBy  Int?
  ModifyBy  Int?
  IsDel     Boolean?

  @@id([ID, SchoolID], map: "PK_TLeave_ConfigTeacher_NotifyUser")
}

model TLeave_Log {
  Id       Int       @default(autoincrement())
  SchoolID Int
  Date     DateTime? @db.DateTime
  Text     String?   @db.NVarChar(Max)
  ByUser   String?   @db.NVarChar(250)
  Type     String?   @db.Char(1)

  @@id([Id, SchoolID], map: "PK_TLeave_Log")
  @@index([SchoolID, Type], map: "INDEX_VV_6039_6038")
}

model TLeave_Type {
  TypeID     Int       @default(autoincrement())
  SchoolID   Int
  DefaultID  Int?
  TypeName   String?   @db.NVarChar(250)
  TypeNameEN String?   @db.NVarChar(250)
  AbbrTH     String?   @db.NVarChar(50)
  Abbr       String?   @db.NVarChar(50)
  Type       String?   @db.Char(1)
  IsDel      Boolean?
  IsActive   Boolean?
  IsDefault  Boolean?
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  CreateBy   Int?
  ModifyBy   Int?

  @@id([TypeID, SchoolID], map: "PK_TLeave_Type")
  @@index([SchoolID, Type, IsDel, IsActive], map: "INDEX_VV_97793_97792")
}

model TLeaveLetter {
  letterId          Int       @default(autoincrement())
  letterSchoolId    Int?
  letterHeader      String?   @db.NVarChar(255)
  letterDate        DateTime? @db.DateTime
  letterType        String?   @db.NVarChar(50)
  writerId          Int?
  writerJob         String?   @db.NVarChar(100)
  writerComment     String?   @db.NVarChar(Max)
  startDate         DateTime? @db.DateTime
  endDate           DateTime? @db.DateTime
  contactHomenumber String?   @db.NVarChar(250)
  contactRoad       String?   @db.NVarChar(50)
  contactTumbon     String?   @db.NVarChar(50)
  contactAumpher    String?   @db.NVarChar(50)
  contactProvince   String?   @db.NVarChar(50)
  contactPhone      String?   @db.NVarChar(50)
  adminOneJob       String?   @db.NVarChar(50)
  adminOneComment   String?   @db.NVarChar(255)
  adminOneId        Int?
  adminOneDate      DateTime? @db.DateTime
  adminTwoJob       String?   @db.NVarChar(50)
  adminTwoId        Int?
  adminTwoComment   String?   @db.NVarChar(255)
  adminTwoDate      DateTime? @db.DateTime
  adminThreeJob     String?   @db.NVarChar(50)
  adminThreeComment String?   @db.NVarChar(255)
  adminThreeId      Int?
  adminThreeDate    DateTime? @db.DateTime
  adminOneComfirm   String?   @db.NVarChar(50)
  adminTwoComfirm   String?   @db.NVarChar(50)
  adminThreeComfirm String?   @db.NVarChar(50)
  LetterConfirmdate DateTime? @db.DateTime
  Season            Int?
  rejectOneId       Int?
  rejectTwoId       Int?
  rejectThreeId     Int?
  deleted           Int?
  letterStatus      String?   @db.NVarChar(20)
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean
  LeaveTypeID       Int?
  Note              String?   @db.NVarChar(250)

  @@id([SchoolID, letterId], map: "PK_TLeaveLetter")
  @@index([letterId], map: "IDX_M_33432_33431")
  @@index([adminOneId], map: "INDEX_VV_102568_102567")
  @@index([startDate], map: "INDEX_VV_15688_15687")
  @@index([writerId, letterStatus, SchoolID, cDel, letterDate, startDate, LetterConfirmdate], map: "INDEX_VV_17083_17082")
  @@index([SchoolID, cDel, writerJob], map: "INDEX_VV_90099_90098")
  @@index([SchoolID, cDel, writerJob], map: "INDEX_VV_97926_97925")
}

model TLeaveLetter_History {
  letterId          Int       @default(autoincrement())
  letterSchoolId    Int?
  letterHeader      String?   @db.NVarChar(255)
  letterDate        DateTime? @db.DateTime
  letterType        String?   @db.NVarChar(50)
  writerId          Int?
  writerJob         String?   @db.NVarChar(100)
  writerComment     String?   @db.NVarChar(Max)
  startDate         DateTime? @db.DateTime
  endDate           DateTime? @db.DateTime
  contactHomenumber String?   @db.NVarChar(50)
  contactRoad       String?   @db.NVarChar(50)
  contactTumbon     String?   @db.NVarChar(50)
  contactAumpher    String?   @db.NVarChar(50)
  contactProvince   String?   @db.NVarChar(50)
  contactPhone      String?   @db.NVarChar(50)
  adminOneJob       String?   @db.NVarChar(50)
  adminOneComment   String?   @db.NVarChar(255)
  adminOneId        Int?
  adminOneDate      DateTime? @db.DateTime
  adminTwoJob       String?   @db.NVarChar(50)
  adminTwoId        Int?
  adminTwoComment   String?   @db.NVarChar(255)
  adminTwoDate      DateTime? @db.DateTime
  adminThreeJob     String?   @db.NVarChar(50)
  adminThreeComment String?   @db.NVarChar(255)
  adminThreeId      Int?
  adminThreeDate    DateTime? @db.DateTime
  adminOneComfirm   String?   @db.NVarChar(50)
  adminTwoComfirm   String?   @db.NVarChar(50)
  adminThreeComfirm String?   @db.NVarChar(50)
  LetterConfirmdate DateTime? @db.DateTime
  Season            Int?
  rejectOneId       Int?
  rejectTwoId       Int?
  rejectThreeId     Int?
  deleted           Int?
  letterStatus      String?   @db.NVarChar(20)
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  cDel              Boolean

  @@id([SchoolID, letterId], map: "PK_TLeaveLetter_History")
}

model TLeaveLetterFiles {
  letterId    Int?
  sFileName   String?   @db.NVarChar(200)
  ContentType String?   @db.NVarChar(200)
  nNewsFileID Int       @default(autoincrement())
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nNewsFileID], map: "PK_TLeaveLetterFiles")
  @@index([letterId], map: "IX_TLeaveLetterFiles")
}

model TLeaveLetterFiles_History {
  letterId    Int?
  sFileName   String?   @db.NVarChar(200)
  ContentType String?   @db.NVarChar(200)
  nNewsFileID Int       @default(autoincrement())
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nNewsFileID], map: "PK_TLeaveLetterFiles_History")
}

model TLeaveList {
  LeaveListID    Int       @default(autoincrement())
  sID            Int?
  leaveStartDate DateTime? @db.DateTime
  leaveEndDate   DateTime? @db.DateTime
  leaveTotalDay  Int?
  leaveType      String?   @db.NVarChar(50)
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, LeaveListID], map: "PK_TLeaveList")
}

model TLeaveSetting {
  schoolId    Int       @id(map: "PK_TLeaveSetting")
  nLimit      Int?
  nType       Int?
  checker     Int?
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean
}

model TLeaveTeacherList {
  sEmp        Int
  schoolId    Int
  deleted     String?   @db.NVarChar(20)
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([schoolId, sEmp], map: "PK_TLeaveTeacherList")
}

model TLevel {
  LevelID      Int       @default(autoincrement())
  LevelName    String?   @db.NVarChar(20)
  nTimeType    Int?
  sortValue    Int?
  SchoolID     Int
  CreatedBy    Int?
  UpdatedBy    Int?
  CreatedDate  DateTime? @db.DateTime
  UpdatedDate  DateTime? @db.DateTime
  cDel         Boolean
  MasterCode   String?   @db.VarChar(2)
  LevelNameEng String?   @db.VarChar(50)

  @@id([SchoolID, LevelID], map: "PK_TLevel")
  @@index([LevelID], map: "INDEX_VV_8638_8637")
  @@index([LevelName], map: "IX_TLevel_LevelName")
}

model TLogEmpTimeScan {
  sEmp             Int?
  LogEmpTime       DateTime? @db.Time
  LogEmpType       String?   @db.Char(1)
  LogEmpScanStatus String?   @db.NVarChar(2)
  LogEmpnDay       Int?
  LogEmpDate       DateTime? @db.Date
  nYear            Int?
  nLogEmpScanID    Int       @default(autoincrement())
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean   @default(false, map: "DF_TLogEmpTimeScan_cDel")
  deviceType       Int?
  LeaveID          Int?

  @@id([SchoolID, nLogEmpScanID], map: "PK_TLogEmpTimeScan")
  @@index([CreatedDate], map: "INDEX_VV_115591_115590")
  @@index([sEmp], map: "INDEX_VV_1222_1221")
  @@index([SchoolID, LogEmpDate], map: "INDEX_VV_12822_12821")
  @@index([nLogEmpScanID], map: "INDEX_VV_135766_135765")
  @@index([sEmp], map: "INDEX_VV_169660_169659")
  @@index([nLogEmpScanID], map: "INDEX_VV_27714_27713")
  @@index([LogEmpDate, SchoolID], map: "INDEX_VV_32708_32707")
  @@index([CreatedDate], map: "INDEX_VV_3518_3517")
  @@index([LogEmpDate, SchoolID], map: "INDEX_VV_8485_8484")
  @@index([LogEmpScanStatus, SchoolID, LogEmpDate], map: "INDEX_VV_92106_92105")
  @@index([sEmp, LogEmpDate], map: "INDEX_VV_93270_93269")
  @@index([sEmp], map: "IX_TLogEmpTimeScan_LogEmpDate_SchoolID")
  @@index([sEmp], map: "IX_TLogEmpTimeScan_SchoolID_LogEmpDate_cDel")
  @@index([sEmp], map: "IX_VV_TLogEmpTimeScan_LogEmpDate_SchoolID")
  @@index([sEmp], map: "IX_VV_TLogEmpTimeScan_SchoolID_LogEmpDate")
}

model TLogEmpTimeScan_History {
  sEmp             Int?
  LogEmpTime       DateTime? @db.Time
  LogEmpType       String?   @db.Char(1)
  LogEmpScanStatus String?   @db.NVarChar(2)
  LogEmpnDay       Int?
  LogEmpDate       DateTime? @db.Date
  nYear            Int?
  nLogEmpScanID    Int       @default(autoincrement())
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean

  @@id([SchoolID, nLogEmpScanID], map: "PK_TLogEmpTimeScan_History")
}

model TLogLearnTimeScan {
  LeanTimeScanID     Int       @default(autoincrement())
  LogLearnDate       DateTime  @db.Date
  sScheduleID        Int
  LogLearnType       String    @db.Char(1)
  sUserType          String    @db.Char(1)
  sID                Int
  LogLearnTime       DateTime? @db.Time
  LogLearnScanStatus String?   @db.Char(3)
  LogLearnnDay       Int?
  nTeacherId         Int?
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean   @default(false, map: "DF_TLogLearnTimeScan_Backup_cDel")

  @@id([SchoolID, LeanTimeScanID], map: "PK_TLogLearnTimeScan_Backup")
  @@index([sID], map: "IDX_M_B_276_275")
  @@index([LogLearnDate, sScheduleID, SchoolID], map: "IDX_M_B_3571_3570")
  @@index([LogLearnDate, sScheduleID, sUserType, SchoolID], map: "INDEX_VV_132354_132353")
  @@index([SchoolID, LogLearnDate], map: "INDEX_VV_43532_43531")
  @@index([LogLearnDate], map: "INDEX_VV_B_1717_1716")
  @@index([sID], map: "INDEX_VV_B_89775_89774")
  @@index([sID], map: "INDEX_VV_B_90040_90039")
  @@index([sScheduleID], map: "IX_TLogLearnTimeScan_Backup_LogLearnDate_LogLearnType_SchoolID")
}

model TLogLearnTimeScan_History {
  LeanTimeScanID     Int       @default(autoincrement())
  LogLearnDate       DateTime  @db.Date
  sScheduleID        Int
  LogLearnType       String    @db.Char(1)
  sUserType          String    @db.Char(1)
  sID                Int
  LogLearnTime       DateTime? @db.Time
  LogLearnScanStatus String?   @db.Char(3)
  LogLearnnDay       Int?
  nTeacherId         Int?
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean

  @@id([SchoolID, LeanTimeScanID], map: "PK_TLogLearnTimeScan_History")
}

model TLogLearnTimeScanNew {
  LeanTimeScanID Int       @default(autoincrement())
  sUserType      String    @db.Char(1)
  sID            Int
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  JsonData       String?   @db.NVarChar(Max)
  nMonth         Int

  @@id([SchoolID, LeanTimeScanID], map: "PK_TLogLearnTimeScanNew")
}

model TLogUserTimeScan {
  sID            Int?
  LogTime        DateTime? @db.Time
  LogType        String?   @db.Char(1)
  LogScanStatus  String?   @db.NVarChar(2)
  LognDay        Int?
  LogDate        DateTime? @db.Date
  nYear          Int?
  nTermSubLevel2 Int?
  TeacherId      Int?
  nLogScanID     Int       @default(autoincrement())
  bLockStatus    Boolean?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean   @default(false, map: "DF_TLogUserTimeScan_Bkup_cDel")
  deviceType     Int?
  LeaveID        Int?

  @@id([SchoolID, nLogScanID], map: "PK_TLogUserTimeScan_Bkup")
  @@index([sID], map: "INDEX_VV_55244_55243")
  @@index([LogDate], map: "INDEX_VV_57814_57813")
  @@index([LogDate, SchoolID], map: "INDEX_VV_64621_64620")
  @@index([LogDate, sID], map: "INDEX_VV_65192_65191")
  @@index([LogDate, SchoolID], map: "INDEX_VV_65459_65458")
  @@index([LogType, LogDate, SchoolID], map: "INDEX_VV_67126_67125")
  @@index([SchoolID, LogDate], map: "INDEX_VV_68706_68705")
  @@index([LogType, SchoolID, LogDate], map: "INDEX_VV_71364_71363")
  @@index([nLogScanID], map: "INDEX_VV_Bkup_159_158")
}

model TLogUserTimeScan_History {
  sID            Int?
  LogTime        DateTime? @db.Time
  LogType        String?   @db.Char(1)
  LogScanStatus  String?   @db.NVarChar(2)
  LognDay        Int?
  LogDate        DateTime? @db.Date
  nYear          Int?
  nTermSubLevel2 Int?
  TeacherId      Int?
  nLogScanID     Int
  bLockStatus    Boolean?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, nLogScanID], map: "PK_TLogUserTimeScan_History")
}

model TLogUserTimeScan_Old_Bkup {
  sID            Int?
  LogTime        DateTime? @db.Time
  LogType        String?   @db.Char(1)
  LogScanStatus  String?   @db.NVarChar(2)
  LognDay        Int?
  LogDate        DateTime? @db.Date
  nYear          Int?
  nTermSubLevel2 Int?
  TeacherId      Int?
  nLogScanID     Int       @default(autoincrement())
  bLockStatus    Boolean?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean   @default(false, map: "DF_TLogUserTimeScan_cDel")
  deviceType     Int?
  LeaveID        Int?

  @@id([SchoolID, nLogScanID], map: "PK_TLogUserTimeScan")
  @@index([sID, LogDate, SchoolID], map: "IDX_M_14871_14870")
  @@index([sID], map: "IDX_M_232_231")
  @@index([sID, SchoolID, LogDate], map: "IDX_M_24177_24176")
  @@index([SchoolID, LogDate], map: "INDEX_VV_100043_100042")
  @@index([sID], map: "INDEX_VV_1214_1213")
  @@index([nLogScanID], map: "INDEX_VV_159_158")
  @@index([LogDate], map: "INDEX_VV_23543_23542")
  @@index([LogTime, LogDate, SchoolID], map: "INDEX_VV_32713_32712")
  @@index([LogType, SchoolID, LogDate], map: "INDEX_VV_4080_4079")
  @@index([LogType, LogDate, SchoolID], map: "INDEX_VV_52840_52839")
  @@index([sID], map: "INDEX_VV_6067278_6067277")
  @@index([sID], map: "INDEX_VV_6133_6132")
  @@index([LogType, LogDate, SchoolID], map: "INDEX_VV_8522_8521")
  @@index([LogDate, SchoolID], map: "INDEX_VV_8721_8720")
  @@index([LogDate, SchoolID], map: "INDEX_VV_90055_90054")
  @@index([SchoolID, LogDate], map: "INDEX_VV_92065_92064")
  @@index([LogDate, SchoolID], map: "INDEX_VV_94801_94800")
  @@index([sID, LogType, LogDate, SchoolID], map: "INDEX_VV_97017_97016")
  @@index([SchoolID, LogDate, LogType, sID], map: "IX_TLogUserTimeScan__SchoolIDTypeDateSid")
  @@index([sID], map: "IX_TLogUserTimeScan_LogType_LogDate_SchoolID")
  @@index([sID], map: "IX_TLogUserTimeScan_LogType_LogDate_SchoolID1")
  @@index([sID], map: "TLogUserTimeScan_schoolid_logdate")
}

model TLogUserTimeScanNew {
  nLogScanID  Int       @id(map: "PK_TLogUserTimeScanNew") @default(autoincrement())
  SchoolID    Int
  sID         Int
  nYear       Int?
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Int
  JsonData    String?   @db.NVarChar(Max)
  nMonth      Int

  @@index([sID], map: "IX_TLogUserTimeScanNew_1")
  @@index([nYear], map: "IX_TLogUserTimeScanNew_2")
}

model TMasterData {
  MasterID    Int      @id(map: "PK_TMasterData") @default(autoincrement())
  MasterCode  String?  @db.VarChar(20)
  MasterDes   String?  @db.VarChar(250)
  MasterType  String?  @db.VarChar(20)
  isActive    Boolean?
  MasterOrder Int?
}

model TMasterType {
  MasterTypeID     Int     @id(map: "PK_TMasterType") @default(autoincrement())
  MasterTypeNameTH String? @db.VarChar(200)
  MasterTypeNameEN String? @db.VarChar(200)
}

model TMessage_User {
  MessageUserID   Int       @default(autoincrement())
  message_id      Int
  UserID          Int
  user_type       Int
  read_status     Boolean?
  receive_status  Boolean?
  message_read    DateTime? @db.DateTime
  message_receive DateTime? @db.DateTime
  nActionResult   Int?
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, MessageUserID], map: "PK_TMessage_User_B_1")
  @@index([message_id, UserID], map: "IDX_M_B_210099_210098_M")
  @@index([UserID], map: "IDX_M_B_2335_2334_M")
  @@index([message_id], map: "INDEX_VV_5799_5798")
  @@index([MessageUserID, SchoolID], map: "INDEX_VV_B169461_169460")
  @@index([message_id], map: "INDEX_VV_B56030_56029_M")
  @@index([UserID, user_type, message_id, read_status, receive_status], map: "IX_TMessage_User_B_M")
}

model TMessage_User_History {
  MessageUserID   Int       @default(autoincrement())
  message_id      Int
  UserID          Int
  user_type       Int
  read_status     Boolean?
  receive_status  Boolean?
  message_read    DateTime? @db.DateTime
  message_receive DateTime? @db.DateTime
  nActionResult   Int?
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, MessageUserID], map: "PK_TMessage_User_History")
}

model TMessageBox {
  sMessage       String?   @db.NVarChar(Max)
  sTitle         String?   @db.NVarChar(250)
  dSend          DateTime? @db.DateTime
  scheduled_id   String?   @db.NVarChar(250)
  push_id        Int?
  homework_id    Int?
  sell_id        Int?
  topup_id       Int?
  nType          Int?
  logtime_type   Int?
  logschedule_id Int?
  letter_id      Int?
  MessageId      String?   @db.NVarChar(100)
  nMessageID     Int       @default(autoincrement())
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, nMessageID], map: "PK_TMessageBox_C")
  @@index([letter_id], map: "INDEX_VV_113355_113354")
  @@index([dSend], map: "INDEX_VV_115587_115586")
  @@index([sell_id], map: "INDEX_VV_14115_14114")
  @@index([push_id, SchoolID], map: "INDEX_VV_44577_44576")
  @@index([SchoolID, dSend], map: "INDEX_VV_64277_64276")
  @@index([nMessageID], map: "INDEX_VV_8731_8730")
  @@index([nType, logtime_type, logschedule_id, SchoolID], map: "INDEX_VV_94462_94461")
  @@index([push_id, SchoolID, dSend], map: "IX_TMessageBox_C_SchoolID_dSend")
}

model TMessageBox_History {
  sMessage       String?   @db.NVarChar(Max)
  sTitle         String?   @db.NVarChar(250)
  dSend          DateTime? @db.DateTime
  scheduled_id   String?   @db.NVarChar(250)
  push_id        Int?
  homework_id    Int?
  sell_id        Int?
  topup_id       Int?
  nType          Int?
  logtime_type   Int?
  logschedule_id Int?
  letter_id      Int?
  MessageId      String?   @db.NVarChar(100)
  nMessageID     Int       @default(autoincrement())
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, nMessageID], map: "PK_TMessageBox_History")
}

model TMessageLINEMulticast {
  MessageID   Int
  GroupID     Int
  StreamID    String?   @db.NVarChar(1500)
  UpdateDate  DateTime? @db.DateTime
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, MessageID, GroupID], map: "PK_TMESSAGELINEMULTICAST")
}

model TMoney {
  MoneyID       Int       @default(autoincrement())
  dMoney        DateTime  @db.DateTime
  sID           Int
  nMoney        Decimal?  @db.Decimal(18, 2)
  cType         String?   @db.Char(1)
  sEmp          Int?
  nBalance      Decimal?  @db.Decimal(18, 2)
  topup_type    String?   @db.NVarChar(5)
  dayCancal     DateTime? @db.DateTime
  UserCancel    Int?
  TopupId       String    @db.NVarChar(46)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  CardHistoryID String?   @db.UniqueIdentifier
  ReferenceID   String    @db.UniqueIdentifier
  UpdatedTime   DateTime? @db.DateTime
  Insurance     Decimal   @db.Decimal(18, 2)
  ChargeID      String?   @db.NVarChar(100)
  DeviceID      String?   @db.NVarChar(200)
  PaymentInfo   String?   @db.NVarChar(500)
  SourceIP      String?   @db.NVarChar(200)
  CheckID       String?   @db.NVarChar(400)

  @@id([SchoolID, MoneyID, TopupId], map: "PK_TMoney")
  @@index([SchoolID, cDel, dMoney], map: "INDEX_VV_110302_110301")
  @@index([CardHistoryID], map: "INDEX_VV_116006_116005")
  @@index([dayCancal, dMoney], map: "INDEX_VV_125046_125045")
  @@index([dayCancal], map: "INDEX_VV_17609_17608")
  @@index([dMoney], map: "INDEX_VV_2100_2099")
  @@index([dMoney], map: "INDEX_VV_30765_30764")
  @@index([topup_type, dayCancal, SchoolID, cDel, dMoney], map: "INDEX_VV_32546_32545")
  @@index([dMoney], map: "INDEX_VV_4465_4464")
  @@index([sID], map: "INDEX_VV_54013_54012")
  @@index([sID], map: "INDEX_VV_57245_57244")
  @@index([MoneyID], map: "INDEX_VV_73872_73871")
  @@index([sID], map: "INDEX_VV_846_845")
  @@index([ChargeID], map: "INDEX_VV_8564_8563")
  @@index([sEmp, dayCancal, SchoolID], map: "INDEX_VV_8728_8727")
  @@index([dayCancal, SchoolID, cDel, dMoney, topup_type], map: "INDEX_VV_90008_90007")
  @@index([sEmp, dayCancal, SchoolID, dMoney], map: "INDEX_VV_90634_90633")
  @@index([dayCancal, SchoolID, dMoney], map: "INDEX_VV_94113_94112")
  @@index([topup_type, dayCancal, SchoolID, cDel, dMoney], map: "INDEX_VV_94427_94426")
  @@index([SchoolID, cDel, CardHistoryID, dMoney], map: "INDEX_VV_97721_97720")
  @@index([SchoolID, cDel, CardHistoryID, dayCancal], map: "INDEX_VV_99738_99737")
  @@index([sID, dayCancal, SchoolID, cDel, dMoney], map: "IX_TMoney_sID_dayCancal_SchoolID_cDel_dMoney")
  @@index([dMoney], map: "TMoney_ChargeID")
  @@index([sID], map: "TMoney_daycancal_schoolid_dmoney_topuptype")
}

model TMoney_12022024 {
  MoneyID       Int       @id(map: "PK_TMoney_12022024") @default(autoincrement())
  dMoney        DateTime  @db.DateTime
  sID           Int
  nMoney        Decimal?  @db.Decimal(18, 2)
  cType         String?   @db.Char(1)
  sEmp          Int?
  nBalance      Decimal?  @db.Decimal(18, 2)
  topup_type    String?   @db.NVarChar(5)
  dayCancal     DateTime? @db.DateTime
  UserCancel    Int?
  TopupId       String    @db.NVarChar(46)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  CardHistoryID String?   @db.UniqueIdentifier
  ReferenceID   String    @db.UniqueIdentifier
  UpdatedTime   DateTime? @db.DateTime
  Insurance     Decimal   @db.Decimal(18, 2)
  ChargeID      String?   @db.NVarChar(100)
  DeviceID      String?   @db.NVarChar(200)
  PaymentInfo   String?   @db.NVarChar(500)

  @@index([nMoney, CardHistoryID], map: "INDEX_VV_71280_71279")
}

model TMoney_20210208 {
  MoneyID       Int       @default(autoincrement())
  dMoney        DateTime  @db.DateTime
  sID           Int
  nMoney        Decimal?  @db.Decimal(18, 2)
  cType         String?   @db.Char(1)
  sEmp          Int?
  nBalance      Decimal?  @db.Decimal(18, 2)
  topup_type    String?   @db.NVarChar(5)
  dayCancal     DateTime? @db.DateTime
  UserCancel    Int?
  TopupId       String    @db.NVarChar(46)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  CardHistoryID String?   @db.UniqueIdentifier

  @@id([SchoolID, MoneyID, TopupId], map: "PK_TMoney_20210208")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TMoney_Backup {
  MoneyID       Int       @default(autoincrement())
  dMoney        DateTime  @db.DateTime
  sID           Int
  nMoney        Decimal?  @db.Decimal(18, 2)
  cType         String?   @db.Char(1)
  sEmp          Int?
  nBalance      Decimal?  @db.Decimal(18, 2)
  topup_type    String?   @db.NVarChar(5)
  dayCancal     DateTime? @db.DateTime
  UserCancel    Int?
  TopupId       String    @db.NVarChar(46)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  CardHistoryID String?   @db.UniqueIdentifier
  ReferenceID   String    @db.UniqueIdentifier
  UpdatedTime   DateTime? @db.DateTime
  Insurance     Decimal   @db.Decimal(18, 2)
  ChargeID      String?   @db.NVarChar(100)
  DeviceID      String?   @db.NVarChar(200)
  PaymentInfo   String?   @db.NVarChar(500)
  SourceIP      String?   @db.NVarChar(200)
  CheckID       String?   @db.NVarChar(400)

  @@ignore
}

model TMoney_History {
  MoneyID     Int       @default(autoincrement())
  dMoney      DateTime  @db.DateTime
  sID         Int
  nMoney      Decimal?  @db.Decimal(18, 2)
  cType       String?   @db.Char(1)
  sEmp        Int?
  nBalance    Decimal?  @db.Decimal(18, 2)
  topup_type  String?   @db.NVarChar(5)
  dayCancal   DateTime? @db.DateTime
  UserCancel  Int?
  TopupId     String    @db.NVarChar(46)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, MoneyID, TopupId], map: "PK_TMoney_History")
  @@index([sID], map: "INDEX_VV_29296_29295")
}

model TMoneyDBError {
  MoneyID          Int       @default(autoincrement())
  dMoney           DateTime  @db.DateTime
  sID              Int
  nMoney           Decimal?  @db.Decimal(18, 2)
  cType            String?   @db.Char(1)
  sEmp             Int?
  nBalance         Decimal?  @db.Decimal(18, 2)
  topup_type       String?   @db.NVarChar(5)
  dayCancal        DateTime? @db.DateTime
  UserCancel       Int?
  TopupId          String    @db.NVarChar(46)
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean
  CardHistoryID    String?   @db.UniqueIdentifier
  ReferenceID      String    @db.UniqueIdentifier
  UpdatedTime      DateTime? @db.DateTime
  Insurance        Decimal   @db.Decimal(18, 2)
  ChargeID         String?   @db.NVarChar(100)
  DeviceID         String?   @db.NVarChar(200)
  PaymentInfo      String?   @db.NVarChar(500)
  SourceIP         String?   @db.NVarChar(200)
  CheckID          String?   @db.NVarChar(400)
  Processed        Boolean
  ErrorDescription String?   @db.NVarChar(Max)

  @@id([SchoolID, MoneyID, TopupId], map: "PK_TMoneyDBError")
  @@index([SchoolID, dMoney, SourceIP, Processed], map: "IX_TMoneyDBError")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Tmp_TSubLevel {
  nTSubLevel     Int       @default(autoincrement())
  SubLevel       String?   @db.NVarChar(20)
  nTLevel        Int?
  nTimeType      Int?
  nDeleted       Int?
  fullName       String?   @db.NVarChar(50)
  SubLevelEN     String?   @db.NVarChar(10)
  fullNameEN     String?   @db.NVarChar(50)
  nWorkingStatus Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  isGraduate     Boolean?
  MasterCode     String?   @db.VarChar(20)
  SubLevelNameEN String?   @db.VarChar(50)
  SubLevelNameTH String?   @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Tmp_TTermSubLevel2 {
  nTermSubLevel2       Int       @default(autoincrement())
  nTerm                String?   @db.NVarChar(20)
  nTSubLevel           Int
  nTSubLevel2          String?   @db.NVarChar(100)
  nTermSubLevel2Status String    @db.Char(1)
  nTimeType            Int?
  nWorkingStatus       Int?
  nBranchSpecId        Int?
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tmpDevPosSale {
  SchoolID    Int?
  sID         Int?
  sEmp        Int?
  APIResponse String? @db.NVarChar(Max)

  @@ignore
}

model TNewsFiles {
  nSMS                Int?
  sFileName           String?   @db.NVarChar(200)
  ContentType         String?   @db.NVarChar(200)
  nNewsFileID         Int       @default(autoincrement())
  SchoolID            Int
  CreatedBy           Int?
  UpdatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  UpdatedDate         DateTime? @db.DateTime
  cDel                Boolean
  FullFileName        String?   @db.NVarChar(200)
  StudentCodeOwner    Boolean?
  StudentCodeFileName String?   @db.NVarChar(20)

  @@id([SchoolID, nNewsFileID], map: "PK_TNewsFiles")
  @@index([nSMS, SchoolID, cDel], map: "INDEX_VV_51642_51641")
  @@index([nSMS], map: "IX_TNewsFiles")
}

model TONETScore {
  Year            Int
  sID             Int
  Identification  String    @db.VarChar(20)
  nTSubLevel      Int
  Class           String?   @db.VarChar(20)
  SeatNo          String?   @db.VarChar(15)
  SubjectScore61  Decimal?  @db.Decimal(5, 2)
  SubjectScore64  Decimal?  @db.Decimal(5, 2)
  SubjectScore65  Decimal?  @db.Decimal(5, 2)
  SubjectScore63  Decimal?  @db.Decimal(5, 2)
  SubjectScore91  Decimal?  @db.Decimal(5, 2)
  SubjectScore94  Decimal?  @db.Decimal(5, 2)
  SubjectScore95  Decimal?  @db.Decimal(5, 2)
  SubjectScore93  Decimal?  @db.Decimal(5, 2)
  SubjectScore01  Decimal?  @db.Decimal(5, 2)
  SubjectScore04  Decimal?  @db.Decimal(5, 2)
  SubjectScore05  Decimal?  @db.Decimal(5, 2)
  SubjectScore02  Decimal?  @db.Decimal(5, 2)
  SubjectScore03  Decimal?  @db.Decimal(5, 2)
  Result30Percent Decimal?  @db.Decimal(5, 2)
  UpdateDate      DateTime? @db.DateTime
  UpdateBy        Int?
  SchoolID        Int
  CreatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  cDel            Boolean
  ResultPercent   Decimal?  @db.Decimal(5, 2)
  Multiplier      Decimal?  @db.Decimal(5, 2)

  @@id([SchoolID, Year, sID, Identification, nTSubLevel], map: "PK_TONETSCORE")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Topup819 {
  SRNO       Float?
  STUDENTNO  Float?
  TIME       String? @db.NVarChar(255)
  AMOUNT     Float?
  EMPLOYEEID Float?
  sID        Int?

  @@ignore
}

model TopupWebLogData {
  ID          Int       @id(map: "PK_TopupWebLogData") @default(autoincrement())
  sID         Int?
  sEmp        Int?
  EmployeeID  Int?
  SchoolID    Int?
  nTopupMoney Int?
  CardID      String?   @db.UniqueIdentifier
  Result      String?   @db.NVarChar(2000)
  TopupType   String?   @db.NVarChar(50)
  TStamp      DateTime? @db.DateTime
  Topupid     String?   @db.NVarChar(100)
  Balance     Decimal?  @db.Decimal(18, 3)
}

model TPeriod {
  sPeriodID      String    @db.NVarChar(10)
  sScheduleID    String?   @db.NVarChar(10)
  sPlaneID       Int?
  sClassID       String?   @db.NVarChar(10)
  nDay           Int?
  sPeriodName    String?   @db.NVarChar(250)
  dStart         DateTime? @db.DateTime
  dEnd           DateTime? @db.DateTime
  dTimeStart_IN  DateTime? @db.DateTime
  dTimeStart_OUT DateTime? @db.DateTime
  dTimeEnd_IN    DateTime? @db.DateTime
  dTimeEnd_OUT   DateTime? @db.DateTime
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, sPeriodID], map: "PK_TSchedule")
}

model TPeriod_TSubLevel {
  nTSubLevel  Int       @default(autoincrement())
  sPeriodID   String    @db.NVarChar(10)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nTSubLevel, sPeriodID], map: "PK_TPeriod_TSubLevel")
}

model TPermissionCard {
  ID        Int       @id(map: "PK_TPermissionCard") @default(autoincrement())
  RefNo     Int?
  SchoolID  Int?
  StudentID Int?
  TypeID    Int?
  Time      Int?      @db.SmallInt
  IsAttach  Boolean?
  AttachUrl String?   @db.VarChar(500)
  StartDate DateTime? @db.DateTime
  EndDate   DateTime? @db.DateTime
  Cause     String?   @db.NVarChar(500)
  Note      String?   @db.NVarChar(500)
  Created   DateTime? @db.DateTime
  Modified  DateTime? @db.DateTime
  Creator   Int?
  Modifier  Int?
  IsDel     Boolean?

  @@index([RefNo, SchoolID], map: "INDEX_VV_5661475_5661474")
  @@index([SchoolID], map: "INDEX_VV_60407_60406")
  @@index([StudentID], map: "INDEX_VV_73545_73544")
}

model TPermissionCardType {
  ID         Int       @id(map: "PK_TPermissionType") @default(autoincrement())
  SchoolID   Int?
  Permission String?   @db.NVarChar(250)
  Created    DateTime? @db.DateTime
  Modified   DateTime? @db.DateTime
  Creator    Int?
  Modifier   Int?
  IsDel      Boolean?
}

model TPlan {
  PlanId       Int      @default(autoincrement())
  CurriculumId Int
  nTSubLevel   Int
  PlanName     String   @db.NVarChar(250)
  CreatedDate  DateTime @db.DateTime
  CreatedBy    Int?
  UpdatedDate  DateTime @db.DateTime
  UpdatedBy    Int?
  IsActive     Boolean?
  SchoolID     Int
  cDel         Boolean

  @@id([SchoolID, PlanId], map: "PK_TPlan")
  @@index([nTSubLevel, IsActive, SchoolID], map: "INDEX_VV_102631_102630")
  @@index([PlanId], map: "INDEX_VV_263_262")
  @@index([CurriculumId], map: "INDEX_VV_5124310_5124309")
  @@index([CurriculumId], map: "INDEX_VV_55575_55574")
  @@index([CurriculumId, nTSubLevel, IsActive, SchoolID], map: "ix_TPlan_new")
  @@index([PlanName, IsActive, SchoolID, PlanId], map: "IX_TPlan_PlanName_IsActive_SchoolID_PlanId")
}

model TPlanCourse {
  PlanCourseId             Int      @default(autoincrement())
  PlanId                   Int
  sPlaneID                 Int
  nCredit                  Float?
  CourseHour               Float?
  CourseTotalHour          Float?
  CourseStatus             Int?
  SortNumber               Int?
  CreatedDate              DateTime @db.DateTime
  CreatedBy                Int?
  UpdatedDate              DateTime @db.DateTime
  UpdatedBy                Int?
  IsActive                 Boolean?
  SchoolID                 Int
  nYear                    Int?
  RB1DisplayOrder          Int?
  IsActiveForGrade         Int?
  cDel                     Boolean
  RatioQuiz                Float?
  RatioBeforeMidTerm       Float?
  RatioAfterMidTerm        Float?
  RatioMidTerm             Float?
  RatioLateTerm            Float?
  RatioQuizPass            Float?
  IsUserAllowedToEditRatio Boolean

  @@id([SchoolID, PlanCourseId], map: "PK_TPlanCourse")
  @@index([sPlaneID, PlanId, CourseStatus, IsActive, SchoolID], map: "IDX_M_6856_6855")
  @@index([sPlaneID], map: "IDX_M_6859_6858")
  @@index([IsActive, SchoolID, nYear, cDel], map: "INDEX_VV_100030_100029")
  @@index([CourseStatus, IsActive, SchoolID, cDel], map: "INDEX_VV_111852_111851")
  @@index([PlanId, CourseStatus, IsActive, SchoolID, cDel], map: "INDEX_VV_156376_156375")
  @@index([IsActive, SchoolID, cDel], map: "INDEX_VV_20736_20735")
  @@index([sPlaneID, SchoolID], map: "INDEX_VV_291_290")
  @@index([PlanId], map: "INDEX_VV_32554_32553")
  @@index([PlanId], map: "INDEX_VV_6065602_6065601")
  @@index([PlanCourseId], map: "INDEX_VV_64745_64744")
  @@index([CourseStatus, IsActive, SchoolID, nYear, cDel], map: "INDEX_VV_89903_89902")
  @@index([CourseStatus, IsActive, SchoolID], map: "INDEX_VV_90906_90905")
  @@index([CourseStatus, IsActive, SchoolID, cDel], map: "INDEX_VV_93421_93420")
  @@index([PlanId, sPlaneID, CourseStatus, IsActive, SchoolID], map: "IX_TPlanCourse_2")
  @@index([PlanId], map: "IX_TPlanCourse_SchoolID_nYear")
}

model TPlanCourseAdjustedTerm {
  PlanCourseAdjustedTermId Int       @default(autoincrement())
  PlanCourseId             Int
  nTerm                    String    @db.NVarChar(20)
  IsActive                 Boolean?
  SchoolID                 Int
  CreatedBy                Int?
  UpdatedBy                Int?
  CreatedDate              DateTime? @db.DateTime
  UpdatedDate              DateTime? @db.DateTime
  cDel                     Boolean

  @@id([SchoolID, PlanCourseAdjustedTermId], map: "PK_TPlanCourseAdjustedTerm")
  @@index([PlanCourseId, nTerm], map: "IX_TPlanCourseAdjustedTerm")
}

model TPlanCourseStudent {
  PlanCourseStudentId Int       @default(autoincrement())
  PlanCourseId        Int
  sID                 Int
  cDel                Boolean
  CreatedBy           Int?
  Updatedby           Int?
  CreatedDate         DateTime? @db.DateTime
  UpdatedDate         DateTime? @db.DateTime
  SchoolID            Int
  nTerm               String?   @db.NVarChar(40)
  IsActive            Boolean
  nTermSubLevel2      Int?
  nTSubLevel          Int

  @@id([SchoolID, PlanCourseStudentId], map: "PK_TPlanCourseStudent")
  @@index([sID, PlanCourseId, SchoolID, nTerm, IsActive, nTermSubLevel2, nTSubLevel], map: "IDX_M_16454_16453")
  @@index([IsActive, PlanCourseId, sID, nTerm, nTermSubLevel2, nTSubLevel], map: "IDX_M_4350_4349")
  @@index([SchoolID, IsActive, nTerm], map: "INDEX_VV_1353_1352")
  @@index([PlanCourseId], map: "INDEX_VV_5224395_5224394")
  @@index([PlanCourseId], map: "INDEX_VV_53306_53305")
  @@index([SchoolID, IsActive], map: "INDEX_VV_89991_89990")
  @@index([SchoolID, nTerm, IsActive, nTermSubLevel2, nTSubLevel], map: "INDEX_VV_90061_90060")
}

model TPlanCourseTeacher {
  PlanCourseTeacherId Int       @default(autoincrement())
  PlanCourseId        Int
  sEmp                Int
  IsActive            Boolean?
  SchoolID            Int
  CreatedBy           Int?
  UpdatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  UpdatedDate         DateTime? @db.DateTime
  cDel                Boolean

  @@id([SchoolID, PlanCourseTeacherId], map: "PK_TPlanCourseTeacher")
  @@index([IsActive, SchoolID], map: "INDEX_VV_116516_116515")
  @@index([PlanCourseId, IsActive, SchoolID, cDel], map: "INDEX_VV_5130749_5130748")
  @@index([sEmp, IsActive, SchoolID, PlanCourseId], map: "INDEX_VV_72615_72614")
  @@index([IsActive, SchoolID], map: "INDEX_VV_97811_97810")
  @@index([PlanCourseId], map: "IX_TPlanCourseTeacher_IsActive_SchoolID")
}

model TPlanCourseTerm {
  PlanCourseTermId Int       @default(autoincrement())
  PlanCourseId     Int
  nTerm            String    @db.NVarChar(20)
  IsActive         Boolean?
  SchoolID         Int
  CreatedBy        Int?
  UpdatedBy        Int?
  CreatedDate      DateTime? @db.DateTime
  UpdatedDate      DateTime? @db.DateTime
  cDel             Boolean

  @@id([SchoolID, PlanCourseTermId], map: "PK_TPlanCourseTerm")
  @@index([PlanCourseId], map: "IDX_M_48351_48350")
  @@index([nTerm, IsActive, SchoolID], map: "INDEX_VV_32208_32207")
  @@index([PlanCourseId], map: "INDEX_VV_60273_60272")
  @@index([IsActive, SchoolID, nTerm], map: "INDEX_VV_98092_98091")
  @@index([PlanCourseId, nTerm], map: "IX_TPlanCourseTerm")
  @@index([PlanCourseId], map: "IX_TPlanCourseTerm_nTerm_SchoolID")
  @@index([nTerm, IsActive, SchoolID], map: "TPlanCourseTerm_nTerm_iSActive_SchoolID")
}

model TPlane {
  sPlaneID        Int       @default(autoincrement())
  sPlaneName      String?   @db.NVarChar(250)
  cDel            String?   @db.Char(1)
  nCredit         Float?
  courseCode      String?   @db.NVarChar(50)
  courseType      Int?
  courseHour      Float?
  courseTotalHour Float?
  courseGroup     Int?
  nTSubLevel      String?   @db.NVarChar(50)
  nTerm           Int?
  courseStatus    Int?
  sortNumber      Int?
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  CourseCodeEn    String?   @db.NVarChar(100)
  CourseNameEn    String?   @db.NVarChar(500)

  @@id([SchoolID, sPlaneID], map: "PK_TPlane")
  @@index([sPlaneName], map: "IDX_M_1481_1480")
  @@index([SchoolID, nTSubLevel], map: "INDEX_VV_100337_100336")
  @@index([sPlaneID], map: "INDEX_VV_12048_12047")
  @@index([nTSubLevel], map: "INDEX_VV_12484_12483")
  @@index([courseCode], map: "INDEX_VV_126390_126389")
  @@index([cDel, SchoolID], map: "INDEX_VV_91095_91094")
  @@index([cDel, SchoolID, nTSubLevel], map: "INDEX_VV_94473_94472")
  @@index([courseGroup, courseCode, courseType, nTerm, nTSubLevel, sortNumber], map: "IX_TPlane")
}

model TPlane_TSubLevel {
  sPlaneID    Int
  nTSubLevel  Int
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, sPlaneID, nTSubLevel], map: "PK_TPlane_TSubLevel")
}

model TPlanList {
  PlanListID     Int       @default(autoincrement())
  nPlaneDay      Int?
  dTimeStart_IN  DateTime? @db.DateTime
  dTimeStart_OUT DateTime? @db.DateTime
  dTimeEnd_IN    DateTime? @db.DateTime
  dTimeEnd_OUT   DateTime? @db.DateTime
  TTermSublv     Int?
  sPlaneID       Int?
  cDel           String?   @db.Char(1)
  sID            Int?
  sEmp           Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime

  @@id([SchoolID, PlanListID], map: "PK_TPlanList")
}

model TPlanOwner {
  nPlanOwnerID       Int       @default(autoincrement())
  sEMP               Int
  changeScoreAnytime Int
  cDel               Int?
  sPlaneID           Int
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime

  @@id([SchoolID, nPlanOwnerID], map: "PK_TPlanTeacher")
}

model TPlanTermSubLevel2 {
  PlanTermSubLevel2Id Int      @default(autoincrement())
  PlanId              Int
  nTermSubLevel2      Int
  CreatedDate         DateTime @db.DateTime
  CreatedBy           Int?
  UpdatedDate         DateTime @db.DateTime
  UpdatedBy           Int?
  IsActive            Boolean?
  SchoolID            Int
  cDel                Boolean

  @@id([SchoolID, PlanTermSubLevel2Id], map: "PK_TPlanTermSubLevel2")
  @@index([nTermSubLevel2, IsActive, SchoolID], map: "IDX_M_3792_3791")
  @@index([PlanId, IsActive, SchoolID, nTermSubLevel2], map: "IDX_M_4988_4987")
  @@index([IsActive, SchoolID, PlanId], map: "INDEX_VV_47796_47795")
  @@index([nTermSubLevel2], map: "INDEX_VV_56707_56706")
  @@index([nTermSubLevel2], map: "INDEX_VV_PLANID_ISACTIVE_SchoolID")
  @@index([PlanId, nTermSubLevel2], map: "IX_TPlanTermSubLevel2_1")
  @@index([PlanId], map: "IX_VV_TPlanTermSubLevel2_IsActive_SchoolID")
}

model TPreRegister {
  preRegisterId               Int       @default(autoincrement())
  StudentTitle                Int?
  sName                       String?   @db.NVarChar(256)
  sLastname                   String?   @db.NVarChar(256)
  sIdentification             String?   @db.NVarChar(13)
  dBirth                      DateTime? @db.DateTime
  cSex                        String?   @db.Char(1)
  sPhone                      String?   @db.NVarChar(20)
  sEmail                      String?   @db.NVarChar(256)
  sAddress                    String?   @db.NVarChar(512)
  sCity                       String?   @db.NVarChar(512)
  sPostalcode                 String?   @db.NVarChar(10)
  sCountry                    String?   @db.NVarChar(512)
  cType                       String?   @db.Char(1)
  cDel                        Int?
  nTermSubLevel2              Int?
  sStudentID                  String?   @db.NVarChar(20)
  sStudentNameEN              String?   @db.NVarChar(50)
  sStudentLastEN              String?   @db.NVarChar(50)
  sStudentRace                String?   @db.NVarChar(50)
  sStudentNation              String?   @db.NVarChar(50)
  sStudentReligion            String?   @db.NVarChar(50)
  sStudentIdCardNumber        String?   @db.NVarChar(20)
  sStudentHomeNumber          String?   @db.NVarChar(50)
  sStudentSoy                 String?   @db.NVarChar(50)
  sStudentTumbon              String?   @db.NVarChar(50)
  sStudentProvince            String?   @db.NVarChar(50)
  sStudentMuu                 String?   @db.NVarChar(50)
  sStudentRoad                String?   @db.NVarChar(50)
  sStudentAumpher             String?   @db.NVarChar(50)
  sStudentPost                String?   @db.NVarChar(50)
  sStudentPicture             String?   @db.NVarChar(255)
  sNickName                   String?   @db.NVarChar(50)
  nSonNumber                  Int?
  dPicUpdate                  DateTime? @db.DateTime
  nPicversion                 Int?
  nStudentNumber              Int?
  nStudentStatus              Int?
  oldSchoolName               String?   @db.NVarChar(250)
  oldSchoolProvince           String?   @db.NVarChar(50)
  oldSchoolAumpher            String?   @db.NVarChar(50)
  oldSchoolTumbon             String?   @db.NVarChar(50)
  oldSchoolGPA                Float?
  oldSchoolGraduated          String?   @db.NVarChar(2)
  nFamilyTitle                Int?
  sFamilyName                 String?   @db.NVarChar(50)
  sFamilyLast                 String?   @db.NVarChar(50)
  sFamilyRace                 String?   @db.NVarChar(50)
  sFamilyNation               String?   @db.NVarChar(50)
  sFamilyReligion             String?   @db.NVarChar(50)
  sFamilyIdCardNumber         String?   @db.NVarChar(20)
  sFamilyRelate               String?   @db.NVarChar(20)
  sFamilyHomeNumber           String?   @db.NVarChar(50)
  sFamilySoy                  String?   @db.NVarChar(50)
  sFamilyTumbon               String?   @db.NVarChar(50)
  sFamilyProvince             String?   @db.NVarChar(50)
  sFamilyMuu                  String?   @db.NVarChar(50)
  sFamilyRoad                 String?   @db.NVarChar(50)
  sFamilyAumpher              String?   @db.NVarChar(50)
  sFamilyPost                 String?   @db.NVarChar(50)
  sPhoneOne                   String?   @db.NVarChar(30)
  sPhoneTwo                   String?   @db.NVarChar(30)
  sPhoneThree                 String?   @db.NVarChar(30)
  sPhoneMail                  String?   @db.NVarChar(50)
  FatherTitle                 Int?
  sFatherFirstName            String?   @db.NVarChar(50)
  sFatherLastName             String?   @db.NVarChar(50)
  sFatherNation               String?   @db.NVarChar(50)
  sFatherRace                 String?   @db.NVarChar(50)
  sFatherReligion             String?   @db.NVarChar(50)
  sFatherIdCardNumber         String?   @db.NVarChar(50)
  sFatherHomeNumber           String?   @db.NVarChar(50)
  sFatherSoy                  String?   @db.NVarChar(50)
  sFatherTumbon               String?   @db.NVarChar(50)
  sFatherProvince             String?   @db.NVarChar(50)
  sFatherMuu                  String?   @db.NVarChar(50)
  sFatherRoad                 String?   @db.NVarChar(50)
  sFatherAumpher              String?   @db.NVarChar(50)
  sFatherPost                 String?   @db.NVarChar(50)
  sFatherPhone                String?   @db.NVarChar(50)
  MotherTitle                 Int?
  sMotherFirstName            String?   @db.NVarChar(50)
  sMotherLastName             String?   @db.NVarChar(50)
  sMotherNation               String?   @db.NVarChar(50)
  sMotherRace                 String?   @db.NVarChar(50)
  sMotherReligion             String?   @db.NVarChar(50)
  sMotherIdCardNumber         String?   @db.NVarChar(50)
  sMotherHomeNumber           String?   @db.NVarChar(50)
  sMotherSoy                  String?   @db.NVarChar(50)
  sMotherTumbon               String?   @db.NVarChar(50)
  sMotherProvince             String?   @db.NVarChar(50)
  sMotherMuu                  String?   @db.NVarChar(50)
  sMotherRoad                 String?   @db.NVarChar(50)
  sMotherAumpher              String?   @db.NVarChar(50)
  sMotherPost                 String?   @db.NVarChar(50)
  sMotherPhone                String?   @db.NVarChar(50)
  nWeight                     Float?
  nHeight                     Float?
  sBlood                      String?   @db.NVarChar(10)
  sSickFood                   String?   @db.NVarChar(250)
  sSickDrug                   String?   @db.NVarChar(250)
  sSickOther                  String?   @db.NVarChar(250)
  sSickNormal                 String?   @db.NVarChar(250)
  sSickDanger                 String?   @db.NVarChar(250)
  registerStatus              Int
  paymentStatus               Int
  registerYear                Int
  registerCode                String    @db.NVarChar(20)
  addressLat                  Float?
  addressLng                  Float?
  moveInDate                  DateTime? @db.DateTime
  optionCourse                Int?
  optionLevel                 Int?
  optionTime                  Int?
  optionBranch                Int?
  saveAsSID                   Int?
  knowFrom9txt                String?   @db.NVarChar(200)
  knowFrom9                   Int?
  knowFrom8txt                String?   @db.NVarChar(200)
  knowFrom8                   Int?
  knowFrom7txt                String?   @db.NVarChar(200)
  knowFrom7                   Int?
  knowFrom6                   Int?
  knowFrom5txt                String?   @db.NVarChar(200)
  knowFrom5                   Int?
  knowFrom4                   Int?
  knowFrom3                   Int?
  knowFrom2                   Int?
  knowFrom1                   Int?
  motherIncome                String?   @db.NVarChar(50)
  fatherIncome                String?   @db.NVarChar(50)
  knowFrom10                  Int?
  knowFrom11                  Int?
  addDate                     DateTime? @db.DateTime
  sFamilyNameEN               String?   @db.NVarChar(50)
  sFamilyLastEN               String?   @db.NVarChar(50)
  dFamilyBirthDay             DateTime? @db.DateTime
  nFamilyRequestStudyMoney    Int?
  sFamilyGraduated            Int?
  sFamilyJob                  String?   @db.NVarChar(200)
  sFamilyWorkPlace            String?   @db.NVarChar(200)
  nFamilyIncome               Float?
  sFatherNameEN               String?   @db.NVarChar(100)
  sFatherLastEN               String?   @db.NVarChar(100)
  dFatherBirthDay             DateTime? @db.DateTime
  sFatherGraduated            Int?
  sFatherJob                  String?   @db.NVarChar(100)
  sFatherWorkPlace            String?   @db.NVarChar(200)
  sFatherPhone2               String?   @db.NVarChar(20)
  sFatherPhone3               String?   @db.NVarChar(20)
  nFatherIncome               Float?
  sMotherNameEN               String?   @db.NVarChar(100)
  sMotherLastEN               String?   @db.NVarChar(100)
  dMotherBirthDay             DateTime? @db.DateTime
  sMotherGraduated            Int?
  sMotherJob                  String?   @db.NVarChar(100)
  sMotherWorkPlace            String?   @db.NVarChar(200)
  sMotherPhone2               String?   @db.NVarChar(20)
  sMotherPhone3               String?   @db.NVarChar(20)
  nMotherIncome               Float?
  nSonTotal                   Int?
  nRelativeStudyHere          Int?
  sNickNameEN                 String?   @db.NVarChar(100)
  sStudentHomeRegisterCode    String?   @db.NVarChar(20)
  stayWithTitle               Int?
  stayWithName                String?   @db.NVarChar(100)
  stayWithLast                String?   @db.NVarChar(100)
  stayWithEmergencyCall       String?   @db.NVarChar(20)
  stayWithEmail               String?   @db.NVarChar(100)
  HomeType                    Int?
  friendSID                   Int?
  houseRegistrationNumber     String?   @db.NVarChar(20)
  houseRegistrationMuu        String?   @db.NVarChar(100)
  houseRegistrationSoy        String?   @db.NVarChar(100)
  houseRegistrationRoad       String?   @db.NVarChar(100)
  houseRegistrationProvince   Int?
  houseRegistrationAumpher    Int?
  houseRegistrationTumbon     Int?
  houseRegistrationPost       String?   @db.NVarChar(20)
  houseRegistrationPhone      String?   @db.NVarChar(20)
  bornFrom                    String?   @db.NVarChar(100)
  bornFromProvince            Int?
  bornFromAumpher             Int?
  bornFromTumbon              Int?
  moveOutReason               String?   @db.NVarChar(200)
  sStudentHousePhone          String?   @db.NVarChar(50)
  friendName                  String?   @db.NVarChar(100)
  friendLastName              String?   @db.NVarChar(100)
  friendSubLevel              Int?
  friendPhone                 String?   @db.NVarChar(30)
  familyStatus                Int?
  sStudentNameOther           String?   @db.NVarChar(50)
  sStudentLastOther           String?   @db.NVarChar(50)
  StudentType                 String?   @db.NVarChar(1)
  RegisterPlanSetupID         Int?
  ExamCode                    String?   @db.NVarChar(20)
  StudentCategory             String?   @db.NVarChar(1)
  FatherAnnualIncome          String?   @db.NVarChar(30)
  FatherEmail                 String?   @db.NVarChar(100)
  MotherAnnualIncome          String?   @db.NVarChar(30)
  MotherEmail                 String?   @db.NVarChar(100)
  ParentAnnualIncome          String?   @db.NVarChar(30)
  ParentEmail                 String?   @db.NVarChar(100)
  ExamResults                 String?   @db.NVarChar(1)
  ExamResultsUpdateBy         Int?
  ExamResultsUpdateDate       DateTime? @db.DateTime
  SchoolID                    Int
  CreatedBy                   Int?
  UpdatedBy                   Int?
  CreatedDate                 DateTime? @db.DateTime
  UpdatedDate                 DateTime? @db.DateTime
  ExamSeatNo                  String?   @db.NVarChar(20)
  RegisterExamRoomID          Int?
  CompleteDocuments           String?   @db.NVarChar(1)
  CompleteDocumentsUpdateBy   Int?
  CompleteDocumentsUpdateDate DateTime? @db.DateTime
  CompleteDocumentsInfo       String?
  MainPlan                    Int?
  BackupPlans                 String?   @db.NVarChar(1200)

  @@id([SchoolID, preRegisterId], map: "PK_TPreRegister")
  @@index([cDel, registerYear, SchoolID], map: "INDEX_VV_100028_100027")
  @@index([optionLevel, SchoolID], map: "INDEX_VV_122563_122562")
  @@index([cDel, paymentStatus, registerYear, SchoolID], map: "INDEX_VV_23354_23353")
  @@index([SchoolID, RegisterExamRoomID], map: "INDEX_VV_27247_27246")
  @@index([cDel, registerYear, SchoolID, nTermSubLevel2], map: "INDEX_VV_281_280")
  @@index([cDel, SchoolID], map: "INDEX_VV_54952_54951")
  @@index([registerYear, optionLevel, RegisterPlanSetupID, SchoolID], map: "INDEX_VV_5661466_5661465")
  @@index([registerYear, SchoolID], map: "INDEX_VV_5661856_5661855")
  @@index([registerYear, cDel, optionLevel, StudentType, RegisterPlanSetupID, SchoolID], map: "INDEX_VV_5849125_5849124")
  @@index([RegisterPlanSetupID], map: "INDEX_VV_6066003_6066002")
  @@index([cDel, optionLevel, RegisterPlanSetupID, SchoolID], map: "INDEX_VV_6067482_6067481")
  @@index([cDel, registerYear, optionCourse, SchoolID], map: "INDEX_VV_65542_65541")
  @@index([cDel, registerYear, SchoolID], map: "INDEX_VV_72767_72766")
  @@index([sName, sLastname, cDel], map: "INDEX_VV_78800_78799")
  @@index([saveAsSID], map: "INDEX_VV_86461_86460")
  @@index([cDel, registerYear, SchoolID], map: "INDEX_VV_92421_92420")
  @@index([cDel, SchoolID], map: "INDEX_VV_92996_92995")
  @@index([cDel, registerYear, optionCourse, SchoolID], map: "INDEX_VV_93400_93399")
  @@index([cDel, optionLevel, StudentType, SchoolID], map: "INDEX_VV_94653_94652")
  @@index([cDel, registerYear, SchoolID], map: "INDEX_VV_96139_96138")
  @@index([preRegisterId], map: "IX_VV_TPreRegister_preRegisterId")
  @@index([sIdentification, registerYear, SchoolID], map: "IX_VV_TPreRegister_sIdentification_registerYear_SchoolID")
  @@index([sIdentification, SchoolID], map: "IX_VV_TPreRegister_sIdentification_SchoolID")
}

model TPreRegisterDocument {
  PreRegisterDocumentID Int       @id(map: "PK_TPREREGISTERDOCUMENT") @default(autoincrement())
  preRegisterId         Int?
  DocumentID            Int?
  Type                  Int?
  VFIID                 Int?
  FileName              String?   @db.NVarChar(100)
  ContentType           String?   @db.NVarChar(200)
  FilePath              String?   @db.NVarChar(300)
  SchoolID              Int?
  UpdateDate            DateTime? @db.DateTime

  @@index([preRegisterId], map: "IX_TPreRegisterDocument_preRegisterId")
}

model TpreRegisterOption {
  preRegisterOptionId Int       @default(autoincrement())
  type                Int?
  optionDescription   String?   @db.NVarChar(50)
  optionIndex         Int?
  optionValue         String?   @db.NVarChar(50)
  cDel                Int?
  SchoolID            Int
  CreatedBy           Int?
  UpdatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  UpdatedDate         DateTime? @db.DateTime

  @@id([SchoolID, preRegisterOptionId], map: "PK_TpreRegisterOption")
}

model TPreRegisterRequiredCategory {
  CategoryID     Int       @id(map: "PK_TPREREGISTERREQUIREDCATEGOR") @default(autoincrement())
  CategoryName   String?   @db.VarChar(50)
  CategoryNameEn String?   @db.VarChar(50)
  Order          Int?
  IsDel          Boolean?
  CreateDate     DateTime? @db.DateTime
}

model TPreRegisterRequiredField {
  VFIID      Int
  CategoryID Int?
  SchoolID   Int
  Status     Boolean?
  UpdateDate DateTime? @db.DateTime
  UpdateBy   Int?

  @@id([VFIID, SchoolID], map: "PK_TPREREGISTERREQUIREDFIELD")
  @@index([CategoryID, SchoolID], map: "INDEX_VV_18278_18277")
  @@index([CategoryID], map: "INDEX_VV_4911495_4911494")
  @@index([SchoolID], map: "INDEX_VV_90188_90187")
  @@index([Status, CategoryID, SchoolID], map: "IX_TPreRegisterRequiredField_CategoryID_SchoolID")
}

model TPreRegisterRequiredFieldInitiate {
  VFIID          Int       @id(map: "PK_TPREREGISTERREQUIREDFIELDIN") @default(autoincrement())
  CategoryID     Int?
  No             String?   @db.VarChar(10)
  IsHead         Boolean?
  FieldName      String?   @db.VarChar(200)
  FieldNameEn    String?   @db.VarChar(200)
  InputFieldName String?   @db.VarChar(50)
  DefaultStatus  Boolean?
  Order          Int?
  IsDel          Boolean?
  CreateDate     DateTime? @db.DateTime
}

model TPreRegisterSendMail {
  SendMailID    Int       @id(map: "PK_TPreRegisterSendMail") @default(autoincrement())
  preRegisterId Int
  SendTo        String?   @db.NVarChar(250)
  SendFrom      String?   @db.NVarChar(250)
  Title         String?   @db.NVarChar(150)
  Message       String?   @db.Text
  SendDate      DateTime? @db.DateTime
  SendBy        Int?
}

model TProduct {
  nProductID  Int       @default(autoincrement())
  sProduct    String?   @db.NVarChar(512)
  sBarCode    String?   @db.NVarChar(50)
  nNumber     Int?
  nCost       Decimal?  @db.Decimal(18, 2)
  nPrice      Decimal?  @db.Decimal(18, 2)
  nBalance    Int?
  nType       Int?
  cDel        String?   @db.Char(1)
  nWarn       Int?
  cStock      String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  UnitID      Int?

  @@id([SchoolID, nProductID], map: "PK_TProduct")
  @@index([sProduct], map: "IDX_M_99_98")
  @@index([nNumber], map: "INDEX_VV_1036_1035")
  @@index([nType, cDel, SchoolID], map: "INDEX_VV_18354_18353")
  @@index([sProduct], map: "INDEX_VV_6021101_6021100")
  @@index([nProductID, cDel], map: "INDEX_VV_90220_90219")
  @@index([sBarCode, SchoolID, nProductID], map: "IX_TProduct_sBarCode_SchoolID_nProductID")
  @@index([sProduct], map: "public_TProduct_IDX_M_99_98")
  @@index([nNumber], map: "public_TProduct_INDEX_VV_1036_1035")
  @@index([nType, cDel, SchoolID], map: "public_TProduct_INDEX_VV_18354_18353")
  @@index([sProduct], map: "public_TProduct_INDEX_VV_6021101_6021100")
  @@index([nProductID, cDel], map: "public_TProduct_INDEX_VV_90220_90219")
  @@index([sBarCode, SchoolID, nProductID], map: "public_TProduct_IX_TProduct_sBarCode_SchoolID_nProductID")
  @@index([nProductID, nType], map: "TProduct_idx_tproduct_nproductid_ntype")
  @@index([nProductID], map: "TProduct_idx_tproduct_productid")
  @@index([SchoolID], map: "TProduct_idx_tproduct_schoolid")
}

model TProductStock {
  ID           Int       @id(map: "PK_TProductStock") @default(autoincrement())
  SchoolID     Int
  ProductID    Int
  ProductName  String?   @db.NVarChar(512)
  Barcode      String?   @db.NVarChar(50)
  nNumber      Int
  Quantity     Int?
  CountSell    Int?
  CountStock   Int
  ShopID       Int
  ShopName     String?   @db.NVarChar(150)
  StockStatus  String?   @db.Char(1)
  nType        Int?
  BusinessDate DateTime? @db.Date
  Tstamp       DateTime  @default(now(), map: "DF__TProductS__Tstam__039170F0") @db.DateTime
  SalesQty     Int       @default(0, map: "DF__TProductS__Sales__04859529")

  @@index([SchoolID], map: "INDEX_VV_110596_110595")
  @@index([SchoolID], map: "INDEX_VV_131054_131053")
  @@index([ProductID], map: "INDEX_VV_18352_18351")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TProductStockNew {
  ID           Int       @default(autoincrement())
  SchoolID     Int
  ProductID    Int
  ProductName  String?   @db.NVarChar(512)
  Barcode      String?   @db.NVarChar(50)
  nNumber      Int
  Quantity     Int?
  CountSell    Int?
  CountStock   Int
  ShopID       Int
  ShopName     String?   @db.NVarChar(150)
  StockStatus  String?   @db.Char(1)
  nType        Int?
  BusinessDate DateTime? @db.Date
  Tstamp       DateTime  @db.DateTime
  SalesQty     Int

  @@ignore
}

model TQuestionnaireEQ {
  QuestionnaireEQID  Int       @default(autoincrement())
  SchoolID           Int
  TermID             String?   @db.VarChar(20)
  YearID             Int?
  sID                Int?
  QuestionDes        String?   @db.NVarChar(250)
  QuestionScore      Int?
  QuestionSmallGroup Int?
  QuestionLargeGroup Int?
  CreatedDate        DateTime? @db.DateTime
  CreatedBy          Int?
  UpdatedDate        DateTime? @db.DateTime
  UpdatedBy          Int?
  cDel               Boolean
  EQType             Int?
  ChoiceNo           Int?

  @@id([SchoolID, QuestionnaireEQID], map: "PK_QuestionnaireEQID")
  @@index([sID, SchoolID, TermID, cDel, EQType], map: "INDEX_VV_5141172_5141171")
  @@index([SchoolID, CreatedDate], map: "INDEX_VV_72655_72654")
  @@index([SchoolID, TermID, YearID, sID, cDel, EQType], map: "INDEX_VV_90725_90724")
}

model TQuestionnaireScreening {
  ID                    Int       @default(autoincrement())
  SchoolID              Int
  RoomID                Int
  StudentID             Int
  TermID                String    @db.VarChar(20)
  YearID                Int?
  Academic              Int?
  AcademicRisk          String?   @db.VarChar(50)
  AcademicRiskNote      String?   @db.VarChar(100)
  AcademicProblem       String?   @db.VarChar(50)
  AcademicProblemNote   String?   @db.VarChar(100)
  Abilities             Int?
  AbilitiesNote         String?   @db.VarChar(100)
  Health                Int?
  HealthRisk            String?   @db.VarChar(50)
  HealthRiskNote        String?   @db.VarChar(100)
  HealthProblem         String?   @db.VarChar(50)
  HealthProblemNote     String?   @db.VarChar(100)
  MentalHealthBehavior1 Int?
  MentalHealthBehavior2 Int?
  MentalHealthBehavior3 Int?
  MentalHealthBehavior4 Int?
  MentalHealthBehavior5 Int?
  Economic              Int?
  EconomicRisk          String?   @db.VarChar(50)
  EconomicRiskMoney     String?   @db.VarChar(100)
  EconomicRiskNote      String?   @db.VarChar(100)
  EconomicProblem       String?   @db.VarChar(50)
  EconomicProblemNote   String?   @db.VarChar(100)
  Protection            Int?
  ProtectionRisk        String?   @db.VarChar(50)
  ProtectionProblem     String?   @db.VarChar(50)
  ProtectionProblemNote String?   @db.VarChar(100)
  SubstanceAbuse        Int?
  Sex                   Int?
  OtherSide             Int?
  OtherSideRiskNote     String?   @db.VarChar(100)
  OtherSideProblemNote  String?   @db.VarChar(100)
  Status                Int?
  IsDel                 Boolean?
  CreatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedBy             Int?
  UpdatedDate           DateTime? @db.DateTime

  @@id([ID, SchoolID, RoomID, StudentID, TermID], map: "PK_TQuestionnaireScreening")
  @@index([SchoolID, YearID], map: "INDEX_VV_72048_72047")
  @@index([SchoolID, Status, TermID], map: "INDEX_VV_75308_75307")
  @@index([SchoolID, Status], map: "IX_VV_TQuestionnaireScreening_SchoolID_Status")
  @@index([SchoolID, StudentID, Status, IsDel], map: "IX_VV_TQuestionnaireScreening_SchoolID_StudentID_Status_IsDel")
}

model TQuestionnaireSDQ {
  QuestionnaireSDQID Int       @default(autoincrement())
  SchoolID           Int
  TermID             String?   @db.VarChar(20)
  YearID             Int?
  sID                Int?
  QuestionDes        String?   @db.NVarChar(250)
  QuestionScore      Int?
  QuestionGroup      Int?
  CreatedDate        DateTime? @db.DateTime
  CreatedBy          Int?
  UpdatedDate        DateTime? @db.DateTime
  UpdatedBy          Int?
  cDel               Boolean
  SDQType            Int?
  ChoiceNo           Int?

  @@id([SchoolID, QuestionnaireSDQID], map: "PK_QuestionnaireSDQ")
  @@index([SchoolID, CreatedDate], map: "INDEX_VV_1374_1373")
  @@index([SchoolID, TermID, sID, cDel, SDQType], map: "INDEX_VV_351_350")
  @@index([sID, SchoolID, TermID, QuestionDes, cDel, SDQType, ChoiceNo], map: "INDEX_VV_5168230_5168229")
  @@index([QuestionDes], map: "INDEX_VV_6067480_6067479")
  @@index([sID, SchoolID, cDel, SDQType, QuestionGroup], map: "IX_TQuestionnaireSDQ_sID_SchoolID_cDel_SDQType_QuestionGroup")
}

model TQuiz {
  nNumber         Int       @default(autoincrement())
  sID             String    @db.NVarChar(50)
  sPlanid         String    @db.NVarChar(50)
  sTerm           String    @db.NVarChar(50)
  dscore          Decimal?  @db.Decimal(18, 0)
  sNote           String?   @db.NVarChar(Max)
  dDatetimeCreate DateTime? @db.DateTime
  dDatetimeUpdate DateTime? @db.DateTime
  sEmp            Int?
  dReScore        Decimal?  @db.Decimal(18, 0)
  QuizDay         DateTime? @db.Date
  dfullScore      Decimal?  @db.Decimal(18, 0)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, nNumber, sID, sPlanid, sTerm], map: "PK_TQuiz")
}

model TrackingData {
  ID      Int     @id(map: "PK_TrackingData") @default(autoincrement())
  PID     Int?
  ChVer   BigInt?
  ChCrVer BigInt?
  ChOp    String? @db.NVarChar(200)
  sPID    String? @db.NVarChar(200)
}

model TRegisterExamRoom {
  RegisterExamRoomID  Int       @default(autoincrement())
  nTSubLevel          Int?
  RegisterPlanSetupID Int?
  ExamRoomName        String?   @db.NVarChar(150)
  Seats               Int?
  SchoolID            Int
  UpdateDate          DateTime? @db.DateTime
  UpdateBy            Int?
  IsDel               Boolean?

  @@id([RegisterExamRoomID, SchoolID], map: "PK_TREGISTEREXAMROOM")
}

model TRegisterExplanation {
  RegisterExplanationID Int       @default(autoincrement())
  Description           String?   @db.Text
  UpdateDate            DateTime? @db.DateTime
  UpdateBy              Int?
  SchoolID              Int
  CreatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  cDel                  Boolean

  @@id([SchoolID, RegisterExplanationID], map: "PK_TREGISTEREXPLANATION")
}

model TRegisterPlanSetup {
  RegPlanID           Int       @default(autoincrement())
  RegisterPlanSetupID Int
  nTSubLevel          Int
  PlanName            String?   @db.NVarChar(100)
  PlanCode            String?   @db.NVarChar(10)
  UpdateDate          DateTime? @db.DateTime
  UpdateBy            Int?
  SchoolID            Int
  CreatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  cDel                Boolean

  @@id([SchoolID, RegPlanID, RegisterPlanSetupID, nTSubLevel], map: "PK_TRegisterPlanSetup_1")
  @@index([RegisterPlanSetupID, nTSubLevel], map: "INDEX_VV_24435_24434")
}

model TRegisterRegularity {
  RegisterRegularityID Int       @default(autoincrement())
  nTSubLevel           Int?
  Filename             String?   @db.NVarChar(250)
  UpdateDate           DateTime? @db.DateTime
  UpdateBy             Int?
  SchoolID             Int
  CreatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, RegisterRegularityID], map: "PK_TREGISTERREGULARITY")
}

model TRegisterSetup {
  RegisterSetupID     Int       @default(autoincrement())
  nYear               Int?
  Year                Int?
  StudentType         String?   @db.NVarChar(1)
  nTSubLevel          Int?
  RegisterPlanSetupID Int?
  StudentMax          Int?
  SubmitDocumentDate  DateTime? @db.DateTime
  StartDate           DateTime? @db.DateTime
  EndDate             DateTime? @db.DateTime
  Fee                 Int?
  UpdateDate          DateTime? @db.DateTime
  UpdateBy            Int?
  ExamAnnounce        Int?
  MeetingDate         DateTime? @db.DateTime
  MeetingTime         String?   @db.NVarChar(5)
  MeetingPlace        String?   @db.NVarChar(250)
  AttachmentsPassExam String?   @db.NVarChar(250)
  AttachmentsFailExam String?   @db.NVarChar(250)
  SchoolID            Int
  PlanID              Int?
  PaymentGroupID      Int?
  IsActiveBackupPlan  Boolean?
  OrderPlans          Int?
  BackupPlans         String?   @db.NVarChar(1200)
  CreatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  cDel                Boolean

  @@id([SchoolID, RegisterSetupID], map: "PK_TREGISTERSETUP")
  @@index([SchoolID, cDel, Year, EndDate], map: "INDEX_VV_5668206_5668205")
  @@index([StudentType, nTSubLevel, SchoolID, cDel], map: "INDEX_VV_5941373_5941372")
  @@index([RegisterSetupID], map: "INDEX_VV_93214_93213")
  @@index([Year, nTSubLevel, RegisterPlanSetupID], map: "IX_TRegisterSetup_Year_nTSubLevel_RegisterPlanSetupID")
  @@index([Year, StudentType, nTSubLevel, RegisterPlanSetupID, PaymentGroupID], map: "IX_TRegisterSetup_Year_StudentType_nTSubLevel_RegisterPlanSetupID_PaymentGroupID")
}

model TRoom {
  sRoomID     String    @db.NVarChar(10)
  sRoomName   String?   @db.NVarChar(250)
  cDel        String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, sRoomID], map: "PK_TRoom")
}

model TRoomChange {
  RoomChangeID String    @db.NVarChar(100)
  sID          Int?
  Level2Old    Int?
  Level2New    Int?
  DayChange    DateTime? @db.Date
  SchoolID     Int
  CreatedBy    Int?
  UpdatedBy    Int?
  CreatedDate  DateTime? @db.DateTime
  UpdatedDate  DateTime? @db.DateTime
  cDel         Boolean

  @@id([SchoolID, RoomChangeID], map: "PK_TChangeRoom")
  @@index([SchoolID, cDel, DayChange], map: "INDEX_VV_111866_111865")
  @@index([SchoolID, sID], map: "INDEX_VV_40855_40854")
  @@index([SchoolID, DayChange], map: "INDEX_VV_44646_44645")
  @@index([sID], map: "INDEX_VV_73974_73973")
  @@index([RoomChangeID], map: "INDEX_VV_73980_73979")
}

model TSalesDailyReport {
  dSell          DateTime? @db.Date
  price          Decimal?  @db.Decimal(18, 2)
  cost           Decimal?  @db.Decimal(18, 2)
  deduct         Decimal?  @db.Decimal(18, 2)
  shop_id        Int?
  FD_ID          String    @id(map: "PK_SalesDailyReport") @db.UniqueIdentifier
  FD_SchoolID    Int?
  FD_CreatedDate DateTime? @db.DateTime
}

model TSchedule {
  sScheduleID    Int       @default(autoincrement())
  nPlaneDay      Int?
  tStart         DateTime? @db.Time
  tEnd           DateTime? @db.Time
  dTimeStart_IN  DateTime? @db.Time
  dTimeStart_OUT DateTime? @db.Time
  dTimeEnd_IN    DateTime? @db.Time
  dTimeEnd_OUT   DateTime? @db.Time
  nTimeLate      Int?
  dTimeHalf      DateTime? @db.Time
  sClassID       String?   @db.NVarChar(20)
  sPlaneID       Int?
  sEmp           Int?
  nTermTable     Int?
  cActive        Boolean?
  cDel           Boolean?
  calculate      Boolean?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime

  @@id([SchoolID, sScheduleID], map: "PK_TScheduled")
  @@index([nPlaneDay], map: "IDX_M_1440_1439")
  @@index([nPlaneDay, nTermTable, cDel, SchoolID, tEnd], map: "IDX_M_3573_3572")
  @@index([sPlaneID, cDel, SchoolID], map: "IDX_M_40_39")
  @@index([cDel, SchoolID], map: "INDEX_VV_32126_32125")
  @@index([nTermTable, SchoolID], map: "INDEX_VV_636_635")
  @@index([sScheduleID], map: "INDEX_VV_8719_8718")
  @@index([SchoolID, sEmp], map: "INDEX_VV_89919_89918")
  @@index([cDel], map: "INDEX_VV_93469_93468")
  @@index([cDel, SchoolID], map: "INDEX_VV_99552_99551")
  @@index([tStart], map: "IX_TSchedule_TSchedule")
}

model TSchedule_Student {
  sSchedule   String    @db.NVarChar(10)
  sStudent    Int
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, sSchedule, sStudent], map: "PK_TSchedule_Student")
}

model TScheduleTeacher {
  ScheduleTeacherId Int       @default(autoincrement())
  sScheduleID       Int?
  cDel              Boolean?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime
  sEmp              Int?

  @@id([SchoolID, ScheduleTeacherId], map: "PK_TScheduleTeacher")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSchoolIDsTemp {
  SchoolID Int?

  @@ignore
}

model TSchoolRecord {
  nSchoolRecordId Int       @default(autoincrement())
  nTerm           String?   @db.NVarChar(20)
  nTsudentId      Int?
  dAdd            DateTime? @db.DateTime
  dUpdate         DateTime? @db.DateTime
  UserAdd         Int?
  UserUpdate      Int?
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, nSchoolRecordId], map: "PK_TSchoolRecord")
}

model TSchoolRecord_Detail {
  nSchoolRecordId Int       @default(autoincrement())
  sPlaneID        Int
  Grade           String?   @db.NVarChar(20)
  ReGrade         String?   @db.NVarChar(20)
  Note            String?   @db.NVarChar(250)
  Score           String?   @db.NVarChar(20)
  MaxScore        String?   @db.NVarChar(20)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, nSchoolRecordId, sPlaneID], map: "PK_TSchoolRecord_Detail")
}

model TScore {
  ScoreID       Int       @default(autoincrement())
  dScan         DateTime  @db.Date
  ScanStatusE0  Int?
  ScanStatusE1  Int?
  ScanStatusE2  Int?
  TotallAllEmp  Int?
  ScanStatusU0  Int?
  ScanStatusU1  Int?
  ScanStatusU2  Int?
  TotallAllUser Int?
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean

  @@id([SchoolID, ScoreID, dScan], map: "PK_TScore")
}

model TSell {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@id([SchoolID, sSellID], map: "PK_TSell")
  @@unique([dSell, sID, sEmp, nTotal, sID2, shop_id, dayCancal, UserCancel, SchoolID, CardID, Barcode, NFCOrEncrypt, RefPromptPay], map: "Unique_Avoid_Duplicate")
  @@index([nTotal, shop_id, SchoolID, dSell], map: "IDX_M_4230_4229")
  @@index([id], map: "IDX_M_6065_6064")
  @@index([sID2, UserCancel], map: "INDEX_VV_102557_102556")
  @@index([SchoolID, dayCancal], map: "INDEX_VV_103230_103229")
  @@index([dayCancal, SchoolID, cDel], map: "INDEX_VV_10767_10766")
  @@index([sID, UserCancel], map: "INDEX_VV_108381_108380")
  @@index([nTotal, shop_id, dayCancal, SchoolID, DeviceID, dSell], map: "INDEX_VV_114022_114021")
  @@index([dayCancal], map: "INDEX_VV_125038_125037")
  @@index([dayCancal], map: "INDEX_VV_125040_125039")
  @@index([sEmp, DeviceID, dSell], map: "INDEX_VV_128271_128270")
  @@index([dayCancal, dSell], map: "INDEX_VV_12889_12888")
  @@index([shop_id, SchoolID, dSell], map: "INDEX_VV_13789_13788")
  @@index([sID], map: "INDEX_VV_2832_2831")
  @@index([sID], map: "INDEX_VV_5119_5118")
  @@index([sID], map: "INDEX_VV_5140_5139")
  @@index([dSell], map: "INDEX_VV_5192661_5192660")
  @@index([dSell], map: "INDEX_VV_5203457_5203456")
  @@index([dSell], map: "INDEX_VV_53854_53853")
  @@index([dSell], map: "INDEX_VV_55053_55052")
  @@index([sID, dSell], map: "INDEX_VV_567_566")
  @@index([dSell], map: "INDEX_VV_57983_57982")
  @@index([dSell], map: "INDEX_VV_62701_62700")
  @@index([SchoolID, CardID], map: "INDEX_VV_62878_62877")
  @@index([nTotal, sID2, shop_id, dayCancal, SchoolID, dSell], map: "INDEX_VV_66234_66233")
  @@index([PaymentType, RefPromptPay, dSell], map: "INDEX_VV_70285_70284")
  @@index([dayCancal, SchoolID, cDel, dSell], map: "INDEX_VV_8588_8587")
  @@index([shop_id, dayCancal, SchoolID, dSell], map: "INDEX_VV_8706_8705")
  @@index([shop_id, SchoolID, cDel], map: "INDEX_VV_89973_89972")
  @@index([UpdatedTime, dSell, CardID], map: "INDEX_VV_900_899")
  @@index([CardID], map: "INDEX_VV_90706_90705")
  @@index([SchoolID, CardID], map: "INDEX_VV_94240_94239")
  @@index([dSell, ReferenceOrder], map: "IX_TSell")
  @@index([sSellID], map: "IX_TSell_3")
  @@index([CardID, dSell], map: "IX_TSell_CardID_dSell")
  @@index([PaymentType, dayCancal, SchoolID, cDel, dSell], map: "IX_TSell_dayCancal_SchoolID_cDel_dSell")
  @@index([dSell], map: "IX_TSell_SchoolID_CardID")
  @@index([nTotal, shop_id, dayCancal, SchoolID, dSell], map: "IX_TSell_shop_id_dayCancal_SchoolID_dSell")
  @@index([sID], map: "TSell_daycalcal_dsell")
  @@index([sID], map: "TSell_daycancal_schoolid_Dsell")
  @@index([sID], map: "TSell_shopid_daycancal_schoolid_dsell")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSell_1162 {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int?
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int?
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean?
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean?
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSell_24241222 {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@ignore
}

model TSell_API {
  ID          Int      @id(map: "PK_TSell_API") @default(autoincrement())
  SalesInfo   String   @db.NVarChar(Max)
  Tstamp      DateTime @default(now(), map: "DF__TSell_API__Tstam__7DB96760") @db.DateTime
  ProductInfo String?  @db.NVarChar(Max)
  sSellID     Int      @default(0, map: "DF__TSell_API__sSell__17793963")
}

model TSell_API_Backup {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@id([SchoolID, sSellID], map: "PK_TSell_API_Backup")
  @@index([nTotal, shop_id, SchoolID, dSell], map: "IDX_M_API_4230_4229")
  @@index([id], map: "IDX_M_API_6065_6064")
  @@index([sID2, UserCancel], map: "INDEX_VV_API_102557_102556")
  @@index([SchoolID, dayCancal], map: "INDEX_VV_API_103230_103229")
  @@index([dayCancal, SchoolID, cDel], map: "INDEX_VV_API_10767_10766")
  @@index([sID, UserCancel], map: "INDEX_VV_API_108381_108380")
  @@index([nTotal, shop_id, dayCancal, SchoolID, DeviceID, dSell], map: "INDEX_VV_API_114022_114021")
  @@index([dayCancal], map: "INDEX_VV_API_125038_125037")
  @@index([dayCancal], map: "INDEX_VV_API_125040_125039")
  @@index([sEmp, DeviceID, dSell], map: "INDEX_VV_API_128271_128270")
  @@index([dayCancal, dSell], map: "INDEX_VV_API_12889_12888")
  @@index([shop_id, SchoolID, dSell], map: "INDEX_VV_API_13789_13788")
  @@index([dSell], map: "INDEX_VV_API_263_262")
  @@index([sID], map: "INDEX_VV_API_2832_2831")
  @@index([sID], map: "INDEX_VV_API_5119_5118")
  @@index([sID], map: "INDEX_VV_API_5140_5139")
  @@index([dSell], map: "INDEX_VV_API_5192661_5192660")
  @@index([dSell], map: "INDEX_VV_API_5203457_5203456")
  @@index([dSell], map: "INDEX_VV_API_53854_53853")
  @@index([dSell], map: "INDEX_VV_API_55053_55052")
  @@index([sID, dSell], map: "INDEX_VV_API_567_566")
  @@index([dSell], map: "INDEX_VV_API_57983_57982")
  @@index([dSell], map: "INDEX_VV_API_6064175_6064174")
  @@index([sID], map: "INDEX_VV_API_6066211_6066210")
  @@index([dSell], map: "INDEX_VV_API_62701_62700")
  @@index([nTotal, sID2, shop_id, dayCancal, SchoolID, dSell], map: "INDEX_VV_API_66234_66233")
  @@index([sID, sEmp, nTotal, shop_id, SchoolID], map: "INDEX_VV_API_67_66")
  @@index([PaymentType, RefPromptPay, dSell], map: "INDEX_VV_API_70285_70284")
  @@index([dayCancal, SchoolID, cDel, dSell], map: "INDEX_VV_API_8588_8587")
  @@index([shop_id, dayCancal, SchoolID, dSell], map: "INDEX_VV_API_8706_8705")
  @@index([shop_id, SchoolID, cDel], map: "INDEX_VV_API_89973_89972")
  @@index([UpdatedTime, dSell, CardID], map: "INDEX_VV_API_900_899")
  @@index([CardID], map: "INDEX_VV_API_90706_90705")
  @@index([SchoolID, CardID], map: "INDEX_VV_API_94240_94239")
  @@index([dSell, ReferenceOrder], map: "IX_TSell_API_Backup")
  @@index([sSellID], map: "IX_TSell_API_Backup_3")
  @@index([CardID, dSell], map: "IX_TSell_API_Backup_CardID_dSell")
  @@index([nTotal, dayCancal, dSell], map: "IX_TSell_API_Backup_dayCancal_dSell")
  @@index([PaymentType, dayCancal, SchoolID, cDel, dSell], map: "IX_TSell_API_Backup_dayCancal_SchoolID_cDel_dSell")
  @@index([dSell], map: "IX_TSell_API_Backup_SchoolID_CardID")
  @@index([nTotal], map: "IX_TSell_API_Backup_SchoolID_dayCancal_CardID")
  @@index([sID], map: "IX_TSell_API_Backup_SchoolID_dSell")
  @@index([nTotal, shop_id, dayCancal, SchoolID, dSell], map: "IX_TSell_API_Backup_shop_id_dayCancal_SchoolID_dSell")
  @@index([sID], map: "TSell_API_Backup_daycalcal_dsell")
  @@index([sID], map: "TSell_API_Backup_daycancal_schoolid_Dsell")
  @@index([sID], map: "TSell_API_Backup_shopid_daycancal_schoolid_dsell")
}

model TSell_Detail {
  SellDetailsID Int       @default(autoincrement())
  nSell         Int
  nOrder        Int
  nProduct      Int?
  nNumber       Int?
  cDel          String?   @db.Char(1)
  nPrice        Decimal?  @db.Decimal(18, 2)
  nCost         Decimal?  @db.Decimal(18, 2)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  DiscountPer   Int
  DiscountPrice Decimal   @db.Decimal(18, 0)

  @@id([SellDetailsID, nSell, nOrder, SchoolID], map: "PK_TSell_Detail")
  @@index([nProduct], map: "IDX_M_10017_10016")
  @@index([nSell], map: "IDX_TSell_nSell")
  @@index([SchoolID, DiscountPer], map: "INDEX_VV_103278_103277")
  @@index([SchoolID], map: "INDEX_VV_12209_12208")
  @@index([nProduct], map: "INDEX_VV_29381_29380")
  @@index([nProduct, SchoolID], map: "INDEX_VV_3523_3522")
  @@index([nNumber], map: "INDEX_VV_5202668_5202667")
  @@index([SchoolID], map: "INDEX_VV_94367_94366")
  @@index([nNumber], map: "INDEX_VV_998_997")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSell_Detail_1162 {
  SellDetailsID Int?
  nSell         Int?
  nOrder        Int?
  nProduct      Int?
  nNumber       Int?
  cDel          String?   @db.NChar(1)
  nPrice        Decimal?  @db.Decimal(18, 2)
  nCost         Decimal?  @db.Decimal(18, 2)
  SchoolID      Int?
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  DiscountPer   Int?
  DiscountPrice Decimal?  @db.Decimal(18, 0)

  @@ignore
}

model TSell_Detail_History {
  nSell       Int
  nOrder      Int
  nProduct    Int?
  nNumber     Int?
  cDel        String?   @db.Char(1)
  nPrice      Decimal?  @db.Decimal(18, 2)
  nCost       Decimal?  @db.Decimal(18, 2)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, nSell, nOrder], map: "PK_TSell_Detail_History")
}

model TSell_Detail_Recovered {
  SellDetailsID Int       @id(map: "PK_TSell_Detail_Recovered") @default(autoincrement())
  nSell         Int
  nOrder        Int
  nProduct      Int?
  nNumber       Int?
  cDel          String?   @db.Char(1)
  nPrice        Decimal?  @db.Decimal(18, 2)
  nCost         Decimal?  @db.Decimal(18, 2)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  DiscountPer   Int
  DiscountPrice Decimal   @db.Decimal(18, 0)
}

model TSell_DetailDBError {
  SellDetailsID Int       @default(autoincrement())
  nSell         Int
  nOrder        Int
  nProduct      Int?
  nNumber       Int?
  cDel          String?   @db.Char(1)
  nPrice        Decimal?  @db.Decimal(18, 2)
  nCost         Decimal?  @db.Decimal(18, 2)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  DiscountPer   Int
  DiscountPrice Decimal   @db.Decimal(18, 0)

  @@id([SellDetailsID, nSell, nOrder, SchoolID], map: "PK_TSell_DetailDBError")
  @@index([nSell], map: "IDX_TSell_nSellDBError")
}

model TSell_History {
  dSell          DateTime? @db.DateTime
  sID            Int?
  sEmp           Int?
  nSession       Int?
  nTotal         Decimal?  @db.Decimal(18, 2)
  sID2           Int?
  shop_id        Int?
  dayCancal      DateTime? @db.DateTime
  UserCancel     Int?
  id             String?   @db.NVarChar(100)
  sSellID        Int       @default(autoincrement())
  ReferenceOrder String?   @db.NVarChar(30)
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  CardID         String?   @db.UniqueIdentifier

  @@id([SchoolID, sSellID], map: "PK_TSell_History")
}

model TSell_Move {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @id(map: "PK_TSell_Move") @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
}

model TSell_Recovered {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @id(map: "PK_TSell_Recovered") @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSell_TempMismatch {
  dSell            DateTime? @db.DateTime
  sID              Int?
  sID2             Int?
  nTotal           Decimal?  @db.Decimal(18, 2)
  sSellID          Int
  SchoolID         Int
  CardID           String?   @db.UniqueIdentifier
  CardHistoryID    String    @db.UniqueIdentifier
  BorrowingDate    DateTime? @db.DateTime
  ReturnDate       DateTime? @db.DateTime
  NewCardHistoryID String?   @db.UniqueIdentifier

  @@ignore
}

model TSellDBError {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int       @default(autoincrement())
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)
  Processed       Boolean
  ErrorInfo       String?   @db.NVarChar(Max)

  @@id([SchoolID, sSellID], map: "PK_TSellDBError")
  @@index([SchoolID, dSell, SourceIP, Processed], map: "IX_TSellDBError")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSellExtracted {
  dSell           DateTime?
  dSell1          String?   @db.NVarChar(300)
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime?
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int?
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int?
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime?
  UpdatedDate     DateTime?
  cDel            Boolean?
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean?
  UpdatedTime     DateTime?
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@index([SchoolID, CreatedBy], map: "INDEX_VV_44138_44137")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tSellRecovered {
  dSell           String?   @db.NVarChar(200)
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int?
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int?
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     String?   @db.NVarChar(200)
  UpdatedDate     String?   @db.NVarChar(200)
  cDel            Boolean?
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean?
  UpdatedTime     String?   @db.NVarChar(200)
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tSellRemoved {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  SourceIP        String?   @db.NVarChar(200)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TsellRemovedAll {
  dSell           DateTime? @db.DateTime
  sID             Int?
  sEmp            Int?
  nSession        Int?
  nTotal          Decimal?  @db.Decimal(18, 2)
  sID2            Int?
  shop_id         Int?
  dayCancal       DateTime? @db.DateTime
  UserCancel      Int?
  id              String?   @db.NVarChar(100)
  sSellID         Int
  ReferenceOrder  String?   @db.NVarChar(30)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardID          String?   @db.UniqueIdentifier
  DeviceID        String?   @db.NVarChar(200)
  Online          Boolean
  UpdatedTime     DateTime? @db.DateTime
  Barcode         String?   @db.NVarChar(40)
  NFCOrEncrypt    String?   @db.NVarChar(40)
  PaymentType     Int?
  RefPromptPay    String?   @db.NVarChar(300)
  ApplicationName String?   @db.NVarChar(200)
  rn              BigInt?

  @@index([sID], map: "INDEX_VV_448_447")
  @@ignore
}

model TSendDataPSIS {
  SchoolID         Int
  nYear            Int
  sID              Int
  SendDate         DateTime? @db.DateTime
  StatusCode       Int?
  ResponseContent  String?   @db.VarChar(300)
  SendDate2        DateTime? @db.DateTime
  StatusCode2      Int?
  ResponseContent2 String?   @db.VarChar(300)

  @@id([SchoolID, nYear, sID], map: "PK_TSendDataPSIS")
}

model TSendGradePSIS {
  SchoolID        Int
  nYear           Int
  Year            Int?
  nTerm           String    @db.NVarChar(20)
  Term            String?   @db.VarChar(10)
  sID             Int
  sPlaneID        Int
  CourseCode      String?   @db.VarChar(50)
  Grade           String?   @db.VarChar(15)
  SendDate        DateTime? @db.DateTime
  StatusCode      Int?
  ResponseContent String?   @db.VarChar(300)

  @@id([SchoolID, nYear, nTerm, sID, sPlaneID], map: "PK_TSendGradePSIS")
  @@index([Year], map: "INDEX_VV_88022_88021")
}

model TSendSubjectPSIS {
  SchoolID        Int
  sPlaneID        Int
  SendDate        DateTime? @db.DateTime
  StatusCode      Int?
  ResponseContent String?   @db.VarChar(300)

  @@id([SchoolID, sPlaneID], map: "PK_TSendSubjectPSIS")
}

model TSettingExtraTime {
  nSettingExtraTime Int       @default(autoincrement())
  sEMP              Int
  nTermSubLevel2    Int
  nTerm             String    @db.NVarChar(20)
  addDate           DateTime  @db.DateTime
  sPlaneID          Int
  useToken          Int?
  cDel              Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime

  @@id([SchoolID, nSettingExtraTime], map: "PK_TSettingExtraTime")
  @@index([sEMP], map: "INDEX_VV_5898274_5898273")
  @@index([cDel, SchoolID, nTerm], map: "INDEX_VV_71797_71796")
}

model TShop {
  shop_id       Int       @default(autoincrement())
  shop_name     String?   @db.NVarChar(150)
  dayadd        DateTime? @db.DateTime
  dayupdate     DateTime? @db.DateTime
  useradd       Int?
  userupdate    Int?
  del           Boolean?
  mobile        Boolean?
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean
  DeductPercent Int?      @db.TinyInt

  @@id([SchoolID, shop_id], map: "PK_TShop")
  @@index([shop_name], map: "INDEX_VV_1807_1806")
  @@index([shop_name], map: "INDEX_VV_6185_6184")
  @@index([shop_id], map: "IX_TShop_shop_id")
  @@index([shop_name], map: "public_TShop_INDEX_VV_1807_1806")
  @@index([shop_name], map: "public_TShop_INDEX_VV_6185_6184")
  @@index([shop_id], map: "public_TShop_IX_TShop_shop_id")
  @@index([SchoolID], map: "TShop_idx_tshop_schoolid")
  @@index([shop_id], map: "TShop_idx_tshop_shop_id")
}

model TShop_Employees {
  ShopID      Int
  sEmp        Int?
  ShopEmpID   Int       @default(autoincrement())
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, ShopID, ShopEmpID], map: "PK_TShop_Employees")
  @@index([ShopID], map: "INDEX_VV_64266_64265")
  @@index([ShopEmpID], map: "INDEX_VV_65451_65450")
  @@index([sEmp], map: "IX_TShop_Employees")
}

model TSMS {
  nSMS         Int       @default(autoincrement())
  SMSTitle     String?   @db.NVarChar(250)
  SMSDesp      String?   @db.NVarChar(Max)
  SMSType      Int?
  SMSSubType   Int?
  SMSDate      DateTime? @db.Date
  SMSDuration  Int?
  SMSStatus    String?   @db.Char(5)
  SMSAll       String?   @db.Char(5)
  dSend        DateTime? @db.DateTime
  scheduled_id String?   @db.NVarChar(200)
  SMSEMP       String?   @db.Char(1)
  useradd      Int?
  isDel        Boolean?
  nActionType  Int?
  SchoolID     Int
  CreatedBy    Int?
  UpdatedBy    Int?
  CreatedDate  DateTime? @db.DateTime
  UpdatedDate  DateTime? @db.DateTime
  cDel         Boolean
  SMSGroupType Int?
  SMSGroupID   Int?

  @@id([SchoolID, nSMS], map: "PK_TSMS")
  @@index([SchoolID, dSend], map: "INDEX_VV_103245_103244")
  @@index([SchoolID, dSend], map: "INDEX_VV_104676_104675")
  @@index([SchoolID, dSend], map: "INDEX_VV_90731_90730")
  @@index([useradd, SchoolID], map: "INDEX_VV_95030_95029")
  @@index([SMSTitle], map: "IX_TSMS_SchoolID_cDel4")
  @@index([nSMS], map: "TSMS_nSMS")
}

model TSMSGroup {
  SMSGroupID     Int       @default(autoincrement())
  SMSGroupName   String?   @db.NVarChar(200)
  Status         Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean?
  GroupDefault   String?   @db.NVarChar(20)
  SMSGroupNameEn String?   @db.NVarChar(200)

  @@id([SMSGroupID, SchoolID], map: "PK_TSMSGROUP")
  @@index([SMSGroupName], map: "IX_TSMSGroup_CreatedBy_CreatedDate")
  @@index([SchoolID, cDel], map: "IX_TSMSGroup_SchoolID_cDel")
  @@index([Status, SchoolID, cDel], map: "IX_VV_TSMSGroup_Status_SchoolID_cDel")
}

model TSMSGroupUser {
  SMSGroupID  Int
  UserID      Int
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean?

  @@id([SMSGroupID, UserID, SchoolID], map: "PK_TSMSGROUPUSER")
}

model TSMSSubLevel {
  nTSubLevel  Int
  nSMS        Int?
  nSMSSub_id  Int       @default(autoincrement())
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nTSubLevel, nSMSSub_id], map: "PK_TSMSSubLevel")
  @@index([nSMS], map: "IX_TSMSSubLevel")
}

model TStock {
  nStock      Int       @default(autoincrement())
  dStock      DateTime  @db.DateTime
  nUpdate     Int?
  dUpdate     DateTime? @db.DateTime
  cDel        String?   @db.Char(1)
  shop_id     Int?
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  ContactID   Int?
  INVNo       String?   @db.NVarChar(50)
  INVDate     DateTime? @db.DateTime
  PONo        String?   @db.NVarChar(50)
  PODate      DateTime? @db.Date
  DocRef      String?   @db.NVarChar(50)
  IsDone      Boolean?
  TaxType     Int?      @db.TinyInt

  @@id([SchoolID, nStock, dStock], map: "PK_TStock")
  @@index([dStock], map: "INDEX_VV_6065943_6065942")
  @@index([shop_id], map: "IX_TStock")
  @@index([nStock], map: "IX_TStock_nStock")
}

model TStockDetail {
  nStockDetailID Int       @default(autoincrement())
  nStock         Int
  nOrder         Int
  nNumber        Int?
  nProductID     Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  Tstamp         DateTime  @db.DateTime
  Cost           Decimal?  @db.Decimal(18, 10)
  SumPrice       Decimal?  @db.Decimal(18, 10)
  SumNoTax       Decimal?  @db.Decimal(18, 10)
  DiscountType   Int?      @db.TinyInt
  Discount       Decimal?  @db.Decimal(18, 10)

  @@id([nStockDetailID, nStock, nOrder, SchoolID], map: "PK_TStockDetail")
  @@index([nProductID], map: "INDEX_VV_125287_125286")
  @@index([nProductID, SchoolID, cDel], map: "INDEX_VV_147741_147740")
  @@index([nNumber], map: "INDEX_VV_154998_154997")
  @@index([nStock, SchoolID], map: "INDEX_VV_5202072_5202071")
}

model TStockDetailTemp {
  nStockDetailID Int       @default(autoincrement())
  nStock         Int
  nOrder         Int
  nNumber        Int?
  nProductID     Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  Tstamp         DateTime  @db.DateTime
  Cost           Decimal?  @db.Decimal(18, 10)
  SumPrice       Decimal?  @db.Decimal(18, 10)
  SumNoTax       Decimal?  @db.Decimal(18, 10)
  DiscountType   Int?      @db.TinyInt
  Discount       Decimal?  @db.Decimal(18, 10)

  @@id([nStockDetailID, nStock, nOrder, SchoolID], map: "PK_TStockDetailTemp")
}

model TStockImprove {
  ID         Int       @default(autoincrement())
  SchoolID   Int
  ProductID  Int
  CheckDate  DateTime? @db.Date
  InStock    Int?
  Count      Int?
  Diff       Int?
  Remark     String?   @db.VarChar(5)
  RemarkText String?   @db.NVarChar(100)
  Created    DateTime? @db.DateTime
  CreateBy   Int?
  DocRef     String?   @db.NVarChar(50)

  @@id([ID, SchoolID], map: "PK_TStockImprove_1")
  @@index([Created], map: "INDEX_VV_103309_103308")
  @@index([ProductID], map: "INDEX_VV_57227_57226")
  @@index([ProductID], map: "INDEX_VV_74998_74997")
  @@index([SchoolID], map: "INDEX_VV_85462_85461")
}

model TStockLog {
  ID        Int       @default(autoincrement())
  SchoolID  Int
  ProductID Int?
  ShopID    Int?
  LogDate   DateTime? @db.Date
  TotalQty  Int?
  TotalCost Decimal?  @db.Decimal(18, 2)
  AvgCost   Decimal?  @db.Decimal(18, 2)
  Created   DateTime? @db.DateTime

  @@id([ID, SchoolID], map: "PK_TStockLog_Backup")
  @@index([LogDate], map: "INDEX_VV_74139_74138")
  @@index([SchoolID, ProductID, LogDate], map: "INDEX_VV_Backup100162_100161")
  @@index([SchoolID, LogDate], map: "INDEX_VV_Backup102538_102537")
  @@index([SchoolID, LogDate], map: "INDEX_VV_Backup102562_102561")
  @@index([SchoolID, LogDate], map: "INDEX_VV_Backup110499_110498")
  @@index([ProductID], map: "INDEX_VV_Backup121181_121180")
  @@index([SchoolID], map: "INDEX_VV_Backup12211_12210")
  @@index([ShopID], map: "INDEX_VV_Backup68427_68426")
  @@index([ProductID], map: "INDEX_VV_Backup83970_83969")
  @@index([SchoolID, ProductID], map: "INDEX_VV_Backup91850_91848")
}

model TStockLog_Old {
  ID        Int       @default(autoincrement())
  SchoolID  Int
  ProductID Int?
  ShopID    Int?
  LogDate   DateTime? @db.Date
  TotalQty  Int?
  TotalCost Decimal?  @db.Decimal(18, 2)
  AvgCost   Decimal?  @db.Decimal(18, 2)
  Created   DateTime? @db.DateTime

  @@id([ID, SchoolID], map: "PK_TStockLog")
  @@index([SchoolID, ProductID, LogDate], map: "INDEX_VV_100162_100161")
  @@index([SchoolID, LogDate], map: "INDEX_VV_102538_102537")
  @@index([SchoolID, LogDate], map: "INDEX_VV_102562_102561")
  @@index([SchoolID, LogDate], map: "INDEX_VV_110499_110498")
  @@index([ProductID], map: "INDEX_VV_121181_121180")
  @@index([SchoolID], map: "INDEX_VV_12211_12210")
  @@index([ShopID], map: "INDEX_VV_68427_68426")
  @@index([ProductID], map: "INDEX_VV_83970_83969")
  @@index([SchoolID, ProductID], map: "INDEX_VV_91850_91848")
}

model TStudentCardInfo {
  nStudentCardInfoId Int       @default(autoincrement())
  elementValue       String?   @db.NVarChar(250)
  elementName        String?   @db.NVarChar(100)
  date               DateTime? @db.DateTime
  cDel               Int?
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime

  @@id([SchoolID, nStudentCardInfoId], map: "PK_TStudentCardInfo")
}

model TStudentClassroomHistory {
  nHistoryId     Int       @default(autoincrement())
  sID            Int?
  nTerm          String?   @db.NVarChar(20)
  nTermSubLevel2 Int?
  nStudentNumber Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  nStudentStatus Int?
  MoveInDate     DateTime? @db.DateTime
  MoveOutDate    DateTime? @db.DateTime
  DropOutType    Int?
  IsActive       Boolean?
  Note           String?   @db.NVarChar(250)

  @@id([nHistoryId, SchoolID], map: "PK_TStudentClassroomHistory")
  @@index([sID, nTerm, SchoolID, cDel, IsActive], map: "INDEX_VV_12033_12032")
  @@index([SchoolID, cDel, sID], map: "INDEX_VV_124322_124321")
  @@index([SchoolID, cDel, sID], map: "INDEX_VV_124324_124323")
  @@index([nTermSubLevel2, cDel], map: "INDEX_VV_132174_132173")
  @@index([sID, cDel, nStudentStatus], map: "INDEX_VV_39644_39643")
  @@index([sID, cDel], map: "INDEX_VV_64705_64704")
  @@index([nHistoryId, SchoolID], map: "INDEX_VV_89762_89761")
  @@index([nTerm, nTermSubLevel2, SchoolID, cDel], map: "INDEX_VV_89882_89881")
  @@index([nTerm, SchoolID, cDel, sID], map: "INDEX_VV_89955_89954")
  @@index([nTerm, SchoolID, cDel], map: "INDEX_VV_90168_90167")
  @@index([nTerm, SchoolID, cDel], map: "INDEX_VV_90208_90207")
  @@index([nTerm], map: "INDEX_VV_93006_93005")
  @@index([SchoolID, cDel], map: "INDEX_VV_97347_97346")
  @@index([nTermSubLevel2, SchoolID, cDel], map: "INDEX_VV_97423_97422")
}

model TStudentHealthGrowth {
  nHealthID   Int
  nTSubLevel  Int
  nMonth      Int
  Weight      Decimal?  @db.Decimal(6, 2)
  Height      Decimal?  @db.Decimal(6, 2)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([nHealthID, nTSubLevel, nMonth, SchoolID], map: "PK_TStudentHealthGrowth")
  @@index([SchoolID], map: "INDEX_VV_12810_12809")
  @@index([nTSubLevel, SchoolID], map: "INDEX_VV_89959_89958")
  @@index([nTSubLevel, SchoolID, Weight, Height], map: "IX_TStudentHealthGrowth_nTSubLevel_SchoolID_Weight_Height")
  @@index([SchoolID], map: "IX_TStudentHealthGrowth_SchoolID")
  @@index([SchoolID, Weight, Height], map: "IX_VV_TStudentHealthGrowth_SchoolID_Weight_Height")
}

model TStudentHealthGrowth_History {
  nHealthID   Int
  nTSubLevel  Int
  nMonth      Int
  Weight      Decimal?  @db.Decimal(6, 2)
  Height      Decimal?  @db.Decimal(6, 2)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nHealthID, nTSubLevel, nMonth], map: "PK_TStudentHealthGrowth_History")
}

model TStudentHealthInfo {
  StudentHealthID Int       @default(autoincrement())
  nHealthID       Int
  sID             Int?
  sBlood          String?   @db.NVarChar(200)
  sSickFood       String?   @db.NVarChar(250)
  sSickDrug       String?   @db.NVarChar(250)
  sSickOther      String?   @db.NVarChar(250)
  sSickNormal     String?   @db.NVarChar(250)
  sSickDanger     String?   @db.NVarChar(250)
  sDeleted        String?   @db.NVarChar(10)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean

  @@id([SchoolID, StudentHealthID, nHealthID], map: "PK_TStudentHealthInfo_1")
  @@index([sID, sDeleted, SchoolID], map: "INDEX_VV_92520_92519")
}

model TStudentHIstory {
  StudentHistory_ID     String    @db.NVarChar(250)
  nTermSubLevel2_OLD    Int?
  nTermSubLevel2_NEW    Int?
  DayStart              DateTime? @db.Date
  DayEnd                DateTime? @db.Date
  StudentStatus         String?   @db.NVarChar(5)
  DayAdd                DateTime? @db.DateTime
  USERADDID             Int?
  nTerm                 String?   @db.NVarChar(20)
  sID                   Int?
  SchoolID              Int
  dProfessionalStandard DateTime? @db.DateTime
  CreatedBy             Int?
  UpdatedBy             Int?
  CreatedDate           DateTime? @db.DateTime
  UpdatedDate           DateTime? @db.DateTime
  DiplomaCode           String?   @db.NVarChar(10)
  cDel                  Boolean

  @@id([SchoolID, StudentHistory_ID], map: "PK_TStudentHIstory")
  @@index([nTerm, SchoolID], map: "INDEX_VV_102339_102338")
  @@index([StudentStatus, SchoolID, cDel], map: "INDEX_VV_111324_111323")
  @@index([nTermSubLevel2_NEW], map: "INDEX_VV_1210_1209")
  @@index([sID, StudentStatus, SchoolID, cDel], map: "INDEX_VV_5103161_5103160")
  @@index([StudentStatus, SchoolID, cDel], map: "INDEX_VV_92933_92932")
  @@index([StudentStatus, nTerm, SchoolID, cDel], map: "INDEX_VV_93863_93862")
  @@index([sID, nTerm, nTermSubLevel2_OLD, nTermSubLevel2_NEW], map: "IX_TStudentHIstory")
  @@index([nTermSubLevel2_OLD], map: "IX_TStudentHIstory_nTerm_SchoolID")
}

model TStudentLevel {
  sID            Int
  nTermSubLevel2 Int
  nYear          Int?
  nStdLvID       Int       @default(autoincrement())
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, nStdLvID], map: "PK_TStudentLevel")
}

model TStudentProfile {
  nProfileID           Int       @default(autoincrement())
  sID                  Int?
  sStudentTitle        String?   @db.NVarChar(255)
  sStudentNameTH       String?   @db.NVarChar(50)
  sStudentLastTH       String?   @db.NVarChar(50)
  sStudentNameEN       String?   @db.NVarChar(50)
  sStudentLastEN       String?   @db.NVarChar(50)
  sStudentRace         String?   @db.NVarChar(50)
  sStudentNation       String?   @db.NVarChar(50)
  sStudentReligion     String?   @db.NVarChar(50)
  sStudentIdCardNumber String?   @db.NVarChar(20)
  sStudentGender       String?   @db.NVarChar(20)
  dStudentBirthday     DateTime? @db.DateTime
  sStudentHomeNumber   String?   @db.NVarChar(50)
  sStudentSoy          String?   @db.NVarChar(50)
  sStudentTumbon       String?   @db.NVarChar(50)
  sStudentProvince     String?   @db.NVarChar(50)
  sStudentMuu          String?   @db.NVarChar(50)
  sStudentRoad         String?   @db.NVarChar(50)
  sStudentAumpher      String?   @db.NVarChar(50)
  sStudentPost         String?   @db.NVarChar(50)
  sStudentPhone        String?   @db.NVarChar(50)
  sStudentEmail        String?   @db.NVarChar(50)
  sStudentUsername     String?   @db.NVarChar(50)
  sStudentPassword     String?   @db.NVarChar(50)
  nTermSubLevel2       Int?
  sStudentPicture      String?   @db.NVarChar(255)
  sDeleted             String?   @db.NVarChar(10)
  sNickName            String?   @db.NVarChar(50)
  nSonNumber           Int?
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, nProfileID], map: "PK_TStudentProfile")
}

model TStudenttime {
  StudentTimeID Int       @default(autoincrement())
  sID           Int?
  sClassID      String?   @db.NVarChar(10)
  SchoolID      Int
  CreatedBy     Int?
  UpdatedBy     Int?
  CreatedDate   DateTime? @db.DateTime
  UpdatedDate   DateTime? @db.DateTime
  cDel          Boolean

  @@id([SchoolID, StudentTimeID], map: "PK_TStudentime")
}

model TStudentType {
  ID            Int       @default(autoincrement())
  SchoolID      Int
  StudentTypeTH String?   @db.NVarChar(100)
  StudentTypeEN String?   @db.NVarChar(100)
  Status        Boolean?
  IsDel         Boolean?
  CreatedDate   DateTime? @db.DateTime
  CreatedBy     Int?
  UpdatedDate   DateTime? @db.DateTime
  UpdatedBy     Int?

  @@id([ID, SchoolID], map: "PK_TStudentType_1")
}

model TSubLevel {
  nTSubLevel     Int       @default(autoincrement())
  SubLevel       String?   @db.NVarChar(20)
  nTLevel        Int?
  nTimeType      Int?
  nDeleted       Int?
  fullName       String?   @db.NVarChar(50)
  SubLevelEN     String?   @db.NVarChar(10)
  fullNameEN     String?   @db.NVarChar(50)
  nWorkingStatus Int?
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean
  isGraduate     Boolean?
  MasterCode     String?   @db.VarChar(20)
  SubLevelNameEN String?   @db.VarChar(50)
  SubLevelNameTH String?   @db.VarChar(50)

  @@id([SchoolID, nTSubLevel], map: "PK_TSubLevel")
  @@index([nTSubLevel], map: "idx_TSubLevel_nTSubLevel")
  @@index([MasterCode], map: "INDEX_VV_39614_39613")
  @@index([SubLevel], map: "INDEX_VV_4903423_4903422")
  @@index([nTLevel], map: "INDEX_VV_5130121_5130120")
  @@index([nWorkingStatus], map: "INDEX_VV_90980_90979")
  @@index([SubLevel, nTLevel, nTimeType], map: "IX_TSubLevel")
  @@index([SubLevel, nTSubLevel], map: "IX_TSubLevel_nTSubLevel")
}

model TSystemlog {
  SystemLogID Int       @default(autoincrement())
  sEmp        Int
  dLog        DateTime  @db.DateTime
  sLog        String?   @db.NVarChar(Max)
  nSession    Int?
  nMenu       Int?
  action      Int?
  systemtype  Int?
  ip          String?   @db.NVarChar(30)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, SystemLogID, sEmp, dLog], map: "PK_TSystemlog")
  @@index([SystemLogID], map: "INDEX_VV_158469_158468")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TSystemlog_Move {
  sEmp       Int
  dLog       DateTime @db.DateTime
  sLog       String?  @db.NVarChar(Max)
  nSession   Int?
  nMenu      Int?
  action     Int?
  systemtype Int?
  ip         String?  @db.NVarChar(30)
  SchoolID   Int

  @@index([sEmp], map: "IX_TSystemlog_Move")
  @@ignore
}

model TTeacherCardInfo {
  TeacherCardInfoId Int       @default(autoincrement())
  elementValue      String?   @db.NVarChar(250)
  elementName       String?   @db.NVarChar(100)
  date              DateTime? @db.DateTime
  cDel              Int?
  SchoolID          Int
  CreatedBy         Int?
  UpdatedBy         Int?
  CreatedDate       DateTime? @db.DateTime
  UpdatedDate       DateTime? @db.DateTime

  @@id([SchoolID, TeacherCardInfoId], map: "PK_TTeacherCardInfo")
}

model TTempScanCameraIPStatus {
  SchoolID     Int
  IP           String?   @db.VarChar(50)
  MAC          String?   @db.VarChar(50)
  MachineName  String?   @db.VarChar(50)
  CameraNo     Int?
  CameraIP     String    @db.VarChar(50)
  CameraStatus String?   @db.VarChar(10)
  LastUpdate   DateTime? @db.DateTime

  @@id([SchoolID, CameraIP], map: "PK_TTempScanCameraIPStatus")
}

model TTempScanStatusOnline {
  SchoolID     Int
  IP           String    @db.VarChar(50)
  MAC          String?   @db.VarChar(50)
  MachineName  String?   @db.VarChar(50)
  LastOnline   DateTime? @db.DateTime
  CameraNo     Int
  CameraIP     String    @db.VarChar(50)
  CameraStatus String?   @db.VarChar(10)

  @@id([SchoolID, CameraNo, CameraIP], map: "PK_TTempScanStatusOnline_1")
}

model TTerm {
  nTerm       String    @db.NVarChar(20)
  nYear       Int?
  numberTerm  Int?
  TermStatus  String?   @db.Char(1)
  cDel        String?   @db.Char(1)
  sTerm       String?   @db.NVarChar(100)
  dStart      DateTime? @db.DateTime
  dEnd        DateTime? @db.DateTime
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, nTerm], map: "PK_TTerm")
  @@index([nTerm], map: "IDX_M_42_41")
  @@index([nYear, nTerm], map: "idx_TTerm_nYear_nTerm")
  @@index([dStart, dEnd], map: "INDEX_VV_12015_12014")
  @@index([cDel], map: "INDEX_VV_21679_21678")
  @@index([nYear, sTerm, dStart, dEnd], map: "IX_TTerm")
  @@index([nYear], map: "IX_TTerm_cDel")
  @@index([nYear], map: "IX_TTerm_cDel_sTerm_dEnd")
  @@index([nYear], map: "IX_VV_TTerm_dStart_dEnd")
  @@index([cDel, dStart, dEnd], map: "TTerm_dStart_dEnd")
}

model TTermSubLevel2 {
  nTermSubLevel2       Int       @default(autoincrement())
  nTerm                String?   @db.NVarChar(20)
  nTSubLevel           Int
  nTSubLevel2          String?   @db.NVarChar(100)
  nTermSubLevel2Status String    @db.Char(1)
  nTimeType            Int?
  nWorkingStatus       Int?
  nBranchSpecId        Int?
  SchoolID             Int
  CreatedBy            Int?
  UpdatedBy            Int?
  CreatedDate          DateTime? @db.DateTime
  UpdatedDate          DateTime? @db.DateTime
  cDel                 Boolean

  @@id([SchoolID, nTermSubLevel2], map: "PK_TTermSubLevel2")
  @@index([nTermSubLevel2], map: "INDEX_VV_56_55")
  @@index([nTSubLevel, SchoolID], map: "IX_nTSubLevel_SchoolID")
}

model TTermTimeTable {
  nTermTable     Int       @default(autoincrement())
  nTermSubLevel2 Int?
  nTeacher       Int?
  nTerm          String?   @db.NVarChar(20)
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime
  cDel           Boolean

  @@id([SchoolID, nTermTable], map: "PK_TTermTimeTable")
  @@index([nTermSubLevel2, nTermTable], map: "IDX_M_798_797")
  @@index([nTermTable], map: "INDEX_VV_12246_12245")
  @@index([nTerm, nTeacher, nTermSubLevel2], map: "IX_TTermTimeTable")
  @@index([nTermSubLevel2, SchoolID], map: "IX_TTermTimeTable_nTermSubLevel2_SchoolID")
}

model TTime {
  TimeID         Int       @default(autoincrement())
  dTimeStart_IN  DateTime? @db.DateTime
  dTimeEnd_IN    DateTime? @db.DateTime
  dTimeStart_OUT DateTime? @db.DateTime
  dTimeEnd_OUT   DateTime? @db.DateTime
  nDay           Int?
  cDel           String?   @db.Char(1)
  nTimeType      Int?
  nTimeLate      Int?
  dTimeHalf      DateTime? @db.DateTime
  SchoolID       Int
  CreatedBy      Int?
  UpdatedBy      Int?
  CreatedDate    DateTime? @db.DateTime
  UpdatedDate    DateTime? @db.DateTime

  @@id([SchoolID, TimeID], map: "PK_TTime_1")
  @@index([nTimeType], map: "INDEX_VV_18219_18218")
  @@index([cDel], map: "INDEX_VV_5204601_5204600")
}

model TTimetype {
  nTimeType   Int       @default(autoincrement())
  sTimeType   String?   @db.NVarChar(100)
  cDel        String?   @db.Char(1)
  cType       String?   @db.Char(1)
  cUserType   String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, nTimeType], map: "PK_TTimetype")
}

model TTitleList {
  nSchoolId          Int
  titleDescription   String?   @db.NVarChar(100)
  titleDescriptionEn String?   @db.NVarChar(100)
  deleted            String?   @db.NVarChar(50)
  workStatus         String?   @db.NVarChar(50)
  nTitleid           Int       @default(autoincrement())
  SchoolID           Int
  CreatedBy          Int?
  UpdatedBy          Int?
  CreatedDate        DateTime? @db.DateTime
  UpdatedDate        DateTime? @db.DateTime
  cDel               Boolean   @default(false, map: "DF_TTitleList_cDel")
  MasterCode         String?   @db.VarChar(20)

  @@id([SchoolID, nTitleid], map: "PK_TTitleList")
  @@index([nSchoolId], map: "INDEX_VV_5181199_5181198")
  @@index([titleDescription], map: "INDEX_VV_5254317_5254316")
  @@index([nTitleid], map: "TTitleList_nTitleID")
}

model TTranscriptNumber {
  ID                  Int       @default(autoincrement())
  SchoolID            Int
  nTerm               String?   @db.NVarChar(20)
  nTSubLevel          Int
  nTermSubLevel2      Int?
  sID                 Int
  TranscriptSetNumber Int?
  TranscriptNumber    Int?
  cDel                Boolean
  CreatedBy           Int?
  CreatedDate         DateTime? @db.DateTime
  UpdatedBy           Int?
  UpdatedDate         DateTime? @db.DateTime

  @@id([ID, SchoolID, nTSubLevel, sID], map: "PK_TTranscriptNumber")
  @@index([SchoolID, nTSubLevel, sID, cDel], map: "INDEX_VV_29189_29188")
  @@index([SchoolID, TranscriptSetNumber, TranscriptNumber], map: "INDEX_VV_51494_51493")
}

model TType {
  nTypeID     Int       @default(autoincrement())
  sType       String?   @db.NVarChar(100)
  cDel        String?   @db.Char(1)
  shop_id     Int?
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime

  @@id([SchoolID, nTypeID], map: "PK_TType")
  @@index([nTypeID], map: "INDEX_VV_2_1")
  @@index([shop_id], map: "INDEX_VV_4822461_4822460")
  @@index([nTypeID], map: "public_TType_INDEX_VV_2_1")
  @@index([shop_id], map: "public_TType_INDEX_VV_4822461_4822460")
}

model TUnit {
  UnitID      Int       @default(autoincrement())
  Unit        String?   @db.NVarChar(20)
  Flag        Int?
  UpdateDate  DateTime? @db.DateTime
  UpdateBy    Int?
  SchoolID    Int
  CreatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, UnitID], map: "PK_TUNIT")
}

model TUser {
  sID                      Int
  sStudentTitle            String?   @db.NVarChar(50)
  sName                    String?   @db.NVarChar(256)
  sLastname                String?   @db.NVarChar(256)
  sIdentification          String?   @db.NVarChar(13)
  dBirth                   DateTime? @db.DateTime
  cSex                     String?   @db.Char(1)
  sPhone                   String?   @db.NVarChar(100)
  sEmail                   String?   @db.NVarChar(256)
  sPassword                String?   @db.NVarChar(100)
  sSubtopic                String?   @db.NVarChar(512)
  sAddress                 String?   @db.NVarChar(512)
  sCity                    String?   @db.NVarChar(512)
  sPostalcode              String?   @db.NVarChar(10)
  sCountry                 String?   @db.NVarChar(512)
  dUpdate                  DateTime? @db.DateTime
  sFinger                  String?   @db.NVarChar(Max)
  nMoney                   Decimal?  @db.Decimal(18, 2)
  sFinger2                 String?   @db.NVarChar(Max)
  nMax                     Decimal?  @db.Decimal(18, 2)
  cType                    String?   @db.Char(1)
  cDel                     String?   @db.Char(1)
  cSMS                     String?   @db.Char(1)
  baseSalary               Int?
  cTelSMS                  String?   @db.NVarChar(50)
  nTermSubLevel2           Int?
  sToken                   String?   @db.NVarChar(Max)
  sStudentID               String?   @db.NVarChar(20)
  sStudentNameEN           String?   @db.NVarChar(50)
  sStudentLastEN           String?   @db.NVarChar(50)
  sStudentRace             String?   @db.NVarChar(50)
  sStudentNation           String?   @db.NVarChar(50)
  sStudentReligion         String?   @db.NVarChar(50)
  sStudentIdCardNumber     String?   @db.NVarChar(20)
  sStudentHomeNumber       String?   @db.NVarChar(100)
  sStudentSoy              String?   @db.NVarChar(50)
  sStudentTumbon           String?   @db.NVarChar(50)
  sStudentProvince         String?   @db.NVarChar(50)
  sStudentMuu              String?   @db.NVarChar(50)
  sStudentRoad             String?   @db.NVarChar(50)
  sStudentAumpher          String?   @db.NVarChar(50)
  sStudentPost             String?   @db.NVarChar(50)
  sStudentPicture          String?   @db.NVarChar(255)
  sNickName                String?   @db.NVarChar(256)
  nSonNumber               Int?
  dPicUpdate               DateTime? @db.DateTime
  nPicversion              Int?
  nStudentNumber           Int?
  nStudentStatus           Int?
  ContactPeak              String?   @db.NVarChar(100)
  DayQuit                  DateTime? @db.Date
  Note                     String?   @db.NVarChar(250)
  oldSchoolName            String?   @db.NVarChar(250)
  oldSchoolProvince        String?   @db.NVarChar(250)
  oldSchoolAumpher         String?   @db.NVarChar(250)
  oldSchoolTumbon          String?   @db.NVarChar(250)
  oldSchoolGPA             Decimal?  @db.Decimal(18, 2)
  oldSchoolGraduated       String?   @db.NVarChar(250)
  moveInDate               DateTime? @db.DateTime
  addressLng               Float?
  addressLat               Float?
  moveOutReason            String?   @db.NVarChar(200)
  sNickNameEN              String?   @db.NVarChar(256)
  sStudentHomeRegisterCode String?   @db.NVarChar(20)
  sStudentHousePhone       String?   @db.NVarChar(50)
  sStudentNameOther        String?   @db.NVarChar(50)
  sStudentLastOther        String?   @db.NVarChar(50)
  SchoolID                 Int
  Note2                    String?   @db.VarChar(1000)
  Credit                   Decimal?  @db.Decimal(6, 2)
  DiplomaCode              String?   @db.NVarChar(10)
  TranscriptSetNumber      Int?
  TranscriptNumber         Int?
  oldSchoolGPA2            String?   @db.VarChar(50)
  CreatedBy                Int?
  UpdatedBy                Int?
  CreatedDate              DateTime? @db.DateTime
  UpdatedDate              DateTime? @db.DateTime
  DisabilityCode           String?   @db.VarChar(2)
  DisadvantageCode         String?   @db.VarChar(2)
  DailyUsageLimit          Decimal   @db.Decimal(18, 2)
  JourneyType              Int?
  DormitoryName            String?   @db.NVarChar(150)
  OldSchoolDateGraduated   DateTime? @db.DateTime
  PassportNumber           String?   @db.NVarChar(50)
  PassportCountry          String?   @db.NVarChar(100)
  PassportExpirationDate   DateTime? @db.DateTime
  CountryType              String?   @db.NVarChar(1)
  CountryNameTH            String?   @db.NVarChar(200)
  CountryNameEN            String?   @db.NVarChar(200)
  StudentTypeID            Int?

  @@id([SchoolID, sID], map: "PK_TUser")
  @@index([nTermSubLevel2], map: "IDX_M_1555_1554")
  @@index([cDel, SchoolID, nStudentStatus], map: "INDEX_VV_111608_111607")
  @@index([cDel, SchoolID, dUpdate], map: "INDEX_VV_118349_118348")
  @@index([cDel, SchoolID], map: "INDEX_VV_120999_120998")
  @@index([cDel, SchoolID], map: "INDEX_VV_1791_1790")
  @@index([sID], map: "INDEX_VV_3528_3527")
  @@index([cDel, SchoolID], map: "INDEX_VV_40032_40031")
  @@index([cDel, SchoolID, sStudentID], map: "INDEX_VV_6066110_6066109")
  @@index([SchoolID, oldSchoolProvince], map: "INDEX_VV_6164_6163")
  @@index([SchoolID, cDel], map: "INDEX_VV_8499_8498")
  @@index([SchoolID, cDel], map: "INDEX_VV_8647_8646")
  @@index([SchoolID, cDel], map: "INDEX_VV_90110_90109")
  @@index([cDel, SchoolID], map: "INDEX_VV_91125_91124")
  @@index([SchoolID, sStudentID], map: "INDEX_VV_93436_93435")
  @@index([cDel, SchoolID], map: "INDEX_VV_94128_94127")
  @@index([SchoolID, cDel], map: "INDEX_VV_985_984")
  @@index([cDel, SchoolID], map: "INDEX_VV_98598_98597")
  @@index([cDel], map: "IX_TUser")
  @@index([sID, SchoolID, nMoney], map: "IX_TUser_1")
  @@index([nTermSubLevel2], map: "IX_TUser_cDel_SchoolID")
  @@index([cDel, sStudentID, SchoolID], map: "IX_TUser_cDel_sStudentID_SchoolID")
  @@index([sIdentification, cDel, SchoolID], map: "IX_TUser_sIdentification_cDel_SchoolID")
  @@index([sStudentID, SchoolID], map: "IX_TUser_sStudentID_SchoolID")
  @@index([sIdentification], map: "TUser_Cdel_SchoolID_sID")
}

model TUserAttendance {
  AttendanceID    Int      @id(map: "PK_TUserAttendance") @default(autoincrement())
  SchoolID        Int
  sID             Int
  cType           Int
  MacAddress      String   @db.NVarChar(250)
  ShopID          Int
  NFCEncrypt      String   @db.NVarChar(250)
  sName           String?  @db.NVarChar(250)
  sLastName       String?  @db.NVarChar(250)
  sStudentID      String?  @db.NVarChar(250)
  sStudentPicture String?  @db.NVarChar(255)
  AttendanceDate  DateTime @db.Date
  TStamp          DateTime @db.DateTime

  @@index([SchoolID, ShopID, AttendanceDate], map: "INDEX_VV_100569_100568")
  @@index([SchoolID, AttendanceDate], map: "INDEX_VV_100571_100570")
  @@index([SchoolID, cType, ShopID, AttendanceDate], map: "INDEX_VV_90455_90454")
  @@index([AttendanceDate], map: "INDEX_VV_92796_92795")
  @@index([SchoolID, sID, AttendanceDate], map: "IX_TUserAttendance_SchoolID_sID_AttendanceDate")
}

model TUserBlackList {
  nProductID  Int
  sID         Int
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nProductID, sID], map: "PK_TUserBlackList")
}

model TUserNew {
  sID                      Int
  sStudentTitle            String?   @db.NVarChar(50)
  sName                    String?   @db.NVarChar(256)
  sLastname                String?   @db.NVarChar(256)
  sIdentification          String?   @db.NVarChar(13)
  dBirth                   DateTime? @db.DateTime
  cSex                     String?   @db.Char(1)
  sPhone                   String?   @db.NVarChar(100)
  sEmail                   String?   @db.NVarChar(256)
  sPassword                String?   @db.NVarChar(100)
  sSubtopic                String?   @db.NVarChar(512)
  sAddress                 String?   @db.NVarChar(512)
  sCity                    String?   @db.NVarChar(512)
  sPostalcode              String?   @db.NVarChar(10)
  sCountry                 String?   @db.NVarChar(512)
  dUpdate                  DateTime? @db.DateTime
  sFinger                  String?   @db.NVarChar(Max)
  nMoney                   Decimal?  @db.Decimal(18, 2)
  sFinger2                 String?   @db.NVarChar(Max)
  nMax                     Decimal?  @db.Decimal(18, 2)
  cType                    String?   @db.Char(1)
  cDel                     String?   @db.Char(1)
  cSMS                     String?   @db.Char(1)
  baseSalary               Int?
  cTelSMS                  String?   @db.NVarChar(50)
  nTermSubLevel2           Int?
  sToken                   String?   @db.NVarChar(Max)
  sStudentID               String?   @db.NVarChar(20)
  sStudentNameEN           String?   @db.NVarChar(50)
  sStudentLastEN           String?   @db.NVarChar(50)
  sStudentRace             String?   @db.NVarChar(50)
  sStudentNation           String?   @db.NVarChar(50)
  sStudentReligion         String?   @db.NVarChar(50)
  sStudentIdCardNumber     String?   @db.NVarChar(20)
  sStudentHomeNumber       String?   @db.NVarChar(50)
  sStudentSoy              String?   @db.NVarChar(50)
  sStudentTumbon           String?   @db.NVarChar(50)
  sStudentProvince         String?   @db.NVarChar(50)
  sStudentMuu              String?   @db.NVarChar(50)
  sStudentRoad             String?   @db.NVarChar(50)
  sStudentAumpher          String?   @db.NVarChar(50)
  sStudentPost             String?   @db.NVarChar(50)
  sStudentPicture          String?   @db.NVarChar(255)
  sNickName                String?   @db.NVarChar(50)
  nSonNumber               Int?
  dPicUpdate               DateTime? @db.DateTime
  nPicversion              Int?
  nStudentNumber           Int?
  nStudentStatus           Int?
  ContactPeak              String?   @db.NVarChar(100)
  DayQuit                  DateTime? @db.Date
  Note                     String?   @db.NVarChar(250)
  oldSchoolName            String?   @db.NVarChar(250)
  oldSchoolProvince        String?   @db.NVarChar(250)
  oldSchoolAumpher         String?   @db.NVarChar(250)
  oldSchoolTumbon          String?   @db.NVarChar(250)
  oldSchoolGPA             Decimal?  @db.Decimal(18, 2)
  oldSchoolGraduated       String?   @db.NVarChar(250)
  moveInDate               DateTime? @db.DateTime
  addressLng               Float?
  addressLat               Float?
  moveOutReason            String?   @db.NVarChar(200)
  sNickNameEN              String?   @db.NVarChar(100)
  sStudentHomeRegisterCode String?   @db.NVarChar(20)
  sStudentHousePhone       String?   @db.NVarChar(50)
  sStudentNameOther        String?   @db.NVarChar(50)
  sStudentLastOther        String?   @db.NVarChar(50)
  SchoolID                 Int
  Note2                    String?   @db.VarChar(1000)
  Credit                   Decimal?  @db.Decimal(5, 2)
  DiplomaCode              String?   @db.NVarChar(10)
  TranscriptSetNumber      Int?
  TranscriptNumber         Int?
  oldSchoolGPA2            String?   @db.VarChar(20)
  CreatedBy                Int?
  UpdatedBy                Int?
  CreatedDate              DateTime? @db.DateTime
  UpdatedDate              DateTime? @db.DateTime
  DisabilityCode           String?   @db.VarChar(2)
  DisadvantageCode         String?   @db.VarChar(2)
  DailyUsageLimit          Decimal   @db.Decimal(18, 2)
  JourneyType              Int?
  DormitoryName            String?   @db.NVarChar(150)

  @@id([SchoolID, sID], map: "PK_TUserNew")
}

model TUserVerify {
  VerifyID        Int       @id(map: "PK_TUserVerify") @default(autoincrement())
  SchoolID        Int
  UserID          Int
  Type            Int
  No              Int
  Email           String?   @db.VarChar(100)
  PhoneNumber     String?   @db.VarChar(30)
  RequestNo       String?   @db.VarChar(50)
  Token           String?   @db.VarChar(50)
  EmailPin        String?   @db.VarChar(10)
  Ref             String?   @db.VarChar(10)
  RequestDate     DateTime? @db.DateTime
  RequestResponse String?   @db.VarChar(200)
  VerifyPin       String?   @db.VarChar(10)
  VerifyDate      DateTime? @db.DateTime
  VerifyResponse  String?   @db.VarChar(200)
  Status          Int

  @@index([SchoolID, UserID], map: "INDEX_VV_4983534_4983533")
  @@index([UserID, Type, Status], map: "INDEX_VV_5092614_5092613")
  @@index([Email], map: "INDEX_VV_53815_53814")
}

model TUserVerifyLINEConnect {
  ConnectID         Int       @id(map: "PK_TUserVerifyLINEConnect") @default(autoincrement())
  SchoolID          Int
  UserID            Int
  LINEAuthorizeCode String?   @db.VarChar(50)
  LINEToken         String?   @db.VarChar(50)
  ConnectDate       DateTime? @db.DateTime
  Status            Int

  @@index([UserID, Status, LINEAuthorizeCode], map: "INDEX_VV_5011105_5011104")
  @@index([UserID, SchoolID, Status], map: "INDEX_VV_5054583_5054582")
}

model TVisitHouse {
  Year                    Int
  VisitHouseID            Int       @default(autoincrement())
  Term                    String?   @db.NChar(20)
  sID                     Int?
  TimeTogether            Int?      @db.SmallInt
  FatherRelationsLevel    Int?      @db.SmallInt
  MotherRelationsLevel    Int?      @db.SmallInt
  BrotherRelationsLevel   Int?      @db.SmallInt
  SistersRelationsLevel   Int?      @db.SmallInt
  RelativeRelationsLevel  Int?      @db.SmallInt
  TakeCareChildren        Int?      @db.SmallInt
  TakeCareChildrenOther   String?   @db.NVarChar(50)
  HouseholdIncome         Decimal?  @db.Decimal(10, 2)
  ExpensesFrom            String?   @db.NVarChar(50)
  ExtraWork               String?   @db.NVarChar(50)
  ExtraWorkIncome         Decimal?  @db.Decimal(10, 2)
  CarryMoneySchool        Decimal?  @db.Decimal(6, 2)
  HelpFromSchool          Int?      @db.SmallInt
  HelpFromSchoolOther     String?   @db.NVarChar(100)
  HelpFamilyReceived      Int?      @db.SmallInt
  HelpFamilyReceivedOther String?   @db.NVarChar(100)
  ParentsConcerns         String?   @db.NVarChar(500)
  Health                  Int?      @db.SmallInt
  Welfare                 Int?      @db.SmallInt
  DistanceSchool          Decimal?  @db.Decimal(6, 2)
  TimeSchoolHour          Int?      @db.SmallInt
  TimeSchoolMinute        Int?      @db.SmallInt
  TravelMethod            Int?      @db.SmallInt
  TravelMethodOther       String?   @db.NVarChar(50)
  LivingConditions        Int?      @db.SmallInt
  StudentWorkFamily       Int?      @db.SmallInt
  StudentWorkFamilyOther  String?   @db.NVarChar(100)
  Hobby                   Int?      @db.SmallInt
  HobbyOther              String?   @db.NVarChar(100)
  SubstanceAbuseBehavior  Int?      @db.SmallInt
  ViolenceBehavior        Int?      @db.SmallInt
  SexualBehavior          Int?      @db.SmallInt
  GameAddiction           Int?      @db.SmallInt
  GameAddictionOther      String?   @db.NVarChar(50)
  InternetAccess          Int?      @db.SmallInt
  UsingElectronicTools    Int?      @db.SmallInt
  Informant               Int?      @db.SmallInt
  PhotosOutsideHome       String?   @db.NVarChar(150)
  PhotosInsideHome        String?   @db.NVarChar(150)
  Latitude                String?   @db.NVarChar(20)
  Longitude               String?   @db.NVarChar(20)
  StampDate               DateTime? @db.DateTime
  StampTime               String?   @db.NVarChar(5)
  UpdateDate              DateTime? @db.DateTime
  UpdateBy                Int?
  SchoolID                Int
  CreatedBy               Int?
  CreatedDate             DateTime? @db.DateTime
  cDel                    Boolean

  @@id([SchoolID, Year, VisitHouseID], map: "PK_TVISITHOUSE")
}

model TWithdrawal {
  id              String    @db.NVarChar(50)
  Withdrawal_Id   String?   @db.NVarChar(50)
  dWithdrawal     DateTime? @db.DateTime
  userAdd         Int?
  UserID          Int?
  userType        String?   @db.NVarChar(10)
  bCancel         Boolean?
  dCanCel         DateTime? @db.DateTime
  userCancel      Int?
  sWithdrawalType String?   @db.NVarChar(10)
  nBalance        Decimal?  @db.Decimal(18, 0)
  nMoney          Decimal?  @db.Decimal(18, 0)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardHistoryID   String?   @db.UniqueIdentifier

  @@id([SchoolID, id], map: "PK_TWithdrawal")
  @@index([dWithdrawal], map: "IDX_M_213245_213244")
  @@index([SchoolID, cDel, CardHistoryID, dWithdrawal], map: "INDEX_VV_100608_100607")
  @@index([userAdd, dCanCel, SchoolID, dWithdrawal], map: "INDEX_VV_118389_118388")
  @@index([SchoolID, dWithdrawal], map: "INDEX_VV_131424_131423")
  @@index([UserID], map: "INDEX_VV_30784_30783")
  @@index([dWithdrawal], map: "INDEX_VV_364_363")
  @@index([dCanCel, SchoolID, cDel, dWithdrawal, sWithdrawalType], map: "INDEX_VV_43378_43377")
  @@index([dCanCel, sWithdrawalType, SchoolID, cDel, dWithdrawal], map: "INDEX_VV_98936_98935")
}

model TWithdrawal_Backup {
  id              String    @db.NVarChar(50)
  Withdrawal_Id   String?   @db.NVarChar(50)
  dWithdrawal     DateTime? @db.DateTime
  userAdd         Int?
  UserID          Int?
  userType        String?   @db.NVarChar(10)
  bCancel         Boolean?
  dCanCel         DateTime? @db.DateTime
  userCancel      Int?
  sWithdrawalType String?   @db.NVarChar(10)
  nBalance        Decimal?  @db.Decimal(18, 0)
  nMoney          Decimal?  @db.Decimal(18, 0)
  SchoolID        Int
  CreatedBy       Int?
  UpdatedBy       Int?
  CreatedDate     DateTime? @db.DateTime
  UpdatedDate     DateTime? @db.DateTime
  cDel            Boolean
  CardHistoryID   String?   @db.UniqueIdentifier

  @@id([SchoolID, id], map: "PK_TWithdrawal_Backup")
  @@index([dWithdrawal], map: "IDX_M_X_213245_213244")
  @@index([SchoolID, cDel, CardHistoryID, dWithdrawal], map: "INDEX_VV_X_100608_100607")
  @@index([userAdd, dCanCel, SchoolID, dWithdrawal], map: "INDEX_VV_X_118389_118388")
  @@index([SchoolID, dWithdrawal], map: "INDEX_VV_X_131424_131423")
  @@index([UserID], map: "INDEX_VV_X_30784_30783")
  @@index([dWithdrawal], map: "INDEX_VV_X_364_363")
  @@index([dCanCel, SchoolID, cDel, dWithdrawal, sWithdrawalType], map: "INDEX_VV_X_43378_43377")
  @@index([dCanCel, sWithdrawalType, SchoolID, cDel, dWithdrawal], map: "INDEX_VV_X_98936_98935")
}

model TWithdrawalGroup {
  WithdrawID    Int       @default(autoincrement())
  SchoolID      Int
  TermID        String?   @db.NVarChar(10)
  LevelID       Int?
  RoomID        Int?
  WithdrawType  Int?      @db.TinyInt
  Amount        Decimal?  @db.Decimal(18, 2)
  SuccessUserID String?   @db.NVarChar(500)
  FailUserID    String?   @db.NVarChar(500)
  Created       DateTime? @db.DateTime
  CreateBy      Int?
  CancleDate    DateTime? @db.DateTime
  CancleBy      Int?

  @@id([WithdrawID, SchoolID], map: "PK_TWithdrawalGroup")
}

model TYear {
  nYear       Int       @default(autoincrement())
  numberYear  Int?
  YearStatus  String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  cDel        Boolean

  @@id([SchoolID, nYear], map: "PK_TYear")
  @@index([nYear], map: "idx_TYear_nYear")
  @@index([numberYear], map: "INDEX_VV_156570_156569")
  @@index([nYear, numberYear], map: "INDEX_VV_31234_31233")
  @@index([cDel], map: "INDEX_VV_53169_53168")
  @@index([YearStatus], map: "INDEX_VV_numberyear")
}

model UpdateBalance {
  LogID    Int       @id(map: "PK_UpdateBalance") @default(autoincrement())
  sID      Int?
  sEmp     Int?
  SchoolID Int?
  nMoney   Decimal?  @db.Decimal(18, 3)
  Tstamp   DateTime? @default(now(), map: "DF_UpdateBalance_Tstamp") @db.DateTime
  Source   String?   @db.NVarChar(200)
}

model UpdateBalanceLog {
  LogID      Int      @id(map: "PK_UpdateBalanceLog_1") @default(autoincrement())
  sID        Int
  OldBalance Decimal  @db.Decimal(18, 3)
  NewBalance Decimal  @db.Decimal(18, 3)
  Source     String   @db.NVarChar(200)
  TStatmp    DateTime @db.DateTime
}

model UpdateBalanceLogOld {
  uID      String   @id(map: "PK_UpdateBalanceLog") @db.UniqueIdentifier
  sID      Int?
  sEmp     Int?
  SchoolID Int?
  nMoney   Decimal? @db.Decimal(18, 2)
  Tstamp   DateTime @db.DateTime
  CardID   String?  @db.UniqueIdentifier
}

model UpdateBalanceMemory {
  LogID    Int      @id(map: "PK_UpdateBalanceMemory") @default(autoincrement())
  sID      Int?
  sEmp     Int?
  SchoolID Int?
  nMoney   Decimal  @db.Decimal(18, 3)
  Tstamp   DateTime @default(now(), map: "DF_UpdateBalanceMemory_Tstamp") @db.DateTime
  Source   String?  @db.NVarChar(200)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UpdateBalanceMemoryBackup {
  LogID    Int
  sID      Int?
  sEmp     Int?
  SchoolID Int?
  nMoney   Decimal  @db.Decimal(18, 3)
  Tstamp   DateTime @db.DateTime
  Source   String?  @db.NVarChar(200)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UpdateBalanceXShadow {
  LogID    Int?
  sID      Int?
  sEmp     Int?
  SchoolID Int?
  nMoney   Decimal  @db.Decimal(18, 3)
  Tstamp   DateTime @db.DateTime
  Source   String?  @db.NVarChar(200)
  Method   String?  @db.VarChar(1)

  @@ignore
}

model UpdatedShops {
  ID       Int    @id(map: "PK_UpdatedShops") @default(autoincrement())
  SchoolID Int
  DeviceID String @db.NVarChar(300)
  UserID   Int
  ShopID   Int
}

model UpdatedUsers {
  ID       Int    @id(map: "PK_UpdatedUsers") @default(autoincrement())
  SchoolID Int
  DeviceID String @db.NVarChar(500)
  UserID   Int
  sID      Int

  @@unique([SchoolID, UserID, DeviceID, sID], map: "Unique_UserID_DeviceID_sID")
}

model UpdateTempCard {
  ID            Int      @id(map: "PK_UpdateTempCard") @default(autoincrement())
  SchoolID      Int
  Money         Float
  CardID        String   @db.UniqueIdentifier
  CardHistoryID String   @db.UniqueIdentifier
  MethodName    String   @db.NVarChar(200)
  NFC           String   @db.NVarChar(200)
  Tstamp        DateTime @default(now(), map: "DF_UpdateTempCard_Tstamp") @db.DateTime
}

model UpdateTempCardMoney {
  ID            Int      @id(map: "PK_UpdateTempCardMoney") @default(autoincrement())
  SchoolID      Int?
  Money         Decimal? @db.Decimal(18, 3)
  CardID        String?  @db.UniqueIdentifier
  CardHistoryID String?  @db.UniqueIdentifier
  NFCEncrypt    String?  @db.NVarChar(250)
  MethodName    String?  @db.NVarChar(250)
  Tstamp        DateTime @db.DateTime
}

model UserAPIResponse {
  ID               Int       @id(map: "PK_UserAPIResponse") @default(autoincrement())
  SchoolID         Int?
  MethodName       String?   @db.NVarChar(200)
  DeviceTime       DateTime? @db.DateTime
  ResponseTime     Float?
  APIProcessedTime DateTime? @db.DateTime
  Tstamp           DateTime? @db.DateTime
  EmployeeID       Int?
  ShopID           Int?
  sID              Int?
  sEmp             Int?
  UserID           Int?
  Status           String?   @db.NVarChar(500)

  @@index([APIProcessedTime], map: "INDEX_VV_129_128")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalance_03012025 {
  ID                  Int?
  SchoolID            Int?
  sID                 Int?
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.NChar(1)
  cType               String?   @db.NChar(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal?  @db.Decimal(18, 2)
  TotalTopUp          Decimal?  @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal?  @db.Decimal(18, 2)
  TotalWithDraw       Decimal?  @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal?  @db.Decimal(18, 2)
  TotalSales          Decimal?  @db.Decimal(18, 2)
  TotalCancelSales    Decimal?  @db.Decimal(18, 2)
  LastUpdatedDate     DateTime? @db.Date
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  SystemBalance       Float?    @db.Real

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalance_07012025 {
  ID                  Int?
  SchoolID            Int?
  sID                 Int?
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.NChar(1)
  cType               String?   @db.NChar(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal?  @db.Decimal(18, 2)
  TotalTopUp          Decimal?  @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal?  @db.Decimal(18, 2)
  TotalWithDraw       Decimal?  @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal?  @db.Decimal(18, 2)
  TotalSales          Decimal?  @db.Decimal(18, 2)
  TotalCancelSales    Decimal?  @db.Decimal(18, 2)
  LastUpdatedDate     DateTime? @db.Date
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  SystemBalance       Float?    @db.Real

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalance_20250106 {
  ID                  Int?
  SchoolID            Int?
  sID                 Int?
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.NChar(1)
  cType               String?   @db.NChar(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal?  @db.Decimal(18, 2)
  TotalTopUp          Decimal?  @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal?  @db.Decimal(18, 2)
  TotalWithDraw       Decimal?  @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal?  @db.Decimal(18, 2)
  TotalSales          Decimal?  @db.Decimal(18, 2)
  TotalCancelSales    Decimal?  @db.Decimal(18, 2)
  LastUpdatedDate     DateTime? @db.Date
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  SystemBalance       Float?    @db.Real

  @@ignore
}

model UserDailyBalance_Backup {
  ID                  Int       @default(autoincrement())
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @default(0, map: "DF_Move_UserDailyBalance_OpeningBalance") @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @default(0, map: "DF_Move_UserDailyBalance_OfflineSales") @db.Decimal(18, 2)
  SystemBalance       Float     @default(0, map: "DF__Move_User__Syste__4282C7A2")

  @@id([ID, SchoolID, sID], map: "PK_Move_UserDailyBalance")
  @@index([BusinessDate, SchoolID], map: "INDEX_VV_Move_147473_147472")
  @@index([BusinessDate], map: "INDEX_VV_Move_5043508_5043507")
  @@index([BusinessDate], map: "INDEX_VV_Move_748_747")
  @@index([SchoolID, BusinessDate], map: "IX_Move_UserDailyBalance_SchoolID_BusinessDate")
  @@index([sID, BusinessDate], map: "IX_VV_Move_UserDailyBalance_sID_BusinessDate")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalance_Backup1 {
  ID                  Int       @default(autoincrement())
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  SystemBalance       Float

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalance_Mismatch {
  ID                  Int       @default(autoincrement())
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  SystemBalance       Float

  @@ignore
}

model UserDailyBalance_Searlize {
  ID               Int       @default(autoincrement())
  SchoolID         Int
  BusinessDate     DateTime? @db.Date
  UserDailyBalance String?   @db.NVarChar(Max)
  LastUpdatedDate  DateTime  @db.DateTime

  @@id([ID, SchoolID], map: "PK_UserDailyBalance_Searlize")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalanceSchoolIDs {
  SchoolID  Int
  StartDate DateTime? @db.Date
  EndDate   DateTime? @db.Date

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalanceSummaryData {
  dDate       DateTime? @db.Date
  SchoolID    Int?
  NoOfRecords Int?
  MinDate     DateTime? @db.Date
  MaxDate     DateTime? @db.Date
  TotalDays   Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalanceSummarySales {
  sID        Int
  TotalSales Decimal? @db.Decimal(38, 2)

  @@ignore
}

model UserDailyBalanceTemp {
  ID                  Int
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  SystemBalance       Decimal   @db.Decimal(18, 2)

  @@id([ID, SchoolID, sID], map: "PK_UserDailyBalanceTemp")
}

model UserDailyBalanceTempCard {
  SchoolID            Int
  sID                 Int
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.Char(1)
  cType               String    @db.Char(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal   @db.Decimal(18, 2)
  TotalTopUp          Decimal   @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal   @db.Decimal(18, 2)
  TotalWithDraw       Decimal   @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal   @db.Decimal(18, 2)
  TotalSales          Decimal   @db.Decimal(18, 2)
  TotalCancelSales    Decimal   @db.Decimal(18, 2)
  LastUpdatedDate     String    @db.VarChar(23)
  Balance             Decimal?  @db.Decimal(18, 2)
  CardHistoryID       String?   @db.UniqueIdentifier
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  Insurance           Float
  SystemBalance       Float?
  ID                  Int       @id(map: "PK_UserDailyBalanceTempCard") @default(autoincrement())

  @@index([BusinessDate], map: "INDEX_VV_17611_17610")
  @@index([BusinessDate], map: "INDEX_VV_23541_23540")
  @@index([SchoolID, BusinessDate, CardHistoryID], map: "INDEX_VV_25960_25959")
  @@index([SchoolID, BusinessDate], map: "INDEX_VV_41297_41296")
  @@index([BusinessDate], map: "INDEX_VV_90713_90712")
  @@index([BusinessDate, CardHistoryID], map: "INDEX_VV_93291_93290")
  @@index([BusinessDate], map: "IX_UserDailyBalanceTempCard")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalanceTempCard_07012025 {
  SchoolID            Int?
  sID                 Int?
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.NChar(1)
  cType               String?   @db.NChar(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal?  @db.Decimal(18, 2)
  TotalTopUp          Decimal?  @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal?  @db.Decimal(18, 2)
  TotalWithDraw       Decimal?  @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal?  @db.Decimal(18, 2)
  TotalSales          Decimal?  @db.Decimal(18, 2)
  TotalCancelSales    Decimal?  @db.Decimal(18, 2)
  LastUpdatedDate     DateTime? @db.Date
  Balance             Decimal?  @db.Decimal(18, 2)
  CardHistoryID       String?   @db.UniqueIdentifier
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  Insurance           Float?    @db.Real
  SystemBalance       Float?    @db.Real
  ID                  Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model UserDailyBalanceTempCard_20250106 {
  SchoolID            Int?
  sID                 Int?
  sStudentID          String?   @db.NVarChar(20)
  sName               String?   @db.NVarChar(256)
  sLastname           String?   @db.NVarChar(256)
  cDel                String?   @db.NChar(1)
  cType               String?   @db.NChar(1)
  BusinessDate        DateTime? @db.Date
  OpeningBalance      Decimal?  @db.Decimal(18, 2)
  TotalTopUp          Decimal?  @db.Decimal(18, 2)
  TotalCancelTopUp    Decimal?  @db.Decimal(18, 2)
  TotalWithDraw       Decimal?  @db.Decimal(18, 2)
  TotalCancelWithDraw Decimal?  @db.Decimal(18, 2)
  TotalSales          Decimal?  @db.Decimal(18, 2)
  TotalCancelSales    Decimal?  @db.Decimal(18, 2)
  LastUpdatedDate     DateTime? @db.Date
  Balance             Decimal?  @db.Decimal(18, 2)
  CardHistoryID       String?   @db.UniqueIdentifier
  OfflineSales        Decimal?  @db.Decimal(18, 2)
  Insurance           Float?    @db.Real
  SystemBalance       Float?    @db.Real
  ID                  Int?

  @@ignore
}

model UserDailySales {
  SalesID          Int      @id(map: "PK_UserDailySales") @default(autoincrement())
  SchoolID         Int
  sID              Int
  sStudentID       String?  @db.NVarChar(200)
  SName            String?  @db.NVarChar(200)
  sLastName        String?  @db.NVarChar(200)
  cDel             String?  @db.NVarChar(50)
  cType            Int
  TotalSales       Decimal  @db.Decimal(18, 2)
  TotalCancelSales Decimal  @db.Decimal(18, 2)
  TransactionDate  DateTime @db.DateTime
  BusinessDate     DateTime @db.DateTime
}

model UserUsedLimit {
  ID         Int      @id(map: "PK_UserUsedLimit") @default(autoincrement())
  UserID     Int
  UserType   String   @db.VarChar(10)
  UsedAmount Decimal  @default(0, map: "DF_Table_1_DailyUsedLimit") @db.Decimal(18, 2)
  Tstamp     DateTime @default(now(), map: "DF_UserUsedLimit_Tstamp") @db.DateTime

  @@index([UsedAmount, UserID, ID], map: "_dta_index_UserUsedLimit_8_1787153412__K2_K1_4")
  @@index([Tstamp], map: "INDEX_VV_19190_19189")
  @@index([UserID, UserType], map: "IX_UserUsedLimit")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model V_TProduct_WS_Stock1 {
  nProductID  Int
  sProduct    String?   @db.NVarChar(512)
  sBarCode    String?   @db.NVarChar(50)
  nNumber     Int?
  nCost       Decimal?  @db.Decimal(18, 2)
  nPrice      Decimal?  @db.Decimal(18, 2)
  nBalance    Int?
  nType       Int?
  cDel        String?   @db.Char(1)
  nWarn       Int?
  cStock      String?   @db.Char(1)
  SchoolID    Int
  CreatedBy   Int?
  UpdatedBy   Int?
  CreatedDate DateTime? @db.DateTime
  UpdatedDate DateTime? @db.DateTime
  Quantity    Int?
  CountSell   Int?
  CountStock  Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model V_UsedShopID {
  ShopID Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model V_UsersList {
  SchoolID       Int
  sID            Int
  sStudentID     String?   @db.NVarChar(20)
  sName          String?   @db.NVarChar(256)
  sLastName      String?   @db.NVarChar(256)
  cDel           String?   @db.VarChar(30)
  cType          Int
  nMoney         Decimal?  @db.Decimal(18, 2)
  nStudentStatus Int?
  CreatedDate    DateTime? @db.DateTime

  @@ignore
}
