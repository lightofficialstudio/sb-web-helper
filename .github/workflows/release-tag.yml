name: üöÄ Release Tag Version

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to deploy (optional, e.g. 1.0.0). If empty = deploy current commit on main"
        required: false

jobs:
  build:
    name: "üî® Build on Runner"
    runs-on: ubuntu-latest

    steps:
      - name: "üì• Checkout (branch or tag)"
        uses: actions/checkout@v4
        with:
          # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ inputs.tag ‡πÉ‡∏´‡πâ checkout ‡∏ó‡∏µ‡πà tag; ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡πÉ‡∏ä‡πâ commit ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
          ref: ${{ inputs.tag && format('refs/tags/{0}', inputs.tag) || github.sha }}

      - name: "‚öôÔ∏è Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: "üì¶ Install Dependencies"
        run: npm ci

      - name: "üèóÔ∏è Build Project"
        run: npm run build
        # ‡∏ñ‡πâ‡∏≤ Next.js ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡πâ‡∏á output: 'standalone' ‡∏à‡∏∞‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á

      - name: "üì§ Archive Build Artifacts"
        run: |
          rm -f build.zip
          zip -r build.zip \
            .next \
            public \
            generated/prisma \
            package.json \
            package-lock.json \
            next.config.mjs

      - name: "‚¨ÜÔ∏è Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build.zip

  deploy:
    name: "üöö Deploy to Server"
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: "üì• Download Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: "üîê Copy to Server via SCP"
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.HUAWEI_CLOUD_HOST }}
          username: ${{ secrets.HUAWEI_CLOUD_USERNAME }}
          password: ${{ secrets.HUAWEI_CLOUD_PASSWORD }}
          port: ${{ secrets.HUAWEI_CLOUD_SSH_PORT }}
          source: "build.zip"
          target: "/var/www/sb-web-helper/uploads"

      - name: "üóúÔ∏è Unzip, Switch Symlink, Install, Healthcheck (with auto-rollback)"
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HUAWEI_CLOUD_HOST }}
          username: ${{ secrets.HUAWEI_CLOUD_USERNAME }}
          password: ${{ secrets.HUAWEI_CLOUD_PASSWORD }}
          port: ${{ secrets.HUAWEI_CLOUD_SSH_PORT }}
          script: |
            set -e
            APP_DIR=/var/www/sb-web-helper
            UPLOADS=$APP_DIR/uploads
            RELEASES=$APP_DIR/releases
            mkdir -p "$RELEASES"

            TAG="${{ inputs.tag }}"
            if [ -z "$TAG" ]; then TAG="main"; fi
            TS=$(date +%Y%m%d%H%M%S)
            NEW_RELEASE="$RELEASES/${TS}-${TAG}"

            # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° release ‡πÉ‡∏´‡∏°‡πà
            mkdir -p "$NEW_RELEASE"
            cd "$NEW_RELEASE"
            unzip -o "$UPLOADS/build.zip"

            # ‡∏•‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ production deps (‡πÄ‡∏£‡πá‡∏ß+‡πÄ‡∏ö‡∏≤)
            # ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Next.js standalone ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏î‡πâ
            npm ci --omit=dev

            # ‡∏à‡∏≥ current ‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏•‡∏±‡∏ö
            PREV_RELEASE=$(readlink -f "$APP_DIR/current" || true)

            # ‡∏™‡∏•‡∏±‡∏ö symlink -> release ‡πÉ‡∏´‡∏°‡πà
            ln -sfn "$NEW_RELEASE" "$APP_DIR/current"

            # Restart service
            sudo systemctl restart sb-web-helper.service

            # Health Check (‡πÅ‡∏Å‡πâ URL ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
            # ‡∏ñ‡πâ‡∏≤ reverse proxy ‡πÄ‡∏õ‡πá‡∏ô Nginx/PM2 ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ localhost:PORT ‡∏Ç‡∏≠‡∏á service
            if ! curl -fsS http://127.0.0.1:3000/health > /dev/null; then
              echo "‚ùå Health check failed. Rolling back..."
              if [ -n "$PREV_RELEASE" ]; then
                ln -sfn "$PREV_RELEASE" "$APP_DIR/current"
                sudo systemctl restart sb-web-helper.service
                echo "‚Ü©Ô∏è Rolled back to $PREV_RELEASE"
              fi
              exit 1
            fi

            echo "‚úÖ Deployed release: $NEW_RELEASE"

            # (‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ‡∏•‡πâ‡∏≤‡∏á release ‡πÄ‡∏Å‡πà‡∏≤ ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 10 ‡∏ä‡∏∏‡∏î
            ls -1dt "$RELEASES"/* | tail -n +11 | xargs -r rm -rf